{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class CodeLensModel {\n  constructor() {\n    this.lenses = [];\n    this._disposables = new DisposableStore();\n  }\n  dispose() {\n    this._disposables.dispose();\n  }\n  get isDisposed() {\n    return this._disposables.isDisposed;\n  }\n  add(list, provider) {\n    this._disposables.add(list);\n    for (const symbol of list.lenses) {\n      this.lenses.push({\n        symbol,\n        provider\n      });\n    }\n  }\n}\nexport async function getCodeLensModel(registry, model, token) {\n  const provider = registry.ordered(model);\n  const providerRanks = new Map();\n  const result = new CodeLensModel();\n  const promises = provider.map(async (provider, i) => {\n    providerRanks.set(provider, i);\n    try {\n      const list = await Promise.resolve(provider.provideCodeLenses(model, token));\n      if (list) {\n        result.add(list, provider);\n      }\n    } catch (err) {\n      onUnexpectedExternalError(err);\n    }\n  });\n  await Promise.all(promises);\n  result.lenses = result.lenses.sort((a, b) => {\n    // sort by lineNumber, provider-rank, and column\n    if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\n      return -1;\n    } else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\n      return 1;\n    } else if (providerRanks.get(a.provider) < providerRanks.get(b.provider)) {\n      return -1;\n    } else if (providerRanks.get(a.provider) > providerRanks.get(b.provider)) {\n      return 1;\n    } else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\n      return -1;\n    } else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n  return result;\n}\nCommandsRegistry.registerCommand('_executeCodeLensProvider', function (accessor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  let [uri, itemResolveCount] = args;\n  assertType(URI.isUri(uri));\n  assertType(typeof itemResolveCount === 'number' || !itemResolveCount);\n  const {\n    codeLensProvider\n  } = accessor.get(ILanguageFeaturesService);\n  const model = accessor.get(IModelService).getModel(uri);\n  if (!model) {\n    throw illegalArgument();\n  }\n  const result = [];\n  const disposables = new DisposableStore();\n  return getCodeLensModel(codeLensProvider, model, CancellationToken.None).then(value => {\n    disposables.add(value);\n    const resolve = [];\n    for (const item of value.lenses) {\n      if (itemResolveCount === undefined || itemResolveCount === null || Boolean(item.symbol.command)) {\n        result.push(item.symbol);\n      } else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\n        resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, CancellationToken.None)).then(symbol => result.push(symbol || item.symbol)));\n      }\n    }\n    return Promise.all(resolve);\n  }).then(() => {\n    return result;\n  }).finally(() => {\n    // make sure to return results, then (on next tick)\n    // dispose the results\n    setTimeout(() => disposables.dispose(), 100);\n  });\n});","map":{"version":3,"names":["CancellationToken","illegalArgument","onUnexpectedExternalError","DisposableStore","assertType","URI","IModelService","CommandsRegistry","ILanguageFeaturesService","CodeLensModel","constructor","lenses","_disposables","dispose","isDisposed","add","list","provider","symbol","push","getCodeLensModel","registry","model","token","ordered","providerRanks","Map","result","promises","map","i","set","Promise","resolve","provideCodeLenses","err","all","sort","a","b","range","startLineNumber","get","startColumn","registerCommand","accessor","_len","arguments","length","args","Array","_key","uri","itemResolveCount","isUri","codeLensProvider","getModel","disposables","None","then","value","item","undefined","Boolean","command","resolveCodeLens","finally","setTimeout"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codelens.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class CodeLensModel {\n    constructor() {\n        this.lenses = [];\n        this._disposables = new DisposableStore();\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    get isDisposed() {\n        return this._disposables.isDisposed;\n    }\n    add(list, provider) {\n        this._disposables.add(list);\n        for (const symbol of list.lenses) {\n            this.lenses.push({ symbol, provider });\n        }\n    }\n}\nexport async function getCodeLensModel(registry, model, token) {\n    const provider = registry.ordered(model);\n    const providerRanks = new Map();\n    const result = new CodeLensModel();\n    const promises = provider.map(async (provider, i) => {\n        providerRanks.set(provider, i);\n        try {\n            const list = await Promise.resolve(provider.provideCodeLenses(model, token));\n            if (list) {\n                result.add(list, provider);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n    });\n    await Promise.all(promises);\n    result.lenses = result.lenses.sort((a, b) => {\n        // sort by lineNumber, provider-rank, and column\n        if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\n            return -1;\n        }\n        else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\n            return 1;\n        }\n        else if ((providerRanks.get(a.provider)) < (providerRanks.get(b.provider))) {\n            return -1;\n        }\n        else if ((providerRanks.get(a.provider)) > (providerRanks.get(b.provider))) {\n            return 1;\n        }\n        else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\n            return -1;\n        }\n        else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    });\n    return result;\n}\nCommandsRegistry.registerCommand('_executeCodeLensProvider', function (accessor, ...args) {\n    let [uri, itemResolveCount] = args;\n    assertType(URI.isUri(uri));\n    assertType(typeof itemResolveCount === 'number' || !itemResolveCount);\n    const { codeLensProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        throw illegalArgument();\n    }\n    const result = [];\n    const disposables = new DisposableStore();\n    return getCodeLensModel(codeLensProvider, model, CancellationToken.None).then(value => {\n        disposables.add(value);\n        const resolve = [];\n        for (const item of value.lenses) {\n            if (itemResolveCount === undefined || itemResolveCount === null || Boolean(item.symbol.command)) {\n                result.push(item.symbol);\n            }\n            else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\n                resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, CancellationToken.None)).then(symbol => result.push(symbol || item.symbol)));\n            }\n        }\n        return Promise.all(resolve);\n    }).then(() => {\n        return result;\n    }).finally(() => {\n        // make sure to return results, then (on next tick)\n        // dispose the results\n        setTimeout(() => disposables.dispose(), 100);\n    });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,eAAe,EAAEC,yBAAyB,QAAQ,mCAAmC;AAC9F,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,GAAG,QAAQ,gCAAgC;AACpD,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,gBAAgB,QAAQ,kDAAkD;AACnF,SAASC,wBAAwB,QAAQ,8CAA8C;AACvF,OAAO,MAAMC,aAAa,CAAC;EACvBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,YAAY,GAAG,IAAIT,eAAe,CAAC,CAAC;EAC7C;EACAU,OAAOA,CAAA,EAAG;IACN,IAAI,CAACD,YAAY,CAACC,OAAO,CAAC,CAAC;EAC/B;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACF,YAAY,CAACE,UAAU;EACvC;EACAC,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IAChB,IAAI,CAACL,YAAY,CAACG,GAAG,CAACC,IAAI,CAAC;IAC3B,KAAK,MAAME,MAAM,IAAIF,IAAI,CAACL,MAAM,EAAE;MAC9B,IAAI,CAACA,MAAM,CAACQ,IAAI,CAAC;QAAED,MAAM;QAAED;MAAS,CAAC,CAAC;IAC1C;EACJ;AACJ;AACA,OAAO,eAAeG,gBAAgBA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAC3D,MAAMN,QAAQ,GAAGI,QAAQ,CAACG,OAAO,CAACF,KAAK,CAAC;EACxC,MAAMG,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC/B,MAAMC,MAAM,GAAG,IAAIlB,aAAa,CAAC,CAAC;EAClC,MAAMmB,QAAQ,GAAGX,QAAQ,CAACY,GAAG,CAAC,OAAOZ,QAAQ,EAAEa,CAAC,KAAK;IACjDL,aAAa,CAACM,GAAG,CAACd,QAAQ,EAAEa,CAAC,CAAC;IAC9B,IAAI;MACA,MAAMd,IAAI,GAAG,MAAMgB,OAAO,CAACC,OAAO,CAAChB,QAAQ,CAACiB,iBAAiB,CAACZ,KAAK,EAAEC,KAAK,CAAC,CAAC;MAC5E,IAAIP,IAAI,EAAE;QACNW,MAAM,CAACZ,GAAG,CAACC,IAAI,EAAEC,QAAQ,CAAC;MAC9B;IACJ,CAAC,CACD,OAAOkB,GAAG,EAAE;MACRjC,yBAAyB,CAACiC,GAAG,CAAC;IAClC;EACJ,CAAC,CAAC;EACF,MAAMH,OAAO,CAACI,GAAG,CAACR,QAAQ,CAAC;EAC3BD,MAAM,CAAChB,MAAM,GAAGgB,MAAM,CAAChB,MAAM,CAAC0B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACzC;IACA,IAAID,CAAC,CAACpB,MAAM,CAACsB,KAAK,CAACC,eAAe,GAAGF,CAAC,CAACrB,MAAM,CAACsB,KAAK,CAACC,eAAe,EAAE;MACjE,OAAO,CAAC,CAAC;IACb,CAAC,MACI,IAAIH,CAAC,CAACpB,MAAM,CAACsB,KAAK,CAACC,eAAe,GAAGF,CAAC,CAACrB,MAAM,CAACsB,KAAK,CAACC,eAAe,EAAE;MACtE,OAAO,CAAC;IACZ,CAAC,MACI,IAAKhB,aAAa,CAACiB,GAAG,CAACJ,CAAC,CAACrB,QAAQ,CAAC,GAAKQ,aAAa,CAACiB,GAAG,CAACH,CAAC,CAACtB,QAAQ,CAAE,EAAE;MACxE,OAAO,CAAC,CAAC;IACb,CAAC,MACI,IAAKQ,aAAa,CAACiB,GAAG,CAACJ,CAAC,CAACrB,QAAQ,CAAC,GAAKQ,aAAa,CAACiB,GAAG,CAACH,CAAC,CAACtB,QAAQ,CAAE,EAAE;MACxE,OAAO,CAAC;IACZ,CAAC,MACI,IAAIqB,CAAC,CAACpB,MAAM,CAACsB,KAAK,CAACG,WAAW,GAAGJ,CAAC,CAACrB,MAAM,CAACsB,KAAK,CAACG,WAAW,EAAE;MAC9D,OAAO,CAAC,CAAC;IACb,CAAC,MACI,IAAIL,CAAC,CAACpB,MAAM,CAACsB,KAAK,CAACG,WAAW,GAAGJ,CAAC,CAACrB,MAAM,CAACsB,KAAK,CAACG,WAAW,EAAE;MAC9D,OAAO,CAAC;IACZ,CAAC,MACI;MACD,OAAO,CAAC;IACZ;EACJ,CAAC,CAAC;EACF,OAAOhB,MAAM;AACjB;AACApB,gBAAgB,CAACqC,eAAe,CAAC,0BAA0B,EAAE,UAAUC,QAAQ,EAAW;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EACpF,IAAI,CAACC,GAAG,EAAEC,gBAAgB,CAAC,GAAGJ,IAAI;EAClC7C,UAAU,CAACC,GAAG,CAACiD,KAAK,CAACF,GAAG,CAAC,CAAC;EAC1BhD,UAAU,CAAC,OAAOiD,gBAAgB,KAAK,QAAQ,IAAI,CAACA,gBAAgB,CAAC;EACrE,MAAM;IAAEE;EAAiB,CAAC,GAAGV,QAAQ,CAACH,GAAG,CAAClC,wBAAwB,CAAC;EACnE,MAAMc,KAAK,GAAGuB,QAAQ,CAACH,GAAG,CAACpC,aAAa,CAAC,CAACkD,QAAQ,CAACJ,GAAG,CAAC;EACvD,IAAI,CAAC9B,KAAK,EAAE;IACR,MAAMrB,eAAe,CAAC,CAAC;EAC3B;EACA,MAAM0B,MAAM,GAAG,EAAE;EACjB,MAAM8B,WAAW,GAAG,IAAItD,eAAe,CAAC,CAAC;EACzC,OAAOiB,gBAAgB,CAACmC,gBAAgB,EAAEjC,KAAK,EAAEtB,iBAAiB,CAAC0D,IAAI,CAAC,CAACC,IAAI,CAACC,KAAK,IAAI;IACnFH,WAAW,CAAC1C,GAAG,CAAC6C,KAAK,CAAC;IACtB,MAAM3B,OAAO,GAAG,EAAE;IAClB,KAAK,MAAM4B,IAAI,IAAID,KAAK,CAACjD,MAAM,EAAE;MAC7B,IAAI0C,gBAAgB,KAAKS,SAAS,IAAIT,gBAAgB,KAAK,IAAI,IAAIU,OAAO,CAACF,IAAI,CAAC3C,MAAM,CAAC8C,OAAO,CAAC,EAAE;QAC7FrC,MAAM,CAACR,IAAI,CAAC0C,IAAI,CAAC3C,MAAM,CAAC;MAC5B,CAAC,MACI,IAAImC,gBAAgB,EAAE,GAAG,CAAC,IAAIQ,IAAI,CAAC5C,QAAQ,CAACgD,eAAe,EAAE;QAC9DhC,OAAO,CAACd,IAAI,CAACa,OAAO,CAACC,OAAO,CAAC4B,IAAI,CAAC5C,QAAQ,CAACgD,eAAe,CAAC3C,KAAK,EAAEuC,IAAI,CAAC3C,MAAM,EAAElB,iBAAiB,CAAC0D,IAAI,CAAC,CAAC,CAACC,IAAI,CAACzC,MAAM,IAAIS,MAAM,CAACR,IAAI,CAACD,MAAM,IAAI2C,IAAI,CAAC3C,MAAM,CAAC,CAAC,CAAC;MAC/J;IACJ;IACA,OAAOc,OAAO,CAACI,GAAG,CAACH,OAAO,CAAC;EAC/B,CAAC,CAAC,CAAC0B,IAAI,CAAC,MAAM;IACV,OAAOhC,MAAM;EACjB,CAAC,CAAC,CAACuC,OAAO,CAAC,MAAM;IACb;IACA;IACAC,UAAU,CAAC,MAAMV,WAAW,CAAC5C,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC;EAChD,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}