{"ast":null,"code":"export * from './actor';\nexport * from './agent';\nexport * from './agent/http/transforms';\nexport * from './agent/http/types';\nexport * from './auth';\nexport * from './canisters/asset';\nexport * from './certificate';\nexport * from './der';\nexport * from './fetch_candid';\nexport * from './public_key';\nexport * from './request_id';\nexport * from './utils/bls';\nexport * from './utils/buffer';\nexport * from './utils/random';\nimport * as _polling from './polling';\nexport { _polling as polling };\nimport * as _CanisterStatus from './canisterStatus';\nexport { _CanisterStatus as CanisterStatus };\nimport * as _Cbor from './cbor';\nexport { _Cbor as Cbor };\nexport * from './polling';","map":{"version":3,"names":["_polling","polling","_CanisterStatus","CanisterStatus","_Cbor","Cbor"],"sources":["/home/arslan/modojo/node_modules/@dfinity/agent/src/index.ts"],"sourcesContent":["import { ActorSubclass } from './actor';\n\nexport * from './actor';\nexport * from './agent';\nexport * from './agent/http/transforms';\nexport * from './agent/http/types';\nexport * from './auth';\nexport * from './canisters/asset';\nexport * from './certificate';\nexport * from './der';\nexport * from './fetch_candid';\nexport * from './public_key';\nexport * from './request_id';\nexport * from './utils/bls';\nexport * from './utils/buffer';\nexport * from './utils/random';\nexport * as polling from './polling';\nimport * as CanisterStatus from './canisterStatus';\nexport * as CanisterStatus from './canisterStatus';\n/**\n * The CanisterStatus utility is used to request structured data directly from the IC public API. This data can be accessed using agent.readState, but CanisterStatus provides a helpful abstraction with some known paths.\n *\n * You can request a canisters Controllers, ModuleHash, Candid interface, Subnet, or Time, or provide a custom path {@link CanisterStatus.CustomPath} and pass arbitrary buffers for valid paths identified in https://internetcomputer.org/docs/current/references/ic-interface-spec.\n *\n * The primary method for this namespace is {@link CanisterStatus.request}\n */\n\nimport { Agent, HttpAgent } from './agent';\nimport { IDL } from '@dfinity/candid';\n\nexport * as Cbor from './cbor';\nexport * from './polling';\n\nexport interface GlobalInternetComputer {\n  ic: {\n    agent: Agent;\n    HttpAgent: typeof HttpAgent;\n    IDL: typeof IDL;\n    /**\n     * Simple advertisement of features in whoever is managing this `globalThis.ic`.\n     * Use Case\n     * - Scripts that know they need an ic feature can detect using this and, if not present\n     *   (e.g. old bootstrap version), they can dynamically include their own and continue\n     *   operating (e.g. polyfill).\n     *   This is useful when adding features to bootstrap. You can still deploy your canister to\n     *   an ic with old bootstrap, then just dynamically reload your own new-version bootstrap if\n     *   needed.\n     */\n    features?: {\n      /** This is falsy if authn isn't supported at all */\n      authentication?: boolean;\n    };\n    /**\n     * The Actor for the canister being used for the frontend. Normally should correspond to the\n     * canister represented by the canister id in the URL.\n     *\n     * It does not have any functions configured.\n     *\n     * If a canister ID could not be found, no actor were created and this is undefined.\n     */\n    canister: ActorSubclass | undefined;\n  };\n}\n"],"mappings":"AAEA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,yBAAyB;AACvC,cAAc,oBAAoB;AAClC,cAAc,QAAQ;AACtB,cAAc,mBAAmB;AACjC,cAAc,eAAe;AAC7B,cAAc,OAAO;AACrB,cAAc,gBAAgB;AAC9B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,aAAa;AAC3B,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAAC,YAAAA,QAAA,MACN,WAAW;AAAA,SAAAA,QAAA,IAAxBC,OAAO;AAAA,YAAAC,eAAA,MAEa,kBAAkB;AAAA,SAAAA,eAAA,IAAtCC,cAAc;AAAA,YAAAC,KAAA,MAYJ,QAAQ;AAAA,SAAAA,KAAA,IAAlBC,IAAI;AAChB,cAAc,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}