{"ast":null,"code":"import '../../editor/editor.api.js';\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/json/monaco.contribution.ts\nvar LanguageServiceDefaultsImpl = class {\n  constructor(languageId, diagnosticsOptions, modeConfiguration) {\n    this._onDidChange = new monaco_editor_core_exports.Emitter();\n    this._languageId = languageId;\n    this.setDiagnosticsOptions(diagnosticsOptions);\n    this.setModeConfiguration(modeConfiguration);\n  }\n  get onDidChange() {\n    return this._onDidChange.event;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get modeConfiguration() {\n    return this._modeConfiguration;\n  }\n  get diagnosticsOptions() {\n    return this._diagnosticsOptions;\n  }\n  setDiagnosticsOptions(options) {\n    this._diagnosticsOptions = options || /* @__PURE__ */Object.create(null);\n    this._onDidChange.fire(this);\n  }\n  setModeConfiguration(modeConfiguration) {\n    this._modeConfiguration = modeConfiguration || /* @__PURE__ */Object.create(null);\n    this._onDidChange.fire(this);\n  }\n};\nvar diagnosticDefault = {\n  validate: true,\n  allowComments: true,\n  schemas: [],\n  enableSchemaRequest: false,\n  schemaRequest: \"warning\",\n  schemaValidation: \"warning\",\n  comments: \"error\",\n  trailingCommas: \"error\"\n};\nvar modeConfigurationDefault = {\n  documentFormattingEdits: true,\n  documentRangeFormattingEdits: true,\n  completionItems: true,\n  hovers: true,\n  documentSymbols: true,\n  tokens: true,\n  colors: true,\n  foldingRanges: true,\n  diagnostics: true,\n  selectionRanges: true\n};\nvar jsonDefaults = new LanguageServiceDefaultsImpl(\"json\", diagnosticDefault, modeConfigurationDefault);\nvar getWorker = () => getMode().then(mode => mode.getWorker());\nmonaco_editor_core_exports.languages.json = {\n  jsonDefaults,\n  getWorker\n};\nfunction getMode() {\n  if (false) {\n    return new Promise((resolve, reject) => {\n      __require([\"vs/language/json/jsonMode\"], resolve, reject);\n    });\n  } else {\n    return import(\"./jsonMode.js\");\n  }\n}\nmonaco_editor_core_exports.languages.register({\n  id: \"json\",\n  extensions: [\".json\", \".bowerrc\", \".jshintrc\", \".jscsrc\", \".eslintrc\", \".babelrc\", \".har\"],\n  aliases: [\"JSON\", \"json\"],\n  mimetypes: [\"application/json\"]\n});\nmonaco_editor_core_exports.languages.onLanguage(\"json\", () => {\n  getMode().then(mode => mode.setupMode(jsonDefaults));\n});\nexport { getWorker, jsonDefaults };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__reExport","target","mod","secondTarget","monaco_editor_core_exports","monaco_editor_core_star","LanguageServiceDefaultsImpl","constructor","languageId","diagnosticsOptions","modeConfiguration","_onDidChange","Emitter","_languageId","setDiagnosticsOptions","setModeConfiguration","onDidChange","event","_modeConfiguration","_diagnosticsOptions","options","create","fire","diagnosticDefault","validate","allowComments","schemas","enableSchemaRequest","schemaRequest","schemaValidation","comments","trailingCommas","modeConfigurationDefault","documentFormattingEdits","documentRangeFormattingEdits","completionItems","hovers","documentSymbols","tokens","colors","foldingRanges","diagnostics","selectionRanges","jsonDefaults","getWorker","getMode","then","mode","languages","json","Promise","resolve","reject","__require","register","id","extensions","aliases","mimetypes","onLanguage","setupMode"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js"],"sourcesContent":["import '../../editor/editor.api.js';\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/json/monaco.contribution.ts\nvar LanguageServiceDefaultsImpl = class {\n  constructor(languageId, diagnosticsOptions, modeConfiguration) {\n    this._onDidChange = new monaco_editor_core_exports.Emitter();\n    this._languageId = languageId;\n    this.setDiagnosticsOptions(diagnosticsOptions);\n    this.setModeConfiguration(modeConfiguration);\n  }\n  get onDidChange() {\n    return this._onDidChange.event;\n  }\n  get languageId() {\n    return this._languageId;\n  }\n  get modeConfiguration() {\n    return this._modeConfiguration;\n  }\n  get diagnosticsOptions() {\n    return this._diagnosticsOptions;\n  }\n  setDiagnosticsOptions(options) {\n    this._diagnosticsOptions = options || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(this);\n  }\n  setModeConfiguration(modeConfiguration) {\n    this._modeConfiguration = modeConfiguration || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(this);\n  }\n};\nvar diagnosticDefault = {\n  validate: true,\n  allowComments: true,\n  schemas: [],\n  enableSchemaRequest: false,\n  schemaRequest: \"warning\",\n  schemaValidation: \"warning\",\n  comments: \"error\",\n  trailingCommas: \"error\"\n};\nvar modeConfigurationDefault = {\n  documentFormattingEdits: true,\n  documentRangeFormattingEdits: true,\n  completionItems: true,\n  hovers: true,\n  documentSymbols: true,\n  tokens: true,\n  colors: true,\n  foldingRanges: true,\n  diagnostics: true,\n  selectionRanges: true\n};\nvar jsonDefaults = new LanguageServiceDefaultsImpl(\n  \"json\",\n  diagnosticDefault,\n  modeConfigurationDefault\n);\nvar getWorker = () => getMode().then((mode) => mode.getWorker());\nmonaco_editor_core_exports.languages.json = { jsonDefaults, getWorker };\nfunction getMode() {\n  if (false) {\n    return new Promise((resolve, reject) => {\n      __require([\"vs/language/json/jsonMode\"], resolve, reject);\n    });\n  } else {\n    return import(\"./jsonMode.js\");\n  }\n}\nmonaco_editor_core_exports.languages.register({\n  id: \"json\",\n  extensions: [\".json\", \".bowerrc\", \".jshintrc\", \".jscsrc\", \".eslintrc\", \".babelrc\", \".har\"],\n  aliases: [\"JSON\", \"json\"],\n  mimetypes: [\"application/json\"]\n});\nmonaco_editor_core_exports.languages.onLanguage(\"json\", () => {\n  getMode().then((mode) => mode.setupMode(jsonDefaults));\n});\nexport {\n  getWorker,\n  jsonDefaults\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}