{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport { ObservableElementSizeObserver, applyStyle, applyViewZones, readHotReloadableExport, translatePosition } from './utils.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nlet DiffEditorWidget = class DiffEditorWidget extends DelegatingEditor {\n  get onDidContentSizeChange() {\n    return this._editors.onDidContentSizeChange;\n  }\n  constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _accessibilitySignalService, _editorProgressService) {\n    var _a;\n    super();\n    this._domElement = _domElement;\n    this._parentContextKeyService = _parentContextKeyService;\n    this._parentInstantiationService = _parentInstantiationService;\n    this._accessibilitySignalService = _accessibilitySignalService;\n    this._editorProgressService = _editorProgressService;\n    this.elements = h('div.monaco-diff-editor.side-by-side', {\n      style: {\n        position: 'relative',\n        height: '100%'\n      }\n    }, [h('div.editor.original@original', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.editor.modified@modified', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.accessibleDiffViewer@accessibleDiffViewer', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    })]);\n    this._diffModel = observableValue(this, undefined);\n    this._shouldDisposeDiffModel = false;\n    this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n    this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n    this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n    this._boundarySashes = observableValue(this, undefined);\n    this._accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n    this._accessibleDiffViewerVisible = derived(this, reader => this._options.onlyShowAccessibleDiffViewer.read(reader) ? true : this._accessibleDiffViewerShouldBeVisible.read(reader));\n    this._movedBlocksLinesPart = observableValue(this, undefined);\n    this._layoutInfo = derived(this, reader => {\n      var _a, _b, _c, _d, _e;\n      const fullWidth = this._rootSizeObserver.width.read(reader);\n      const fullHeight = this._rootSizeObserver.height.read(reader);\n      if (this._rootSizeObserver.automaticLayout) {\n        this.elements.root.style.height = '100%';\n      } else {\n        this.elements.root.style.height = fullHeight + 'px';\n      }\n      const sash = this._sash.read(reader);\n      const gutter = this._gutter.read(reader);\n      const gutterWidth = (_a = gutter === null || gutter === void 0 ? void 0 : gutter.width.read(reader)) !== null && _a !== void 0 ? _a : 0;\n      const overviewRulerPartWidth = (_c = (_b = this._overviewRulerPart.read(reader)) === null || _b === void 0 ? void 0 : _b.width) !== null && _c !== void 0 ? _c : 0;\n      let originalLeft, originalWidth, modifiedLeft, modifiedWidth, gutterLeft;\n      const sideBySide = !!sash;\n      if (sideBySide) {\n        const sashLeft = sash.sashLeft.read(reader);\n        const movedBlocksLinesWidth = (_e = (_d = this._movedBlocksLinesPart.read(reader)) === null || _d === void 0 ? void 0 : _d.width.read(reader)) !== null && _e !== void 0 ? _e : 0;\n        originalLeft = 0;\n        originalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n        gutterLeft = sashLeft - gutterWidth;\n        modifiedLeft = sashLeft;\n        modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n      } else {\n        gutterLeft = 0;\n        originalLeft = gutterWidth;\n        originalWidth = Math.max(5, this._editors.original.getLayoutInfo().decorationsLeft);\n        modifiedLeft = gutterWidth + originalWidth;\n        modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n      }\n      this.elements.original.style.left = originalLeft + 'px';\n      this.elements.original.style.width = originalWidth + 'px';\n      this._editors.original.layout({\n        width: originalWidth,\n        height: fullHeight\n      }, true);\n      gutter === null || gutter === void 0 ? void 0 : gutter.layout(gutterLeft);\n      this.elements.modified.style.left = modifiedLeft + 'px';\n      this.elements.modified.style.width = modifiedWidth + 'px';\n      this._editors.modified.layout({\n        width: modifiedWidth,\n        height: fullHeight\n      }, true);\n      return {\n        modifiedEditor: this._editors.modified.getLayoutInfo(),\n        originalEditor: this._editors.original.getLayoutInfo()\n      };\n    });\n    this._diffValue = this._diffModel.map((m, r) => m === null || m === void 0 ? void 0 : m.diff.read(r));\n    this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n    codeEditorService.willCreateDiffEditor();\n    this._contextKeyService.createKey('isInDiffEditor', true);\n    this._domElement.appendChild(this.elements.root);\n    this._register(toDisposable(() => this._domElement.removeChild(this.elements.root)));\n    this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n    this._rootSizeObserver.setAutomaticLayout((_a = options.automaticLayout) !== null && _a !== void 0 ? _a : false);\n    this._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n    this._register(autorun(reader => {\n      this._options.setWidth(this._rootSizeObserver.width.read(reader));\n    }));\n    this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n    this._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService, reader => this._options.isInEmbeddedEditor.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService, reader => {\n      var _a;\n      return !!((_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader));\n    }));\n    this._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService, reader => this._options.couldShowInlineViewBecauseOfSize.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService, reader => !this._options.renderSideBySide.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService, reader => {\n      var _a, _b, _c;\n      return ((_c = (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.diff.read(reader)) === null || _b === void 0 ? void 0 : _b.mappings.length) !== null && _c !== void 0 ? _c : 0) > 0;\n    }));\n    this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService, reader => this._options.originalEditable.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService, reader => !this._options.readOnly.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService, reader => {\n      var _a, _b;\n      return (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.model.original.uri.toString()) !== null && _b !== void 0 ? _b : '';\n    }));\n    this._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService, reader => {\n      var _a, _b;\n      return (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.model.modified.uri.toString()) !== null && _b !== void 0 ? _b : '';\n    }));\n    this._overviewRulerPart = derivedDisposable(this, reader => !this._options.renderOverviewRuler.read(reader) ? undefined : this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerFeature, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor))).recomputeInitiallyAndOnChange(this._store);\n    const dimensions = {\n      height: this._rootSizeObserver.height,\n      width: this._rootSizeObserver.width.map((w, reader) => {\n        var _a, _b;\n        return w - ((_b = (_a = this._overviewRulerPart.read(reader)) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0);\n      })\n    };\n    this._sashLayout = new SashLayout(this._options, dimensions);\n    this._sash = derivedDisposable(this, reader => {\n      const showSash = this._options.renderSideBySide.read(reader);\n      this.elements.root.classList.toggle('side-by-side', showSash);\n      return !showSash ? undefined : new DiffEditorSash(this.elements.root, dimensions, this._options.enableSplitViewResizing, this._boundarySashes, this._sashLayout.sashLeft, () => this._sashLayout.resetSash());\n    }).recomputeInitiallyAndOnChange(this._store);\n    const unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */this._instantiationService.createInstance(readHotReloadableExport(HideUnchangedRegionsFeature, reader), this._editors, this._diffModel, this._options)).recomputeInitiallyAndOnChange(this._store);\n    derivedDisposable(this, reader => /** @description DiffEditorDecorations */this._instantiationService.createInstance(readHotReloadableExport(DiffEditorDecorations, reader), this._editors, this._diffModel, this._options, this)).recomputeInitiallyAndOnChange(this._store);\n    const origViewZoneIdsToIgnore = new Set();\n    const modViewZoneIdsToIgnore = new Set();\n    let isUpdatingViewZones = false;\n    const viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */this._instantiationService.createInstance(readHotReloadableExport(DiffEditorViewZones, reader), getWindow(this._domElement), this._editors, this._diffModel, this._options, this, () => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas, origViewZoneIdsToIgnore, modViewZoneIdsToIgnore)).recomputeInitiallyAndOnChange(this._store);\n    const originalViewZones = derived(this, reader => {\n      const orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n      const orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n      return orig.concat(orig2);\n    });\n    const modifiedViewZones = derived(this, reader => {\n      const mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n      const mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n      return mod.concat(mod2);\n    });\n    this._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n      isUpdatingViewZones = isUpdatingOrigViewZones;\n    }, origViewZoneIdsToIgnore));\n    let scrollState;\n    this._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n      isUpdatingViewZones = isUpdatingModViewZones;\n      if (isUpdatingViewZones) {\n        scrollState = StableEditorScrollState.capture(this._editors.modified);\n      } else {\n        scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(this._editors.modified);\n        scrollState = undefined;\n      }\n    }, modViewZoneIdsToIgnore));\n    this._accessibleDiffViewer = derivedDisposable(this, reader => this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => {\n      var _a;\n      return (_a = m === null || m === void 0 ? void 0 : m.diff.read(r)) === null || _a === void 0 ? void 0 : _a.mappings.map(m => m.lineRangeMapping);\n    }), new AccessibleDiffViewerModelFromEditors(this._editors))).recomputeInitiallyAndOnChange(this._store);\n    const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n    this._register(applyStyle(this.elements.modified, {\n      visibility\n    }));\n    this._register(applyStyle(this.elements.original, {\n      visibility\n    }));\n    this._createDiffEditorContributions();\n    codeEditorService.addDiffEditor(this);\n    this._gutter = derivedDisposable(this, reader => {\n      return this._options.shouldRenderGutterMenu.read(reader) ? this._instantiationService.createInstance(readHotReloadableExport(DiffEditorGutter, reader), this.elements.root, this._diffModel, this._editors, this._options, this._sashLayout, this._boundarySashes) : undefined;\n    });\n    this._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n    derivedDisposable(this, reader => /** @description MovedBlocksLinesPart */new (readHotReloadableExport(MovedBlocksLinesFeature, reader))(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors)).recomputeInitiallyAndOnChange(this._store, value => {\n      // This is to break the layout info <-> moved blocks lines part dependency cycle.\n      this._movedBlocksLinesPart.set(value, undefined);\n    });\n    this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n    this._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n    const isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n      /** @isInitializingDiff isDiffUpToDate */\n      if (!m) {\n        return undefined;\n      }\n      return m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n    });\n    this._register(autorunWithStore((reader, store) => {\n      /** @description DiffEditorWidgetHelper.ShowProgress */\n      if (isInitializingDiff.read(reader) === true) {\n        const r = this._editorProgressService.show(true, 1000);\n        store.add(toDisposable(() => r.done()));\n      }\n    }));\n    this._register(toDisposable(() => {\n      var _a;\n      if (this._shouldDisposeDiffModel) {\n        (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.dispose();\n      }\n    }));\n    this._register(autorunWithStore((reader, store) => {\n      store.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n    }));\n  }\n  _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n    const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    return editor;\n  }\n  _createDiffEditorContributions() {\n    const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n    for (const desc of contributions) {\n      try {\n        this._register(this._instantiationService.createInstance(desc.ctor, this));\n      } catch (err) {\n        onUnexpectedError(err);\n      }\n    }\n  }\n  get _targetEditor() {\n    return this._editors.modified;\n  }\n  getEditorType() {\n    return EditorType.IDiffEditor;\n  }\n  layout(dimension) {\n    this._rootSizeObserver.observe(dimension);\n  }\n  hasTextFocus() {\n    return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus();\n  }\n  saveViewState() {\n    var _a;\n    const originalViewState = this._editors.original.saveViewState();\n    const modifiedViewState = this._editors.modified.saveViewState();\n    return {\n      original: originalViewState,\n      modified: modifiedViewState,\n      modelState: (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.serializeState()\n    };\n  }\n  restoreViewState(s) {\n    var _a;\n    if (s && s.original && s.modified) {\n      const diffEditorState = s;\n      this._editors.original.restoreViewState(diffEditorState.original);\n      this._editors.modified.restoreViewState(diffEditorState.modified);\n      if (diffEditorState.modelState) {\n        (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.restoreSerializedState(diffEditorState.modelState);\n      }\n    }\n  }\n  handleInitialized() {\n    this._editors.original.handleInitialized();\n    this._editors.modified.handleInitialized();\n  }\n  createViewModel(model) {\n    return this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n  }\n  getModel() {\n    var _a, _b;\n    return (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.model) !== null && _b !== void 0 ? _b : null;\n  }\n  setModel(model, tx) {\n    if (!model && this._diffModel.get()) {\n      // Transitioning from a model to no-model\n      this._accessibleDiffViewer.get().close();\n    }\n    const vm = model ? 'model' in model ? {\n      model,\n      shouldDispose: false\n    } : {\n      model: this.createViewModel(model),\n      shouldDispose: true\n    } : undefined;\n    if (this._diffModel.get() !== (vm === null || vm === void 0 ? void 0 : vm.model)) {\n      subtransaction(tx, tx => {\n        var _a;\n        /** @description DiffEditorWidget.setModel */\n        observableFromEvent.batchEventsGlobally(tx, () => {\n          this._editors.original.setModel(vm ? vm.model.model.original : null);\n          this._editors.modified.setModel(vm ? vm.model.model.modified : null);\n        });\n        const prevValue = this._diffModel.get();\n        const shouldDispose = this._shouldDisposeDiffModel;\n        this._shouldDisposeDiffModel = (_a = vm === null || vm === void 0 ? void 0 : vm.shouldDispose) !== null && _a !== void 0 ? _a : false;\n        this._diffModel.set(vm === null || vm === void 0 ? void 0 : vm.model, tx);\n        if (shouldDispose) {\n          prevValue === null || prevValue === void 0 ? void 0 : prevValue.dispose();\n        }\n      });\n    }\n  }\n  /**\n   * @param changedOptions Only has values for top-level options that have actually changed.\n   */\n  updateOptions(changedOptions) {\n    this._options.updateOptions(changedOptions);\n  }\n  getContainerDomNode() {\n    return this._domElement;\n  }\n  getOriginalEditor() {\n    return this._editors.original;\n  }\n  getModifiedEditor() {\n    return this._editors.modified;\n  }\n  /**\n   * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n   */\n  getLineChanges() {\n    var _a;\n    const diffState = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get();\n    if (!diffState) {\n      return null;\n    }\n    return toLineChanges(diffState);\n  }\n  revert(diff) {\n    const model = this._diffModel.get();\n    if (!model || !model.isDiffUpToDate.get()) {\n      return;\n    }\n    this._editors.modified.executeEdits('diffEditor', [{\n      range: diff.modified.toExclusiveRange(),\n      text: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n    }]);\n  }\n  revertRangeMappings(diffs) {\n    const model = this._diffModel.get();\n    if (!model || !model.isDiffUpToDate.get()) {\n      return;\n    }\n    const changes = diffs.map(c => ({\n      range: c.modifiedRange,\n      text: model.model.original.getValueInRange(c.originalRange)\n    }));\n    this._editors.modified.executeEdits('diffEditor', changes);\n  }\n  _goTo(diff) {\n    this._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n    this._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n  }\n  goToDiff(target) {\n    var _a, _b, _c, _d;\n    const diffs = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings;\n    if (!diffs || diffs.length === 0) {\n      return;\n    }\n    const curLineNumber = this._editors.modified.getPosition().lineNumber;\n    let diff;\n    if (target === 'next') {\n      diff = (_c = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber)) !== null && _c !== void 0 ? _c : diffs[0];\n    } else {\n      diff = (_d = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber)) !== null && _d !== void 0 ? _d : diffs[diffs.length - 1];\n    }\n    this._goTo(diff);\n    if (diff.lineRangeMapping.modified.isEmpty) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, {\n        source: 'diffEditor.goToDiff'\n      });\n    } else if (diff.lineRangeMapping.original.isEmpty) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, {\n        source: 'diffEditor.goToDiff'\n      });\n    } else if (diff) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, {\n        source: 'diffEditor.goToDiff'\n      });\n    }\n  }\n  revealFirstDiff() {\n    const diffModel = this._diffModel.get();\n    if (!diffModel) {\n      return;\n    }\n    // wait for the diff computation to finish\n    this.waitForDiff().then(() => {\n      var _a;\n      const diffs = (_a = diffModel.diff.get()) === null || _a === void 0 ? void 0 : _a.mappings;\n      if (!diffs || diffs.length === 0) {\n        return;\n      }\n      this._goTo(diffs[0]);\n    });\n  }\n  accessibleDiffViewerNext() {\n    this._accessibleDiffViewer.get().next();\n  }\n  accessibleDiffViewerPrev() {\n    this._accessibleDiffViewer.get().prev();\n  }\n  async waitForDiff() {\n    const diffModel = this._diffModel.get();\n    if (!diffModel) {\n      return;\n    }\n    await diffModel.waitForDiff();\n  }\n  mapToOtherSide() {\n    var _a, _b;\n    const isModifiedFocus = this._editors.modified.hasWidgetFocus();\n    const source = isModifiedFocus ? this._editors.modified : this._editors.original;\n    const destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n    let destinationSelection;\n    const sourceSelection = source.getSelection();\n    if (sourceSelection) {\n      const mappings = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n      if (mappings) {\n        const newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n        const newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n        destinationSelection = Range.plusRange(newRange1, newRange2);\n      }\n    }\n    return {\n      destination,\n      destinationSelection\n    };\n  }\n  switchSide() {\n    const {\n      destination,\n      destinationSelection\n    } = this.mapToOtherSide();\n    destination.focus();\n    if (destinationSelection) {\n      destination.setSelection(destinationSelection);\n    }\n  }\n  exitCompareMove() {\n    const model = this._diffModel.get();\n    if (!model) {\n      return;\n    }\n    model.movedTextToCompare.set(undefined, undefined);\n  }\n  collapseAllUnchangedRegions() {\n    var _a;\n    const unchangedRegions = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.unchangedRegions.get();\n    if (!unchangedRegions) {\n      return;\n    }\n    transaction(tx => {\n      for (const region of unchangedRegions) {\n        region.collapseAll(tx);\n      }\n    });\n  }\n  showAllUnchangedRegions() {\n    var _a;\n    const unchangedRegions = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.unchangedRegions.get();\n    if (!unchangedRegions) {\n      return;\n    }\n    transaction(tx => {\n      for (const region of unchangedRegions) {\n        region.showAll(tx);\n      }\n    });\n  }\n  _handleCursorPositionChange(e, isModifiedEditor) {\n    var _a, _b;\n    if ((e === null || e === void 0 ? void 0 : e.reason) === 3 /* CursorChangeReason.Explicit */) {\n      const diff = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n      if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.modified.isEmpty) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      } else if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.original.isEmpty) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      } else if (diff) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      }\n    }\n  }\n};\nDiffEditorWidget = __decorate([__param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ICodeEditorService), __param(6, IAccessibilitySignalService), __param(7, IEditorProgressService)], DiffEditorWidget);\nexport { DiffEditorWidget };\nfunction toLineChanges(state) {\n  return state.mappings.map(x => {\n    const m = x.lineRangeMapping;\n    let originalStartLineNumber;\n    let originalEndLineNumber;\n    let modifiedStartLineNumber;\n    let modifiedEndLineNumber;\n    let innerChanges = m.innerChanges;\n    if (m.original.isEmpty) {\n      // Insertion\n      originalStartLineNumber = m.original.startLineNumber - 1;\n      originalEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      originalStartLineNumber = m.original.startLineNumber;\n      originalEndLineNumber = m.original.endLineNumberExclusive - 1;\n    }\n    if (m.modified.isEmpty) {\n      // Deletion\n      modifiedStartLineNumber = m.modified.startLineNumber - 1;\n      modifiedEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      modifiedStartLineNumber = m.modified.startLineNumber;\n      modifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n    }\n    return {\n      originalStartLineNumber,\n      originalEndLineNumber,\n      modifiedStartLineNumber,\n      modifiedEndLineNumber,\n      charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(m => ({\n        originalStartLineNumber: m.originalRange.startLineNumber,\n        originalStartColumn: m.originalRange.startColumn,\n        originalEndLineNumber: m.originalRange.endLineNumber,\n        originalEndColumn: m.originalRange.endColumn,\n        modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n        modifiedStartColumn: m.modifiedRange.startColumn,\n        modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n        modifiedEndColumn: m.modifiedRange.endColumn\n      }))\n    };\n  });\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","getWindow","h","findLast","onUnexpectedError","Event","toDisposable","autorun","autorunWithStore","derived","observableFromEvent","observableValue","recomputeInitiallyAndOnChange","subtransaction","transaction","derivedDisposable","EditorExtensionsRegistry","ICodeEditorService","StableEditorScrollState","CodeEditorWidget","AccessibleDiffViewer","AccessibleDiffViewerModelFromEditors","DiffEditorDecorations","DiffEditorSash","SashLayout","DiffEditorViewZones","DiffEditorGutter","HideUnchangedRegionsFeature","MovedBlocksLinesFeature","OverviewRulerFeature","RevertButtonsFeature","ObservableElementSizeObserver","applyStyle","applyViewZones","readHotReloadableExport","translatePosition","bindContextKey","Position","Range","EditorType","EditorContextKeys","AccessibilitySignal","IAccessibilitySignalService","IContextKeyService","IInstantiationService","ServiceCollection","IEditorProgressService","DiffEditorEditors","DelegatingEditor","DiffEditorOptions","DiffEditorViewModel","DiffEditorWidget","onDidContentSizeChange","_editors","constructor","_domElement","options","codeEditorWidgetOptions","_parentContextKeyService","_parentInstantiationService","codeEditorService","_accessibilitySignalService","_editorProgressService","_a","elements","style","position","height","_diffModel","undefined","_shouldDisposeDiffModel","onDidChangeModel","fromObservableLight","_contextKeyService","_register","createScoped","_instantiationService","createChild","_boundarySashes","_accessibleDiffViewerShouldBeVisible","_accessibleDiffViewerVisible","reader","_options","onlyShowAccessibleDiffViewer","read","_movedBlocksLinesPart","_layoutInfo","_b","_c","_d","_e","fullWidth","_rootSizeObserver","width","fullHeight","automaticLayout","root","sash","_sash","gutter","_gutter","gutterWidth","overviewRulerPartWidth","_overviewRulerPart","originalLeft","originalWidth","modifiedLeft","modifiedWidth","gutterLeft","sideBySide","sashLeft","movedBlocksLinesWidth","Math","max","original","getLayoutInfo","decorationsLeft","left","layout","modified","modifiedEditor","originalEditor","_diffValue","map","m","diff","onDidUpdateDiff","willCreateDiffEditor","createKey","appendChild","removeChild","dimension","setAutomaticLayout","createInstance","setWidth","isEmbeddedDiffEditor","isInEmbeddedEditor","comparingMovedCode","movedTextToCompare","diffEditorRenderSideBySideInlineBreakpointReached","couldShowInlineViewBecauseOfSize","diffEditorInlineMode","renderSideBySide","hasChanges","mappings","o","o2","_createInnerEditor","diffEditorOriginalWritable","originalEditable","diffEditorModifiedWritable","readOnly","diffEditorOriginalUri","model","uri","toString","diffEditorModifiedUri","renderOverviewRuler","_store","dimensions","w","_sashLayout","showSash","classList","toggle","enableSplitViewResizing","resetSash","unchangedRangesFeature","origViewZoneIdsToIgnore","Set","modViewZoneIdsToIgnore","isUpdatingViewZones","viewZoneManager","get","isUpdatingHiddenAreas","originalViewZones","orig","viewZones","orig2","origViewZones","concat","modifiedViewZones","mod","mod2","modViewZones","isUpdatingOrigViewZones","scrollState","isUpdatingModViewZones","capture","restore","_accessibleDiffViewer","accessibleDiffViewer","visible","tx","set","v","lineRangeMapping","visibility","_createDiffEditorContributions","addDiffEditor","shouldRenderGutterMenu","value","runAndSubscribe","onDidChangeCursorPosition","e","_handleCursorPositionChange","isInitializingDiff","isDiffUpToDate","store","show","add","done","dispose","instantiationService","container","editorWidgetOptions","editor","contributions","getDiffEditorContributions","ctor","err","_targetEditor","getEditorType","IDiffEditor","observe","hasTextFocus","saveViewState","originalViewState","modifiedViewState","modelState","serializeState","restoreViewState","s","diffEditorState","restoreSerializedState","handleInitialized","createViewModel","getModel","setModel","close","vm","shouldDispose","batchEventsGlobally","prevValue","updateOptions","changedOptions","getContainerDomNode","getOriginalEditor","getModifiedEditor","getLineChanges","diffState","toLineChanges","revert","executeEdits","range","toExclusiveRange","text","getValueInRange","revertRangeMappings","diffs","changes","modifiedRange","originalRange","_goTo","setPosition","startLineNumber","revealRangeInCenter","goToDiff","curLineNumber","getPosition","lineNumber","find","isEmpty","playSignal","diffLineDeleted","source","diffLineInserted","diffLineModified","revealFirstDiff","diffModel","waitForDiff","then","accessibleDiffViewerNext","next","accessibleDiffViewerPrev","prev","mapToOtherSide","isModifiedFocus","hasWidgetFocus","destination","destinationSelection","sourceSelection","getSelection","flip","newRange1","getStartPosition","newRange2","getEndPosition","plusRange","switchSide","focus","setSelection","exitCompareMove","collapseAllUnchangedRegions","unchangedRegions","region","collapseAll","showAllUnchangedRegions","showAll","isModifiedEditor","reason","contains","state","x","originalStartLineNumber","originalEndLineNumber","modifiedStartLineNumber","modifiedEndLineNumber","innerChanges","endLineNumberExclusive","charChanges","originalStartColumn","startColumn","endLineNumber","originalEndColumn","endColumn","modifiedStartColumn","modifiedEndColumn"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffEditorWidget.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport { ObservableElementSizeObserver, applyStyle, applyViewZones, readHotReloadableExport, translatePosition } from './utils.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nlet DiffEditorWidget = class DiffEditorWidget extends DelegatingEditor {\n    get onDidContentSizeChange() { return this._editors.onDidContentSizeChange; }\n    constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _accessibilitySignalService, _editorProgressService) {\n        var _a;\n        super();\n        this._domElement = _domElement;\n        this._parentContextKeyService = _parentContextKeyService;\n        this._parentInstantiationService = _parentInstantiationService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._editorProgressService = _editorProgressService;\n        this.elements = h('div.monaco-diff-editor.side-by-side', { style: { position: 'relative', height: '100%' } }, [\n            h('div.editor.original@original', { style: { position: 'absolute', height: '100%', } }),\n            h('div.editor.modified@modified', { style: { position: 'absolute', height: '100%', } }),\n            h('div.accessibleDiffViewer@accessibleDiffViewer', { style: { position: 'absolute', height: '100%' } }),\n        ]);\n        this._diffModel = observableValue(this, undefined);\n        this._shouldDisposeDiffModel = false;\n        this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n        this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n        this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        this._boundarySashes = observableValue(this, undefined);\n        this._accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n        this._accessibleDiffViewerVisible = derived(this, reader => this._options.onlyShowAccessibleDiffViewer.read(reader)\n            ? true\n            : this._accessibleDiffViewerShouldBeVisible.read(reader));\n        this._movedBlocksLinesPart = observableValue(this, undefined);\n        this._layoutInfo = derived(this, reader => {\n            var _a, _b, _c, _d, _e;\n            const fullWidth = this._rootSizeObserver.width.read(reader);\n            const fullHeight = this._rootSizeObserver.height.read(reader);\n            if (this._rootSizeObserver.automaticLayout) {\n                this.elements.root.style.height = '100%';\n            }\n            else {\n                this.elements.root.style.height = fullHeight + 'px';\n            }\n            const sash = this._sash.read(reader);\n            const gutter = this._gutter.read(reader);\n            const gutterWidth = (_a = gutter === null || gutter === void 0 ? void 0 : gutter.width.read(reader)) !== null && _a !== void 0 ? _a : 0;\n            const overviewRulerPartWidth = (_c = (_b = this._overviewRulerPart.read(reader)) === null || _b === void 0 ? void 0 : _b.width) !== null && _c !== void 0 ? _c : 0;\n            let originalLeft, originalWidth, modifiedLeft, modifiedWidth, gutterLeft;\n            const sideBySide = !!sash;\n            if (sideBySide) {\n                const sashLeft = sash.sashLeft.read(reader);\n                const movedBlocksLinesWidth = (_e = (_d = this._movedBlocksLinesPart.read(reader)) === null || _d === void 0 ? void 0 : _d.width.read(reader)) !== null && _e !== void 0 ? _e : 0;\n                originalLeft = 0;\n                originalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n                gutterLeft = sashLeft - gutterWidth;\n                modifiedLeft = sashLeft;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            else {\n                gutterLeft = 0;\n                originalLeft = gutterWidth;\n                originalWidth = Math.max(5, this._editors.original.getLayoutInfo().decorationsLeft);\n                modifiedLeft = gutterWidth + originalWidth;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            this.elements.original.style.left = originalLeft + 'px';\n            this.elements.original.style.width = originalWidth + 'px';\n            this._editors.original.layout({ width: originalWidth, height: fullHeight }, true);\n            gutter === null || gutter === void 0 ? void 0 : gutter.layout(gutterLeft);\n            this.elements.modified.style.left = modifiedLeft + 'px';\n            this.elements.modified.style.width = modifiedWidth + 'px';\n            this._editors.modified.layout({ width: modifiedWidth, height: fullHeight }, true);\n            return {\n                modifiedEditor: this._editors.modified.getLayoutInfo(),\n                originalEditor: this._editors.original.getLayoutInfo(),\n            };\n        });\n        this._diffValue = this._diffModel.map((m, r) => m === null || m === void 0 ? void 0 : m.diff.read(r));\n        this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n        codeEditorService.willCreateDiffEditor();\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._domElement.appendChild(this.elements.root);\n        this._register(toDisposable(() => this._domElement.removeChild(this.elements.root)));\n        this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n        this._rootSizeObserver.setAutomaticLayout((_a = options.automaticLayout) !== null && _a !== void 0 ? _a : false);\n        this._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n        this._register(autorun(reader => {\n            this._options.setWidth(this._rootSizeObserver.width.read(reader));\n        }));\n        this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n        this._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService, reader => this._options.isInEmbeddedEditor.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService, reader => { var _a; return !!((_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader)); }));\n        this._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService, reader => this._options.couldShowInlineViewBecauseOfSize.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService, reader => !this._options.renderSideBySide.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService, reader => { var _a, _b, _c; return ((_c = (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.diff.read(reader)) === null || _b === void 0 ? void 0 : _b.mappings.length) !== null && _c !== void 0 ? _c : 0) > 0; }));\n        this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService, reader => this._options.originalEditable.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService, reader => !this._options.readOnly.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService, reader => { var _a, _b; return (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.model.original.uri.toString()) !== null && _b !== void 0 ? _b : ''; }));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService, reader => { var _a, _b; return (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.model.modified.uri.toString()) !== null && _b !== void 0 ? _b : ''; }));\n        this._overviewRulerPart = derivedDisposable(this, reader => !this._options.renderOverviewRuler.read(reader)\n            ? undefined\n            : this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerFeature, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor))).recomputeInitiallyAndOnChange(this._store);\n        const dimensions = {\n            height: this._rootSizeObserver.height,\n            width: this._rootSizeObserver.width.map((w, reader) => { var _a, _b; return w - ((_b = (_a = this._overviewRulerPart.read(reader)) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0); }),\n        };\n        this._sashLayout = new SashLayout(this._options, dimensions);\n        this._sash = derivedDisposable(this, reader => {\n            const showSash = this._options.renderSideBySide.read(reader);\n            this.elements.root.classList.toggle('side-by-side', showSash);\n            return !showSash ? undefined : new DiffEditorSash(this.elements.root, dimensions, this._options.enableSplitViewResizing, this._boundarySashes, this._sashLayout.sashLeft, () => this._sashLayout.resetSash());\n        }).recomputeInitiallyAndOnChange(this._store);\n        const unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */ this._instantiationService.createInstance(readHotReloadableExport(HideUnchangedRegionsFeature, reader), this._editors, this._diffModel, this._options)).recomputeInitiallyAndOnChange(this._store);\n        derivedDisposable(this, reader => /** @description DiffEditorDecorations */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorDecorations, reader), this._editors, this._diffModel, this._options, this)).recomputeInitiallyAndOnChange(this._store);\n        const origViewZoneIdsToIgnore = new Set();\n        const modViewZoneIdsToIgnore = new Set();\n        let isUpdatingViewZones = false;\n        const viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorViewZones, reader), getWindow(this._domElement), this._editors, this._diffModel, this._options, this, () => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas, origViewZoneIdsToIgnore, modViewZoneIdsToIgnore)).recomputeInitiallyAndOnChange(this._store);\n        const originalViewZones = derived(this, (reader) => {\n            const orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n            const orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n            return orig.concat(orig2);\n        });\n        const modifiedViewZones = derived(this, (reader) => {\n            const mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n            const mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n            return mod.concat(mod2);\n        });\n        this._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n            isUpdatingViewZones = isUpdatingOrigViewZones;\n        }, origViewZoneIdsToIgnore));\n        let scrollState;\n        this._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n            isUpdatingViewZones = isUpdatingModViewZones;\n            if (isUpdatingViewZones) {\n                scrollState = StableEditorScrollState.capture(this._editors.modified);\n            }\n            else {\n                scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(this._editors.modified);\n                scrollState = undefined;\n            }\n        }, modViewZoneIdsToIgnore));\n        this._accessibleDiffViewer = derivedDisposable(this, reader => this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => { var _a; return (_a = m === null || m === void 0 ? void 0 : m.diff.read(r)) === null || _a === void 0 ? void 0 : _a.mappings.map(m => m.lineRangeMapping); }), new AccessibleDiffViewerModelFromEditors(this._editors))).recomputeInitiallyAndOnChange(this._store);\n        const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n        this._register(applyStyle(this.elements.modified, { visibility }));\n        this._register(applyStyle(this.elements.original, { visibility }));\n        this._createDiffEditorContributions();\n        codeEditorService.addDiffEditor(this);\n        this._gutter = derivedDisposable(this, reader => {\n            return this._options.shouldRenderGutterMenu.read(reader)\n                ? this._instantiationService.createInstance(readHotReloadableExport(DiffEditorGutter, reader), this.elements.root, this._diffModel, this._editors, this._options, this._sashLayout, this._boundarySashes)\n                : undefined;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n        derivedDisposable(this, reader => /** @description MovedBlocksLinesPart */ new (readHotReloadableExport(MovedBlocksLinesFeature, reader))(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors)).recomputeInitiallyAndOnChange(this._store, value => {\n            // This is to break the layout info <-> moved blocks lines part dependency cycle.\n            this._movedBlocksLinesPart.set(value, undefined);\n        });\n        this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n        this._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n        const isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n            /** @isInitializingDiff isDiffUpToDate */\n            if (!m) {\n                return undefined;\n            }\n            return m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description DiffEditorWidgetHelper.ShowProgress */\n            if (isInitializingDiff.read(reader) === true) {\n                const r = this._editorProgressService.show(true, 1000);\n                store.add(toDisposable(() => r.done()));\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            if (this._shouldDisposeDiffModel) {\n                (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.dispose();\n            }\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            store.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n        }));\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n        return editor;\n    }\n    _createDiffEditorContributions() {\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(this._instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n    }\n    get _targetEditor() { return this._editors.modified; }\n    getEditorType() { return EditorType.IDiffEditor; }\n    layout(dimension) {\n        this._rootSizeObserver.observe(dimension);\n    }\n    hasTextFocus() { return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus(); }\n    saveViewState() {\n        var _a;\n        const originalViewState = this._editors.original.saveViewState();\n        const modifiedViewState = this._editors.modified.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState,\n            modelState: (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.serializeState(),\n        };\n    }\n    restoreViewState(s) {\n        var _a;\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._editors.original.restoreViewState(diffEditorState.original);\n            this._editors.modified.restoreViewState(diffEditorState.modified);\n            if (diffEditorState.modelState) {\n                (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.restoreSerializedState(diffEditorState.modelState);\n            }\n        }\n    }\n    handleInitialized() {\n        this._editors.original.handleInitialized();\n        this._editors.modified.handleInitialized();\n    }\n    createViewModel(model) {\n        return this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n    }\n    getModel() { var _a, _b; return (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.model) !== null && _b !== void 0 ? _b : null; }\n    setModel(model, tx) {\n        if (!model && this._diffModel.get()) {\n            // Transitioning from a model to no-model\n            this._accessibleDiffViewer.get().close();\n        }\n        const vm = model ? ('model' in model) ? { model, shouldDispose: false } : { model: this.createViewModel(model), shouldDispose: true } : undefined;\n        if (this._diffModel.get() !== (vm === null || vm === void 0 ? void 0 : vm.model)) {\n            subtransaction(tx, tx => {\n                var _a;\n                /** @description DiffEditorWidget.setModel */\n                observableFromEvent.batchEventsGlobally(tx, () => {\n                    this._editors.original.setModel(vm ? vm.model.model.original : null);\n                    this._editors.modified.setModel(vm ? vm.model.model.modified : null);\n                });\n                const prevValue = this._diffModel.get();\n                const shouldDispose = this._shouldDisposeDiffModel;\n                this._shouldDisposeDiffModel = (_a = vm === null || vm === void 0 ? void 0 : vm.shouldDispose) !== null && _a !== void 0 ? _a : false;\n                this._diffModel.set(vm === null || vm === void 0 ? void 0 : vm.model, tx);\n                if (shouldDispose) {\n                    prevValue === null || prevValue === void 0 ? void 0 : prevValue.dispose();\n                }\n            });\n        }\n    }\n    /**\n     * @param changedOptions Only has values for top-level options that have actually changed.\n     */\n    updateOptions(changedOptions) {\n        this._options.updateOptions(changedOptions);\n    }\n    getContainerDomNode() { return this._domElement; }\n    getOriginalEditor() { return this._editors.original; }\n    getModifiedEditor() { return this._editors.modified; }\n    /**\n     * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n     */\n    getLineChanges() {\n        var _a;\n        const diffState = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get();\n        if (!diffState) {\n            return null;\n        }\n        return toLineChanges(diffState);\n    }\n    revert(diff) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        this._editors.modified.executeEdits('diffEditor', [\n            {\n                range: diff.modified.toExclusiveRange(),\n                text: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n            }\n        ]);\n    }\n    revertRangeMappings(diffs) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        const changes = diffs.map(c => ({\n            range: c.modifiedRange,\n            text: model.model.original.getValueInRange(c.originalRange)\n        }));\n        this._editors.modified.executeEdits('diffEditor', changes);\n    }\n    _goTo(diff) {\n        this._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n        this._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n    }\n    goToDiff(target) {\n        var _a, _b, _c, _d;\n        const diffs = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings;\n        if (!diffs || diffs.length === 0) {\n            return;\n        }\n        const curLineNumber = this._editors.modified.getPosition().lineNumber;\n        let diff;\n        if (target === 'next') {\n            diff = (_c = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber)) !== null && _c !== void 0 ? _c : diffs[0];\n        }\n        else {\n            diff = (_d = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber)) !== null && _d !== void 0 ? _d : diffs[diffs.length - 1];\n        }\n        this._goTo(diff);\n        if (diff.lineRangeMapping.modified.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff.lineRangeMapping.original.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.goToDiff' });\n        }\n    }\n    revealFirstDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        // wait for the diff computation to finish\n        this.waitForDiff().then(() => {\n            var _a;\n            const diffs = (_a = diffModel.diff.get()) === null || _a === void 0 ? void 0 : _a.mappings;\n            if (!diffs || diffs.length === 0) {\n                return;\n            }\n            this._goTo(diffs[0]);\n        });\n    }\n    accessibleDiffViewerNext() { this._accessibleDiffViewer.get().next(); }\n    accessibleDiffViewerPrev() { this._accessibleDiffViewer.get().prev(); }\n    async waitForDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        await diffModel.waitForDiff();\n    }\n    mapToOtherSide() {\n        var _a, _b;\n        const isModifiedFocus = this._editors.modified.hasWidgetFocus();\n        const source = isModifiedFocus ? this._editors.modified : this._editors.original;\n        const destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n        let destinationSelection;\n        const sourceSelection = source.getSelection();\n        if (sourceSelection) {\n            const mappings = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n            if (mappings) {\n                const newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n                const newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n                destinationSelection = Range.plusRange(newRange1, newRange2);\n            }\n        }\n        return { destination, destinationSelection };\n    }\n    switchSide() {\n        const { destination, destinationSelection } = this.mapToOtherSide();\n        destination.focus();\n        if (destinationSelection) {\n            destination.setSelection(destinationSelection);\n        }\n    }\n    exitCompareMove() {\n        const model = this._diffModel.get();\n        if (!model) {\n            return;\n        }\n        model.movedTextToCompare.set(undefined, undefined);\n    }\n    collapseAllUnchangedRegions() {\n        var _a;\n        const unchangedRegions = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.collapseAll(tx);\n            }\n        });\n    }\n    showAllUnchangedRegions() {\n        var _a;\n        const unchangedRegions = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.showAll(tx);\n            }\n        });\n    }\n    _handleCursorPositionChange(e, isModifiedEditor) {\n        var _a, _b;\n        if ((e === null || e === void 0 ? void 0 : e.reason) === 3 /* CursorChangeReason.Explicit */) {\n            const diff = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n            if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.modified.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.original.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.cursorPositionChanged' });\n            }\n        }\n    }\n};\nDiffEditorWidget = __decorate([\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ICodeEditorService),\n    __param(6, IAccessibilitySignalService),\n    __param(7, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nfunction toLineChanges(state) {\n    return state.mappings.map(x => {\n        const m = x.lineRangeMapping;\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let innerChanges = m.innerChanges;\n        if (m.original.isEmpty) {\n            // Insertion\n            originalStartLineNumber = m.original.startLineNumber - 1;\n            originalEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            originalStartLineNumber = m.original.startLineNumber;\n            originalEndLineNumber = m.original.endLineNumberExclusive - 1;\n        }\n        if (m.modified.isEmpty) {\n            // Deletion\n            modifiedStartLineNumber = m.modified.startLineNumber - 1;\n            modifiedEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            modifiedStartLineNumber = m.modified.startLineNumber;\n            modifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n        }\n        return {\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(m => ({\n                originalStartLineNumber: m.originalRange.startLineNumber,\n                originalStartColumn: m.originalRange.startColumn,\n                originalEndLineNumber: m.originalRange.endLineNumber,\n                originalEndColumn: m.originalRange.endColumn,\n                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                modifiedStartColumn: m.modifiedRange.startColumn,\n                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                modifiedEndColumn: m.modifiedRange.endColumn,\n            }))\n        };\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}