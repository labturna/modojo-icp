{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar ContentHoverWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { getHoverAccessibleViewHint, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst HORIZONTAL_SCROLLING_BY = 30;\nconst CONTAINER_HEIGHT_PADDING = 6;\nlet ContentHoverWidget = ContentHoverWidget_1 = class ContentHoverWidget extends ResizableContentWidget {\n  get isColorPickerVisible() {\n    var _a;\n    return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n  }\n  get isVisibleFromKeyboard() {\n    var _a;\n    return ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */;\n  }\n  get isVisible() {\n    var _a;\n    return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n  }\n  get isFocused() {\n    var _a;\n    return (_a = this._hoverFocusedKey.get()) !== null && _a !== void 0 ? _a : false;\n  }\n  constructor(editor, contextKeyService, _configurationService, _accessibilityService, _keybindingService) {\n    const minimumHeight = editor.getOption(67 /* EditorOption.lineHeight */) + 8;\n    const minimumWidth = 150;\n    const minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n    super(editor, minimumSize);\n    this._configurationService = _configurationService;\n    this._accessibilityService = _accessibilityService;\n    this._keybindingService = _keybindingService;\n    this._hover = this._register(new HoverWidget());\n    this._minimumSize = minimumSize;\n    this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n    this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n    dom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n    this._resizableNode.domNode.style.zIndex = '50';\n    this._register(this._editor.onDidLayoutChange(() => {\n      if (this.isVisible) {\n        this._updateMaxDimensions();\n      }\n    }));\n    this._register(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n        this._updateFont();\n      }\n    }));\n    const focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n    this._register(focusTracker.onDidFocus(() => {\n      this._hoverFocusedKey.set(true);\n    }));\n    this._register(focusTracker.onDidBlur(() => {\n      this._hoverFocusedKey.set(false);\n    }));\n    this._setHoverData(undefined);\n    this._editor.addContentWidget(this);\n  }\n  dispose() {\n    var _a;\n    super.dispose();\n    (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n    this._editor.removeContentWidget(this);\n  }\n  getId() {\n    return ContentHoverWidget_1.ID;\n  }\n  static _applyDimensions(container, width, height) {\n    const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n    const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n    container.style.width = transformedWidth;\n    container.style.height = transformedHeight;\n  }\n  _setContentsDomNodeDimensions(width, height) {\n    const contentsDomNode = this._hover.contentsDomNode;\n    return ContentHoverWidget_1._applyDimensions(contentsDomNode, width, height);\n  }\n  _setContainerDomNodeDimensions(width, height) {\n    const containerDomNode = this._hover.containerDomNode;\n    return ContentHoverWidget_1._applyDimensions(containerDomNode, width, height);\n  }\n  _setHoverWidgetDimensions(width, height) {\n    this._setContentsDomNodeDimensions(width, height);\n    this._setContainerDomNodeDimensions(width, height);\n    this._layoutContentWidget();\n  }\n  static _applyMaxDimensions(container, width, height) {\n    const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n    const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n    container.style.maxWidth = transformedWidth;\n    container.style.maxHeight = transformedHeight;\n  }\n  _setHoverWidgetMaxDimensions(width, height) {\n    ContentHoverWidget_1._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n    ContentHoverWidget_1._applyMaxDimensions(this._hover.containerDomNode, width, height);\n    this._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n    this._layoutContentWidget();\n  }\n  _setAdjustedHoverWidgetDimensions(size) {\n    this._setHoverWidgetMaxDimensions('none', 'none');\n    const width = size.width;\n    const height = size.height;\n    this._setHoverWidgetDimensions(width, height);\n  }\n  _updateResizableNodeMaxDimensions() {\n    var _a, _b;\n    const maxRenderingWidth = (_a = this._findMaximumRenderingWidth()) !== null && _a !== void 0 ? _a : Infinity;\n    const maxRenderingHeight = (_b = this._findMaximumRenderingHeight()) !== null && _b !== void 0 ? _b : Infinity;\n    this._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n    this._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n  }\n  _resize(size) {\n    var _a, _b;\n    ContentHoverWidget_1._lastDimensions = new dom.Dimension(size.width, size.height);\n    this._setAdjustedHoverWidgetDimensions(size);\n    this._resizableNode.layout(size.height, size.width);\n    this._updateResizableNodeMaxDimensions();\n    this._hover.scrollbar.scanDomNode();\n    this._editor.layoutContentWidget(this);\n    (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n  }\n  _findAvailableSpaceVertically() {\n    var _a;\n    const position = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition;\n    if (!position) {\n      return;\n    }\n    return this._positionPreference === 1 /* ContentWidgetPositionPreference.ABOVE */ ? this._availableVerticalSpaceAbove(position) : this._availableVerticalSpaceBelow(position);\n  }\n  _findMaximumRenderingHeight() {\n    const availableSpace = this._findAvailableSpaceVertically();\n    if (!availableSpace) {\n      return;\n    }\n    // Padding needed in order to stop the resizing down to a smaller height\n    let maximumHeight = CONTAINER_HEIGHT_PADDING;\n    Array.from(this._hover.contentsDomNode.children).forEach(hoverPart => {\n      maximumHeight += hoverPart.clientHeight;\n    });\n    return Math.min(availableSpace, maximumHeight);\n  }\n  _isHoverTextOverflowing() {\n    // To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n    this._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n    this._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n    const overflowing = Array.from(this._hover.contentsDomNode.children).some(hoverElement => {\n      return hoverElement.scrollWidth > hoverElement.clientWidth;\n    });\n    this._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n    this._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n    return overflowing;\n  }\n  _findMaximumRenderingWidth() {\n    if (!this._editor || !this._editor.hasModel()) {\n      return;\n    }\n    const overflowing = this._isHoverTextOverflowing();\n    const initialWidth = typeof this._contentWidth === 'undefined' ? 0 : this._contentWidth - 2 // - 2 for the borders\n    ;\n    if (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n      const bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n      const horizontalPadding = 14;\n      return bodyBoxWidth - horizontalPadding;\n    } else {\n      return this._hover.containerDomNode.clientWidth + 2;\n    }\n  }\n  isMouseGettingCloser(posx, posy) {\n    if (!this._visibleData) {\n      return false;\n    }\n    if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n      this._visibleData.initialMousePosX = posx;\n      this._visibleData.initialMousePosY = posy;\n      return false;\n    }\n    const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n    if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n      this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n    }\n    const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n    if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n      // The mouse is getting farther away\n      return false;\n    }\n    this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n    return true;\n  }\n  _setHoverData(hoverData) {\n    var _a;\n    (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n    this._visibleData = hoverData;\n    this._hoverVisibleKey.set(!!hoverData);\n    this._hover.containerDomNode.classList.toggle('hidden', !hoverData);\n  }\n  _updateFont() {\n    const {\n      fontSize,\n      lineHeight\n    } = this._editor.getOption(50 /* EditorOption.fontInfo */);\n    const contentsDomNode = this._hover.contentsDomNode;\n    contentsDomNode.style.fontSize = `${fontSize}px`;\n    contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n    const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n    codeClasses.forEach(node => this._editor.applyFontInfo(node));\n  }\n  _updateContent(node) {\n    const contentsDomNode = this._hover.contentsDomNode;\n    contentsDomNode.style.paddingBottom = '';\n    contentsDomNode.textContent = '';\n    contentsDomNode.appendChild(node);\n  }\n  _layoutContentWidget() {\n    this._editor.layoutContentWidget(this);\n    this._hover.onContentsChanged();\n  }\n  _updateMaxDimensions() {\n    const height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget_1._lastDimensions.height);\n    const width = Math.max(this._editor.getLayoutInfo().width * 0.66, 500, ContentHoverWidget_1._lastDimensions.width);\n    this._setHoverWidgetMaxDimensions(width, height);\n  }\n  _render(node, hoverData) {\n    this._setHoverData(hoverData);\n    this._updateFont();\n    this._updateContent(node);\n    this._updateMaxDimensions();\n    this.onContentsChanged();\n    // Simply force a synchronous render on the editor\n    // such that the widget does not really render with left = '0px'\n    this._editor.render();\n  }\n  getPosition() {\n    var _a;\n    if (!this._visibleData) {\n      return null;\n    }\n    return {\n      position: this._visibleData.showAtPosition,\n      secondaryPosition: this._visibleData.showAtSecondaryPosition,\n      positionAffinity: this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined,\n      preference: [(_a = this._positionPreference) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */]\n    };\n  }\n  showAt(node, hoverData) {\n    var _a, _b, _c, _d;\n    if (!this._editor || !this._editor.hasModel()) {\n      return;\n    }\n    this._render(node, hoverData);\n    const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n    const widgetPosition = hoverData.showAtPosition;\n    this._positionPreference = (_a = this._findPositionPreference(widgetHeight, widgetPosition)) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */;\n    // See https://github.com/microsoft/vscode/issues/140339\n    // TODO: Doing a second layout of the hover after force rendering the editor\n    this.onContentsChanged();\n    if (hoverData.stoleFocus) {\n      this._hover.containerDomNode.focus();\n    }\n    (_b = hoverData.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    // The aria label overrides the label, so if we add to it, add the contents of the hover\n    const hoverFocused = this._hover.containerDomNode.ownerDocument.activeElement === this._hover.containerDomNode;\n    const accessibleViewHint = hoverFocused && getHoverAccessibleViewHint(this._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(), (_d = (_c = this._keybindingService.lookupKeybinding('editor.action.accessibleView')) === null || _c === void 0 ? void 0 : _c.getAriaLabel()) !== null && _d !== void 0 ? _d : '');\n    if (accessibleViewHint) {\n      this._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n    }\n  }\n  hide() {\n    if (!this._visibleData) {\n      return;\n    }\n    const stoleFocus = this._visibleData.stoleFocus || this._hoverFocusedKey.get();\n    this._setHoverData(undefined);\n    this._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n    this._resizableNode.clearSashHoverState();\n    this._hoverFocusedKey.set(false);\n    this._editor.layoutContentWidget(this);\n    if (stoleFocus) {\n      this._editor.focus();\n    }\n  }\n  _removeConstraintsRenderNormally() {\n    // Added because otherwise the initial size of the hover content is smaller than should be\n    const layoutInfo = this._editor.getLayoutInfo();\n    this._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n    this._setHoverWidgetDimensions('auto', 'auto');\n  }\n  setMinimumDimensions(dimensions) {\n    // We combine the new minimum dimensions with the previous ones\n    this._minimumSize = new dom.Dimension(Math.max(this._minimumSize.width, dimensions.width), Math.max(this._minimumSize.height, dimensions.height));\n    this._updateMinimumWidth();\n  }\n  _updateMinimumWidth() {\n    const width = typeof this._contentWidth === 'undefined' ? this._minimumSize.width : Math.min(this._contentWidth, this._minimumSize.width);\n    // We want to avoid that the hover is artificially large, so we use the content width as minimum width\n    this._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n  }\n  onContentsChanged() {\n    var _a;\n    this._removeConstraintsRenderNormally();\n    const containerDomNode = this._hover.containerDomNode;\n    let height = dom.getTotalHeight(containerDomNode);\n    let width = dom.getTotalWidth(containerDomNode);\n    this._resizableNode.layout(height, width);\n    this._setHoverWidgetDimensions(width, height);\n    height = dom.getTotalHeight(containerDomNode);\n    width = dom.getTotalWidth(containerDomNode);\n    this._contentWidth = width;\n    this._updateMinimumWidth();\n    this._resizableNode.layout(height, width);\n    if ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) {\n      const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n      this._positionPreference = this._findPositionPreference(widgetHeight, this._visibleData.showAtPosition);\n    }\n    this._layoutContentWidget();\n  }\n  focus() {\n    this._hover.containerDomNode.focus();\n  }\n  scrollUp() {\n    const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n    const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n    this._hover.scrollbar.setScrollPosition({\n      scrollTop: scrollTop - fontInfo.lineHeight\n    });\n  }\n  scrollDown() {\n    const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n    const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n    this._hover.scrollbar.setScrollPosition({\n      scrollTop: scrollTop + fontInfo.lineHeight\n    });\n  }\n  scrollLeft() {\n    const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n    this._hover.scrollbar.setScrollPosition({\n      scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY\n    });\n  }\n  scrollRight() {\n    const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n    this._hover.scrollbar.setScrollPosition({\n      scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY\n    });\n  }\n  pageUp() {\n    const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n    const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n    this._hover.scrollbar.setScrollPosition({\n      scrollTop: scrollTop - scrollHeight\n    });\n  }\n  pageDown() {\n    const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n    const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n    this._hover.scrollbar.setScrollPosition({\n      scrollTop: scrollTop + scrollHeight\n    });\n  }\n  goToTop() {\n    this._hover.scrollbar.setScrollPosition({\n      scrollTop: 0\n    });\n  }\n  goToBottom() {\n    this._hover.scrollbar.setScrollPosition({\n      scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight\n    });\n  }\n};\nContentHoverWidget.ID = 'editor.contrib.resizableContentHoverWidget';\nContentHoverWidget._lastDimensions = new dom.Dimension(0, 0);\nContentHoverWidget = ContentHoverWidget_1 = __decorate([__param(1, IContextKeyService), __param(2, IConfigurationService), __param(3, IAccessibilityService), __param(4, IKeybindingService)], ContentHoverWidget);\nexport { ContentHoverWidget };\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n  const x = left + width / 2; // x center of rectangle\n  const y = top + height / 2; // y center of rectangle\n  const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n  const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n  return Math.sqrt(dx * dx + dy * dy);\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","ContentHoverWidget_1","dom","IKeybindingService","ResizableContentWidget","IContextKeyService","IConfigurationService","IAccessibilityService","EditorContextKeys","getHoverAccessibleViewHint","HoverWidget","HORIZONTAL_SCROLLING_BY","CONTAINER_HEIGHT_PADDING","ContentHoverWidget","isColorPickerVisible","_a","Boolean","_visibleData","colorPicker","isVisibleFromKeyboard","source","isVisible","_hoverVisibleKey","get","isFocused","_hoverFocusedKey","constructor","editor","contextKeyService","_configurationService","_accessibilityService","_keybindingService","minimumHeight","getOption","minimumWidth","minimumSize","Dimension","_hover","_register","_minimumSize","hoverVisible","bindTo","hoverFocused","append","_resizableNode","domNode","containerDomNode","style","zIndex","_editor","onDidLayoutChange","_updateMaxDimensions","onDidChangeConfiguration","e","hasChanged","_updateFont","focusTracker","trackFocus","onDidFocus","set","onDidBlur","_setHoverData","undefined","addContentWidget","dispose","disposables","removeContentWidget","getId","ID","_applyDimensions","container","width","height","transformedWidth","transformedHeight","_setContentsDomNodeDimensions","contentsDomNode","_setContainerDomNodeDimensions","_setHoverWidgetDimensions","_layoutContentWidget","_applyMaxDimensions","maxWidth","maxHeight","_setHoverWidgetMaxDimensions","setProperty","_setAdjustedHoverWidgetDimensions","size","_updateResizableNodeMaxDimensions","_b","maxRenderingWidth","_findMaximumRenderingWidth","Infinity","maxRenderingHeight","_findMaximumRenderingHeight","maxSize","_resize","_lastDimensions","layout","scrollbar","scanDomNode","layoutContentWidget","_findAvailableSpaceVertically","position","showAtPosition","_positionPreference","_availableVerticalSpaceAbove","_availableVerticalSpaceBelow","availableSpace","maximumHeight","Array","from","children","forEach","hoverPart","clientHeight","Math","min","_isHoverTextOverflowing","overflowing","some","hoverElement","scrollWidth","clientWidth","removeProperty","hasModel","initialWidth","_contentWidth","bodyBoxWidth","getClientArea","ownerDocument","body","horizontalPadding","isMouseGettingCloser","posx","posy","initialMousePosX","initialMousePosY","widgetRect","getDomNodePagePosition","getDomNode","closestMouseDistance","computeDistanceFromPointToRectangle","left","top","distance","hoverData","classList","toggle","fontSize","lineHeight","codeClasses","prototype","slice","call","getElementsByClassName","node","applyFontInfo","_updateContent","paddingBottom","textContent","appendChild","onContentsChanged","max","getLayoutInfo","_render","render","getPosition","secondaryPosition","showAtSecondaryPosition","positionAffinity","isBeforeContent","preference","showAt","_c","_d","widgetHeight","getTotalHeight","widgetPosition","_findPositionPreference","stoleFocus","focus","activeElement","accessibleViewHint","getValue","isScreenReaderOptimized","lookupKeybinding","getAriaLabel","ariaLabel","hide","clearSashHoverState","_removeConstraintsRenderNormally","layoutInfo","setMinimumDimensions","dimensions","_updateMinimumWidth","minSize","getTotalWidth","scrollUp","scrollTop","getScrollPosition","fontInfo","setScrollPosition","scrollDown","scrollLeft","scrollRight","pageUp","scrollHeight","getScrollDimensions","pageDown","goToTop","goToBottom","pointX","pointY","x","y","dx","abs","dy","sqrt"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHoverWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ContentHoverWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { getHoverAccessibleViewHint, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst HORIZONTAL_SCROLLING_BY = 30;\nconst CONTAINER_HEIGHT_PADDING = 6;\nlet ContentHoverWidget = ContentHoverWidget_1 = class ContentHoverWidget extends ResizableContentWidget {\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    get isVisible() {\n        var _a;\n        return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    get isFocused() {\n        var _a;\n        return (_a = this._hoverFocusedKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(editor, contextKeyService, _configurationService, _accessibilityService, _keybindingService) {\n        const minimumHeight = editor.getOption(67 /* EditorOption.lineHeight */) + 8;\n        const minimumWidth = 150;\n        const minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n        super(editor, minimumSize);\n        this._configurationService = _configurationService;\n        this._accessibilityService = _accessibilityService;\n        this._keybindingService = _keybindingService;\n        this._hover = this._register(new HoverWidget());\n        this._minimumSize = minimumSize;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n        this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n        dom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n        this._resizableNode.domNode.style.zIndex = '50';\n        this._register(this._editor.onDidLayoutChange(() => {\n            if (this.isVisible) {\n                this._updateMaxDimensions();\n            }\n        }));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        const focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n        this._register(focusTracker.onDidFocus(() => {\n            this._hoverFocusedKey.set(true);\n        }));\n        this._register(focusTracker.onDidBlur(() => {\n            this._hoverFocusedKey.set(false);\n        }));\n        this._setHoverData(undefined);\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return ContentHoverWidget_1.ID;\n    }\n    static _applyDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.width = transformedWidth;\n        container.style.height = transformedHeight;\n    }\n    _setContentsDomNodeDimensions(width, height) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        return ContentHoverWidget_1._applyDimensions(contentsDomNode, width, height);\n    }\n    _setContainerDomNodeDimensions(width, height) {\n        const containerDomNode = this._hover.containerDomNode;\n        return ContentHoverWidget_1._applyDimensions(containerDomNode, width, height);\n    }\n    _setHoverWidgetDimensions(width, height) {\n        this._setContentsDomNodeDimensions(width, height);\n        this._setContainerDomNodeDimensions(width, height);\n        this._layoutContentWidget();\n    }\n    static _applyMaxDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.maxWidth = transformedWidth;\n        container.style.maxHeight = transformedHeight;\n    }\n    _setHoverWidgetMaxDimensions(width, height) {\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.containerDomNode, width, height);\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n        this._layoutContentWidget();\n    }\n    _setAdjustedHoverWidgetDimensions(size) {\n        this._setHoverWidgetMaxDimensions('none', 'none');\n        const width = size.width;\n        const height = size.height;\n        this._setHoverWidgetDimensions(width, height);\n    }\n    _updateResizableNodeMaxDimensions() {\n        var _a, _b;\n        const maxRenderingWidth = (_a = this._findMaximumRenderingWidth()) !== null && _a !== void 0 ? _a : Infinity;\n        const maxRenderingHeight = (_b = this._findMaximumRenderingHeight()) !== null && _b !== void 0 ? _b : Infinity;\n        this._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n        this._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n    }\n    _resize(size) {\n        var _a, _b;\n        ContentHoverWidget_1._lastDimensions = new dom.Dimension(size.width, size.height);\n        this._setAdjustedHoverWidgetDimensions(size);\n        this._resizableNode.layout(size.height, size.width);\n        this._updateResizableNodeMaxDimensions();\n        this._hover.scrollbar.scanDomNode();\n        this._editor.layoutContentWidget(this);\n        (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    }\n    _findAvailableSpaceVertically() {\n        var _a;\n        const position = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition;\n        if (!position) {\n            return;\n        }\n        return this._positionPreference === 1 /* ContentWidgetPositionPreference.ABOVE */ ?\n            this._availableVerticalSpaceAbove(position)\n            : this._availableVerticalSpaceBelow(position);\n    }\n    _findMaximumRenderingHeight() {\n        const availableSpace = this._findAvailableSpaceVertically();\n        if (!availableSpace) {\n            return;\n        }\n        // Padding needed in order to stop the resizing down to a smaller height\n        let maximumHeight = CONTAINER_HEIGHT_PADDING;\n        Array.from(this._hover.contentsDomNode.children).forEach((hoverPart) => {\n            maximumHeight += hoverPart.clientHeight;\n        });\n        return Math.min(availableSpace, maximumHeight);\n    }\n    _isHoverTextOverflowing() {\n        // To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n        const overflowing = Array.from(this._hover.contentsDomNode.children).some((hoverElement) => {\n            return hoverElement.scrollWidth > hoverElement.clientWidth;\n        });\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n        return overflowing;\n    }\n    _findMaximumRenderingWidth() {\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        const overflowing = this._isHoverTextOverflowing();\n        const initialWidth = (typeof this._contentWidth === 'undefined'\n            ? 0\n            : this._contentWidth - 2 // - 2 for the borders\n        );\n        if (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n            const bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n            const horizontalPadding = 14;\n            return bodyBoxWidth - horizontalPadding;\n        }\n        else {\n            return this._hover.containerDomNode.clientWidth + 2;\n        }\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined'\n            || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setHoverData(hoverData) {\n        var _a;\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._visibleData = hoverData;\n        this._hoverVisibleKey.set(!!hoverData);\n        this._hover.containerDomNode.classList.toggle('hidden', !hoverData);\n    }\n    _updateFont() {\n        const { fontSize, lineHeight } = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.fontSize = `${fontSize}px`;\n        contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _updateContent(node) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.paddingBottom = '';\n        contentsDomNode.textContent = '';\n        contentsDomNode.appendChild(node);\n    }\n    _layoutContentWidget() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n    }\n    _updateMaxDimensions() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget_1._lastDimensions.height);\n        const width = Math.max(this._editor.getLayoutInfo().width * 0.66, 500, ContentHoverWidget_1._lastDimensions.width);\n        this._setHoverWidgetMaxDimensions(width, height);\n    }\n    _render(node, hoverData) {\n        this._setHoverData(hoverData);\n        this._updateFont();\n        this._updateContent(node);\n        this._updateMaxDimensions();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n    }\n    getPosition() {\n        var _a;\n        if (!this._visibleData) {\n            return null;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            positionAffinity: this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined,\n            preference: [(_a = this._positionPreference) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */]\n        };\n    }\n    showAt(node, hoverData) {\n        var _a, _b, _c, _d;\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        this._render(node, hoverData);\n        const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n        const widgetPosition = hoverData.showAtPosition;\n        this._positionPreference = (_a = this._findPositionPreference(widgetHeight, widgetPosition)) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (hoverData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_b = hoverData.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n        // The aria label overrides the label, so if we add to it, add the contents of the hover\n        const hoverFocused = this._hover.containerDomNode.ownerDocument.activeElement === this._hover.containerDomNode;\n        const accessibleViewHint = hoverFocused && getHoverAccessibleViewHint(this._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(), (_d = (_c = this._keybindingService.lookupKeybinding('editor.action.accessibleView')) === null || _c === void 0 ? void 0 : _c.getAriaLabel()) !== null && _d !== void 0 ? _d : '');\n        if (accessibleViewHint) {\n            this._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n        }\n    }\n    hide() {\n        if (!this._visibleData) {\n            return;\n        }\n        const stoleFocus = this._visibleData.stoleFocus || this._hoverFocusedKey.get();\n        this._setHoverData(undefined);\n        this._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n        this._resizableNode.clearSashHoverState();\n        this._hoverFocusedKey.set(false);\n        this._editor.layoutContentWidget(this);\n        if (stoleFocus) {\n            this._editor.focus();\n        }\n    }\n    _removeConstraintsRenderNormally() {\n        // Added because otherwise the initial size of the hover content is smaller than should be\n        const layoutInfo = this._editor.getLayoutInfo();\n        this._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n        this._setHoverWidgetDimensions('auto', 'auto');\n    }\n    setMinimumDimensions(dimensions) {\n        // We combine the new minimum dimensions with the previous ones\n        this._minimumSize = new dom.Dimension(Math.max(this._minimumSize.width, dimensions.width), Math.max(this._minimumSize.height, dimensions.height));\n        this._updateMinimumWidth();\n    }\n    _updateMinimumWidth() {\n        const width = (typeof this._contentWidth === 'undefined'\n            ? this._minimumSize.width\n            : Math.min(this._contentWidth, this._minimumSize.width));\n        // We want to avoid that the hover is artificially large, so we use the content width as minimum width\n        this._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n    }\n    onContentsChanged() {\n        var _a;\n        this._removeConstraintsRenderNormally();\n        const containerDomNode = this._hover.containerDomNode;\n        let height = dom.getTotalHeight(containerDomNode);\n        let width = dom.getTotalWidth(containerDomNode);\n        this._resizableNode.layout(height, width);\n        this._setHoverWidgetDimensions(width, height);\n        height = dom.getTotalHeight(containerDomNode);\n        width = dom.getTotalWidth(containerDomNode);\n        this._contentWidth = width;\n        this._updateMinimumWidth();\n        this._resizableNode.layout(height, width);\n        if ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) {\n            const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n            this._positionPreference = this._findPositionPreference(widgetHeight, this._visibleData.showAtPosition);\n        }\n        this._layoutContentWidget();\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    scrollUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n    }\n    scrollDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n    }\n    scrollLeft() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY });\n    }\n    scrollRight() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY });\n    }\n    pageUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n    }\n    pageDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n    }\n    goToTop() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n    }\n    goToBottom() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.resizableContentHoverWidget';\nContentHoverWidget._lastDimensions = new dom.Dimension(0, 0);\nContentHoverWidget = ContentHoverWidget_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IConfigurationService),\n    __param(3, IAccessibilityService),\n    __param(4, IKeybindingService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}