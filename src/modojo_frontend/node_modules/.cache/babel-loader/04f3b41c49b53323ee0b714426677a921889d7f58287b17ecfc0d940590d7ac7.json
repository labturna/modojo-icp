{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheet2 } from '../../../../base/browser/dom.js';\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../base/common/cancellation.js';\nimport { itemEquals, itemsEquals } from '../../../../base/common/equals.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, constObservable, derived, disposableObservableValue, observableFromEvent, observableSignal, observableValue, transaction, waitForState } from '../../../../base/common/observable.js';\nimport { observableValueOpts } from '../../../../base/common/observableInternal/base.js';\nimport { mapObservableArrayCached } from '../../../../base/common/observableInternal/utils.js';\nimport { isUndefined } from '../../../../base/common/types.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(InlineCompletionsController_1.ID);\n  }\n  constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _accessibilitySignalService, _keybindingService, _accessibilityService) {\n    super();\n    this.editor = editor;\n    this._instantiationService = _instantiationService;\n    this._contextKeyService = _contextKeyService;\n    this._configurationService = _configurationService;\n    this._commandService = _commandService;\n    this._debounceService = _debounceService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._accessibilitySignalService = _accessibilitySignalService;\n    this._keybindingService = _keybindingService;\n    this._accessibilityService = _accessibilityService;\n    this.model = this._register(disposableObservableValue('inlineCompletionModel', undefined));\n    this._textModelVersionId = observableValue(this, -1);\n    this._positions = observableValueOpts({\n      owner: this,\n      equalsFn: itemsEquals(itemEquals())\n    }, [new Position(1, 1)]);\n    this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n      var _a, _b;\n      return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined);\n    }, tx => this.updateObservables(tx, VersionIdChangeReason.Other), item => {\n      transaction(tx => {\n        var _a;\n        /** @description InlineCompletionsController.handleSuggestAccepted */\n        this.updateObservables(tx, VersionIdChangeReason.Other);\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\n      });\n    }));\n    this._enabledInConfig = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n    this._isScreenReaderEnabled = observableFromEvent(this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n    this._editorDictationInProgress = observableFromEvent(this._contextKeyService.onDidChangeContext, () => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true);\n    this._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n    this._fontFamily = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n    this._ghostTexts = derived(this, reader => {\n      var _a;\n      const model = this.model.read(reader);\n      return (_a = model === null || model === void 0 ? void 0 : model.ghostTexts.read(reader)) !== null && _a !== void 0 ? _a : [];\n    });\n    this._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n    this._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => {\n      return store.add(this._instantiationService.createInstance(GhostTextWidget, this.editor, {\n        ghostText: ghostText,\n        minReservedLineCount: constObservable(0),\n        targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel)\n      }));\n    }).recomputeInitiallyAndOnChange(this._store);\n    this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', {\n      min: 50,\n      max: 50\n    });\n    this._playAccessibilitySignal = observableSignal(this);\n    this._isReadonly = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(91 /* EditorOption.readOnly */));\n    this._textModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n    this._textModelIfWritable = derived(reader => this._isReadonly.read(reader) ? undefined : this._textModel.read(reader));\n    this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n    this._register(autorun(reader => {\n      /** @description InlineCompletionsController.update model */\n      const textModel = this._textModelIfWritable.read(reader);\n      transaction(tx => {\n        /** @description InlineCompletionsController.onDidChangeModel/readonly */\n        this.model.set(undefined, tx);\n        this.updateObservables(tx, VersionIdChangeReason.Other);\n        if (textModel) {\n          const model = _instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetAdaptor.selectedItem, this._textModelVersionId, this._positions, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(118 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(118 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n          this.model.set(model, tx);\n        }\n      });\n    }));\n    const styleElement = this._register(createStyleSheet2());\n    this._register(autorun(reader => {\n      const fontFamily = this._fontFamily.read(reader);\n      styleElement.setStyle(fontFamily === '' || fontFamily === 'default' ? `` : `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`);\n    }));\n    const getReason = e => {\n      var _a;\n      if (e.isUndoing) {\n        return VersionIdChangeReason.Undo;\n      }\n      if (e.isRedoing) {\n        return VersionIdChangeReason.Redo;\n      }\n      if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n        return VersionIdChangeReason.AcceptWord;\n      }\n      return VersionIdChangeReason.Other;\n    };\n    this._register(editor.onDidChangeModelContent(e => transaction(tx => /** @description InlineCompletionsController.onDidChangeModelContent */\n    this.updateObservables(tx, getReason(e)))));\n    this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n      var _a;\n      /** @description InlineCompletionsController.onDidChangeCursorPosition */\n      this.updateObservables(tx, VersionIdChangeReason.Other);\n      if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n      }\n    })));\n    this._register(editor.onDidType(() => transaction(tx => {\n      var _a;\n      /** @description InlineCompletionsController.onDidType */\n      this.updateObservables(tx, VersionIdChangeReason.Other);\n      if (this._enabled.get()) {\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n      }\n    })));\n    this._register(this._commandService.onDidExecuteCommand(e => {\n      // These commands don't trigger onDidType.\n      const commands = new Set([CoreEditingCommands.Tab.id, CoreEditingCommands.DeleteLeft.id, CoreEditingCommands.DeleteRight.id, inlineSuggestCommitId, 'acceptSelectedSuggestion']);\n      if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n        transaction(tx => {\n          var _a;\n          /** @description onDidExecuteCommand */\n          (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n        });\n      }\n    }));\n    this._register(this.editor.onDidBlurEditorWidget(() => {\n      // This is a hidden setting very useful for debugging\n      if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown') || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur') || editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur) {\n        return;\n      }\n      if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n        return;\n      }\n      transaction(tx => {\n        var _a;\n        /** @description InlineCompletionsController.onDidBlurEditorWidget */\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n      });\n    }));\n    this._register(autorun(reader => {\n      var _a;\n      /** @description InlineCompletionsController.forceRenderingAbove */\n      const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n      if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n        if (state.primaryGhostText.lineCount >= 2) {\n          this._suggestWidgetAdaptor.forceRenderingAbove();\n        }\n      } else {\n        this._suggestWidgetAdaptor.stopForceRenderingAbove();\n      }\n    }));\n    this._register(toDisposable(() => {\n      this._suggestWidgetAdaptor.stopForceRenderingAbove();\n    }));\n    const cancellationStore = this._register(new DisposableStore());\n    let lastInlineCompletionId = undefined;\n    this._register(autorunHandleChanges({\n      handleChange: (context, changeSummary) => {\n        if (context.didChange(this._playAccessibilitySignal)) {\n          lastInlineCompletionId = undefined;\n        }\n        return true;\n      }\n    }, async (reader, _) => {\n      /** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n      this._playAccessibilitySignal.read(reader);\n      const model = this.model.read(reader);\n      const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n      if (!model || !state || !state.inlineCompletion) {\n        lastInlineCompletionId = undefined;\n        return;\n      }\n      if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n        cancellationStore.clear();\n        lastInlineCompletionId = state.inlineCompletion.semanticId;\n        const lineText = model.textModel.getLineContent(state.primaryGhostText.lineNumber);\n        await timeout(50, cancelOnDispose(cancellationStore));\n        await waitForState(this._suggestWidgetAdaptor.selectedItem, isUndefined, () => false, cancelOnDispose(cancellationStore));\n        await this._accessibilitySignalService.playSignal(AccessibilitySignal.inlineSuggestion);\n        if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n          this.provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n        }\n      }\n    }));\n    this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n    this._register(this._configurationService.onDidChangeConfiguration(e => {\n      if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n        this.editor.updateOptions({\n          inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n        });\n      }\n    }));\n    this.editor.updateOptions({\n      inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n    });\n  }\n  playAccessibilitySignal(tx) {\n    this._playAccessibilitySignal.trigger(tx);\n  }\n  provideScreenReaderUpdate(content) {\n    const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n    const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n    let hint;\n    if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(149 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n      hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n    }\n    hint ? alert(content + ', ' + hint) : alert(content);\n  }\n  /**\n   * Copies over the relevant state from the text model to observables.\n   * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n   * regardless of who calls into us.\n   */\n  updateObservables(tx, changeReason) {\n    var _a, _b, _c;\n    const newModel = this.editor.getModel();\n    this._textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n    this._positions.set((_c = (_b = this.editor.getSelections()) === null || _b === void 0 ? void 0 : _b.map(selection => selection.getPosition())) !== null && _c !== void 0 ? _c : [new Position(1, 1)], tx);\n  }\n  shouldShowHoverAt(range) {\n    var _a;\n    const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.primaryGhostText.get();\n    if (ghostText) {\n      return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n    }\n    return false;\n  }\n  shouldShowHoverAtViewZone(viewZoneId) {\n    var _a, _b;\n    return (_b = (_a = this._ghostTextWidgets.get()[0]) === null || _a === void 0 ? void 0 : _a.ownsViewZone(viewZoneId)) !== null && _b !== void 0 ? _b : false;\n  }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([__param(1, IInstantiationService), __param(2, IContextKeyService), __param(3, IConfigurationService), __param(4, ICommandService), __param(5, ILanguageFeatureDebounceService), __param(6, ILanguageFeaturesService), __param(7, IAccessibilitySignalService), __param(8, IKeybindingService), __param(9, IAccessibilityService)], InlineCompletionsController);\nexport { InlineCompletionsController };\nfunction convertItemsToStableObservables(items, store) {\n  const result = observableValue('result', []);\n  const innerObservables = [];\n  store.add(autorun(reader => {\n    const itemsValue = items.read(reader);\n    transaction(tx => {\n      if (itemsValue.length !== innerObservables.length) {\n        innerObservables.length = itemsValue.length;\n        for (let i = 0; i < innerObservables.length; i++) {\n          if (!innerObservables[i]) {\n            innerObservables[i] = observableValue('item', itemsValue[i]);\n          }\n        }\n        result.set([...innerObservables], tx);\n      }\n      innerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n    });\n  }));\n  return result;\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlineCompletionsController_1","createStyleSheet2","alert","timeout","cancelOnDispose","itemEquals","itemsEquals","Disposable","DisposableStore","toDisposable","autorun","autorunHandleChanges","constObservable","derived","disposableObservableValue","observableFromEvent","observableSignal","observableValue","transaction","waitForState","observableValueOpts","mapObservableArrayCached","isUndefined","CoreEditingCommands","Position","ILanguageFeatureDebounceService","ILanguageFeaturesService","inlineSuggestCommitId","GhostTextWidget","InlineCompletionContextKeys","InlineCompletionsHintsWidget","InlineSuggestionHintsContentWidget","InlineCompletionsModel","VersionIdChangeReason","SuggestWidgetAdaptor","localize","IAccessibilityService","AccessibilitySignal","IAccessibilitySignalService","ICommandService","IConfigurationService","IContextKeyService","IInstantiationService","IKeybindingService","InlineCompletionsController","get","editor","getContribution","ID","constructor","_instantiationService","_contextKeyService","_configurationService","_commandService","_debounceService","_languageFeaturesService","_accessibilitySignalService","_keybindingService","_accessibilityService","model","_register","undefined","_textModelVersionId","_positions","owner","equalsFn","_suggestWidgetAdaptor","_a","_b","selectedInlineCompletion","toSingleTextEdit","tx","updateObservables","Other","item","handleSuggestAccepted","_enabledInConfig","onDidChangeConfiguration","getOption","enabled","_isScreenReaderEnabled","onDidChangeScreenReaderOptimized","isScreenReaderOptimized","_editorDictationInProgress","onDidChangeContext","getContext","getDomNode","getValue","_enabled","reader","read","_fontFamily","fontFamily","_ghostTexts","ghostTexts","_stablizedGhostTexts","convertItemsToStableObservables","_store","_ghostTextWidgets","ghostText","store","add","createInstance","minReservedLineCount","targetTextModel","map","v","textModel","recomputeInitiallyAndOnChange","_debounceValue","for","inlineCompletionsProvider","min","max","_playAccessibilitySignal","_isReadonly","_textModel","onDidChangeModel","getModel","_textModelIfWritable","set","selectedItem","preview","previewMode","mode","styleElement","setStyle","getReason","e","isUndoing","Undo","isRedoing","Redo","isAcceptingPartially","AcceptWord","onDidChangeModelContent","onDidChangeCursorPosition","reason","source","stop","onDidType","trigger","onDidExecuteCommand","commands","Set","Tab","id","DeleteLeft","DeleteRight","has","commandId","hasTextFocus","onDidBlurEditorWidget","getContextKeyValue","keepOnBlur","dropDownVisible","state","suggestItem","primaryGhostText","lineCount","forceRenderingAbove","stopForceRenderingAbove","cancellationStore","lastInlineCompletionId","handleChange","context","changeSummary","didChange","_","inlineCompletion","semanticId","clear","lineText","getLineContent","lineNumber","playSignal","inlineSuggestion","provideScreenReaderUpdate","renderForScreenReader","affectsConfiguration","updateOptions","inlineCompletionsAccessibilityVerbose","playAccessibilitySignal","content","accessibleViewShowing","accessibleViewKeybinding","lookupKeybinding","hint","getAriaLabel","changeReason","_c","newModel","getVersionId","getSelections","selection","getPosition","shouldShowHoverAt","range","parts","some","p","containsPosition","column","shouldShowHoverAtViewZone","viewZoneId","ownsViewZone","items","result","innerObservables","itemsValue","forEach","o"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheet2 } from '../../../../base/browser/dom.js';\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../base/common/cancellation.js';\nimport { itemEquals, itemsEquals } from '../../../../base/common/equals.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, constObservable, derived, disposableObservableValue, observableFromEvent, observableSignal, observableValue, transaction, waitForState } from '../../../../base/common/observable.js';\nimport { observableValueOpts } from '../../../../base/common/observableInternal/base.js';\nimport { mapObservableArrayCached } from '../../../../base/common/observableInternal/utils.js';\nimport { isUndefined } from '../../../../base/common/types.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _accessibilitySignalService, _keybindingService, _accessibilityService) {\n        super();\n        this.editor = editor;\n        this._instantiationService = _instantiationService;\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._commandService = _commandService;\n        this._debounceService = _debounceService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._keybindingService = _keybindingService;\n        this._accessibilityService = _accessibilityService;\n        this.model = this._register(disposableObservableValue('inlineCompletionModel', undefined));\n        this._textModelVersionId = observableValue(this, -1);\n        this._positions = observableValueOpts({ owner: this, equalsFn: itemsEquals(itemEquals()) }, [new Position(1, 1)]);\n        this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other), (item) => {\n            transaction(tx => {\n                var _a;\n                /** @description InlineCompletionsController.handleSuggestAccepted */\n                this.updateObservables(tx, VersionIdChangeReason.Other);\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\n            });\n        }));\n        this._enabledInConfig = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n        this._isScreenReaderEnabled = observableFromEvent(this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n        this._editorDictationInProgress = observableFromEvent(this._contextKeyService.onDidChangeContext, () => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true);\n        this._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n        this._fontFamily = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n        this._ghostTexts = derived(this, (reader) => {\n            var _a;\n            const model = this.model.read(reader);\n            return (_a = model === null || model === void 0 ? void 0 : model.ghostTexts.read(reader)) !== null && _a !== void 0 ? _a : [];\n        });\n        this._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n        this._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => {\n            return store.add(this._instantiationService.createInstance(GhostTextWidget, this.editor, {\n                ghostText: ghostText,\n                minReservedLineCount: constObservable(0),\n                targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n            }));\n        }).recomputeInitiallyAndOnChange(this._store);\n        this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._playAccessibilitySignal = observableSignal(this);\n        this._isReadonly = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(91 /* EditorOption.readOnly */));\n        this._textModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n        this._textModelIfWritable = derived(reader => this._isReadonly.read(reader) ? undefined : this._textModel.read(reader));\n        this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n        this._register(autorun(reader => {\n            /** @description InlineCompletionsController.update model */\n            const textModel = this._textModelIfWritable.read(reader);\n            transaction(tx => {\n                /** @description InlineCompletionsController.onDidChangeModel/readonly */\n                this.model.set(undefined, tx);\n                this.updateObservables(tx, VersionIdChangeReason.Other);\n                if (textModel) {\n                    const model = _instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetAdaptor.selectedItem, this._textModelVersionId, this._positions, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(118 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(118 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                    this.model.set(model, tx);\n                }\n            });\n        }));\n        const styleElement = this._register(createStyleSheet2());\n        this._register(autorun(reader => {\n            const fontFamily = this._fontFamily.read(reader);\n            styleElement.setStyle(fontFamily === '' || fontFamily === 'default' ? `` : `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`);\n        }));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description InlineCompletionsController.onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description InlineCompletionsController.onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description InlineCompletionsController.onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this._commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown') || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description InlineCompletionsController.onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description InlineCompletionsController.forceRenderingAbove */\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.primaryGhostText.lineCount >= 2) {\n                    this._suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this._suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this._suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        const cancellationStore = this._register(new DisposableStore());\n        let lastInlineCompletionId = undefined;\n        this._register(autorunHandleChanges({\n            handleChange: (context, changeSummary) => {\n                if (context.didChange(this._playAccessibilitySignal)) {\n                    lastInlineCompletionId = undefined;\n                }\n                return true;\n            },\n        }, async (reader, _) => {\n            /** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n            this._playAccessibilitySignal.read(reader);\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.inlineCompletion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n                cancellationStore.clear();\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\n                const lineText = model.textModel.getLineContent(state.primaryGhostText.lineNumber);\n                await timeout(50, cancelOnDispose(cancellationStore));\n                await waitForState(this._suggestWidgetAdaptor.selectedItem, isUndefined, () => false, cancelOnDispose(cancellationStore));\n                await this._accessibilitySignalService.playSignal(AccessibilitySignal.inlineSuggestion);\n                if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                    this.provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n                }\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    playAccessibilitySignal(tx) {\n        this._playAccessibilitySignal.trigger(tx);\n    }\n    provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(149 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        hint ? alert(content + ', ' + hint) : alert(content);\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b, _c;\n        const newModel = this.editor.getModel();\n        this._textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this._positions.set((_c = (_b = this.editor.getSelections()) === null || _b === void 0 ? void 0 : _b.map(selection => selection.getPosition())) !== null && _c !== void 0 ? _c : [new Position(1, 1)], tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.primaryGhostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        var _a, _b;\n        return (_b = (_a = this._ghostTextWidgets.get()[0]) === null || _a === void 0 ? void 0 : _a.ownsViewZone(viewZoneId)) !== null && _b !== void 0 ? _b : false;\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAccessibilitySignalService),\n    __param(8, IKeybindingService),\n    __param(9, IAccessibilityService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\nfunction convertItemsToStableObservables(items, store) {\n    const result = observableValue('result', []);\n    const innerObservables = [];\n    store.add(autorun(reader => {\n        const itemsValue = items.read(reader);\n        transaction(tx => {\n            if (itemsValue.length !== innerObservables.length) {\n                innerObservables.length = itemsValue.length;\n                for (let i = 0; i < innerObservables.length; i++) {\n                    if (!innerObservables[i]) {\n                        innerObservables[i] = observableValue('item', itemsValue[i]);\n                    }\n                }\n                result.set([...innerObservables], tx);\n            }\n            innerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n        });\n    }));\n    return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}