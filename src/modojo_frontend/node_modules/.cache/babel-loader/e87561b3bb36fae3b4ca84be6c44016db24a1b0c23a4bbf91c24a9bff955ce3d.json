{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DECREASE_HOVER_VERBOSITY_ACTION_ID, DECREASE_HOVER_VERBOSITY_ACTION_LABEL, GO_TO_BOTTOM_HOVER_ACTION_ID, GO_TO_TOP_HOVER_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_LABEL, PAGE_DOWN_HOVER_ACTION_ID, PAGE_UP_HOVER_ACTION_ID, SCROLL_DOWN_HOVER_ACTION_ID, SCROLL_LEFT_HOVER_ACTION_ID, SCROLL_RIGHT_HOVER_ACTION_ID, SCROLL_UP_HOVER_ACTION_ID, SHOW_DEFINITION_PREVIEW_HOVER_ACTION_ID, SHOW_OR_FOCUS_HOVER_ACTION_ID } from './hoverActionIds.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { HoverController } from './hoverController.js';\nimport { HoverVerbosityAction } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport './hover.css';\nvar HoverFocusBehavior;\n(function (HoverFocusBehavior) {\n  HoverFocusBehavior[\"NoAutoFocus\"] = \"noAutoFocus\";\n  HoverFocusBehavior[\"FocusIfVisible\"] = \"focusIfVisible\";\n  HoverFocusBehavior[\"AutoFocusImmediately\"] = \"autoFocusImmediately\";\n})(HoverFocusBehavior || (HoverFocusBehavior = {}));\nexport class ShowOrFocusHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: SHOW_OR_FOCUS_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'showOrFocusHover',\n        comment: ['Label for action that will trigger the showing/focusing of a hover in the editor.', 'If the hover is not visible, it will show the hover.', 'This allows for users to show the hover without using the mouse.']\n      }, \"Show or Focus Hover\"),\n      metadata: {\n        description: nls.localize2('showOrFocusHoverDescription', 'Show or focus the editor hover which shows documentation, references, and other content for a symbol at the current cursor position.'),\n        args: [{\n          name: 'args',\n          schema: {\n            type: 'object',\n            properties: {\n              'focus': {\n                description: 'Controls if and when the hover should take focus upon being triggered by this action.',\n                enum: [HoverFocusBehavior.NoAutoFocus, HoverFocusBehavior.FocusIfVisible, HoverFocusBehavior.AutoFocusImmediately],\n                enumDescriptions: [nls.localize('showOrFocusHover.focus.noAutoFocus', 'The hover will not automatically take focus.'), nls.localize('showOrFocusHover.focus.focusIfVisible', 'The hover will take focus only if it is already visible.'), nls.localize('showOrFocusHover.focus.autoFocusImmediately', 'The hover will automatically take focus when it appears.')],\n                default: HoverFocusBehavior.FocusIfVisible\n              }\n            }\n          }\n        }]\n      },\n      alias: 'Show or Focus Hover',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor, args) {\n    if (!editor.hasModel()) {\n      return;\n    }\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    const focusArgument = args === null || args === void 0 ? void 0 : args.focus;\n    let focusOption = HoverFocusBehavior.FocusIfVisible;\n    if (Object.values(HoverFocusBehavior).includes(focusArgument)) {\n      focusOption = focusArgument;\n    } else if (typeof focusArgument === 'boolean' && focusArgument) {\n      focusOption = HoverFocusBehavior.AutoFocusImmediately;\n    }\n    const showContentHover = focus => {\n      const position = editor.getPosition();\n      const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n      controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n    };\n    const accessibilitySupportEnabled = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */;\n    if (controller.isHoverVisible) {\n      if (focusOption !== HoverFocusBehavior.NoAutoFocus) {\n        controller.focus();\n      } else {\n        showContentHover(accessibilitySupportEnabled);\n      }\n    } else {\n      showContentHover(accessibilitySupportEnabled || focusOption === HoverFocusBehavior.AutoFocusImmediately);\n    }\n  }\n}\nexport class ShowDefinitionPreviewHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: SHOW_DEFINITION_PREVIEW_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'showDefinitionPreviewHover',\n        comment: ['Label for action that will trigger the showing of definition preview hover in the editor.', 'This allows for users to show the definition preview hover without using the mouse.']\n      }, \"Show Definition Preview Hover\"),\n      alias: 'Show Definition Preview Hover',\n      precondition: undefined,\n      metadata: {\n        description: nls.localize2('showDefinitionPreviewHoverDescription', 'Show the definition preview hover in the editor.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    const position = editor.getPosition();\n    if (!position) {\n      return;\n    }\n    const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n    const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n    if (!goto) {\n      return;\n    }\n    const promise = goto.startFindDefinitionFromCursor(position);\n    promise.then(() => {\n      controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n    });\n  }\n}\nexport class ScrollUpHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: SCROLL_UP_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'scrollUpHover',\n        comment: ['Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused.']\n      }, \"Scroll Up Hover\"),\n      alias: 'Scroll Up Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 16 /* KeyCode.UpArrow */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('scrollUpHoverDescription', 'Scroll up the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.scrollUp();\n  }\n}\nexport class ScrollDownHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: SCROLL_DOWN_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'scrollDownHover',\n        comment: ['Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused.']\n      }, \"Scroll Down Hover\"),\n      alias: 'Scroll Down Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 18 /* KeyCode.DownArrow */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('scrollDownHoverDescription', 'Scroll down the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.scrollDown();\n  }\n}\nexport class ScrollLeftHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: SCROLL_LEFT_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'scrollLeftHover',\n        comment: ['Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused.']\n      }, \"Scroll Left Hover\"),\n      alias: 'Scroll Left Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 15 /* KeyCode.LeftArrow */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('scrollLeftHoverDescription', 'Scroll left the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.scrollLeft();\n  }\n}\nexport class ScrollRightHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: SCROLL_RIGHT_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'scrollRightHover',\n        comment: ['Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused.']\n      }, \"Scroll Right Hover\"),\n      alias: 'Scroll Right Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 17 /* KeyCode.RightArrow */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('scrollRightHoverDescription', 'Scroll right the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.scrollRight();\n  }\n}\nexport class PageUpHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: PAGE_UP_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'pageUpHover',\n        comment: ['Action that allows to page up in the hover widget with the page up command when the hover widget is focused.']\n      }, \"Page Up Hover\"),\n      alias: 'Page Up Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 11 /* KeyCode.PageUp */,\n        secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('pageUpHoverDescription', 'Page up the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.pageUp();\n  }\n}\nexport class PageDownHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: PAGE_DOWN_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'pageDownHover',\n        comment: ['Action that allows to page down in the hover widget with the page down command when the hover widget is focused.']\n      }, \"Page Down Hover\"),\n      alias: 'Page Down Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 12 /* KeyCode.PageDown */,\n        secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('pageDownHoverDescription', 'Page down the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.pageDown();\n  }\n}\nexport class GoToTopHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: GO_TO_TOP_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'goToTopHover',\n        comment: ['Action that allows to go to the top of the hover widget with the home command when the hover widget is focused.']\n      }, \"Go To Top Hover\"),\n      alias: 'Go To Bottom Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 14 /* KeyCode.Home */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('goToTopHoverDescription', 'Go to the top of the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.goToTop();\n  }\n}\nexport class GoToBottomHoverAction extends EditorAction {\n  constructor() {\n    super({\n      id: GO_TO_BOTTOM_HOVER_ACTION_ID,\n      label: nls.localize({\n        key: 'goToBottomHover',\n        comment: ['Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused.']\n      }, \"Go To Bottom Hover\"),\n      alias: 'Go To Bottom Hover',\n      precondition: EditorContextKeys.hoverFocused,\n      kbOpts: {\n        kbExpr: EditorContextKeys.hoverFocused,\n        primary: 13 /* KeyCode.End */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: {\n        description: nls.localize2('goToBottomHoverDescription', 'Go to the bottom of the editor hover.')\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = HoverController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.goToBottom();\n  }\n}\nexport class IncreaseHoverVerbosityLevel extends EditorAction {\n  constructor() {\n    super({\n      id: INCREASE_HOVER_VERBOSITY_ACTION_ID,\n      label: INCREASE_HOVER_VERBOSITY_ACTION_LABEL,\n      alias: 'Increase Hover Verbosity Level',\n      precondition: EditorContextKeys.hoverVisible\n    });\n  }\n  run(accessor, editor, args) {\n    var _a;\n    (_a = HoverController.get(editor)) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverVerbosityLevel(HoverVerbosityAction.Increase, args === null || args === void 0 ? void 0 : args.index, args === null || args === void 0 ? void 0 : args.focus);\n  }\n}\nexport class DecreaseHoverVerbosityLevel extends EditorAction {\n  constructor() {\n    super({\n      id: DECREASE_HOVER_VERBOSITY_ACTION_ID,\n      label: DECREASE_HOVER_VERBOSITY_ACTION_LABEL,\n      alias: 'Decrease Hover Verbosity Level',\n      precondition: EditorContextKeys.hoverVisible\n    });\n  }\n  run(accessor, editor, args) {\n    var _a;\n    (_a = HoverController.get(editor)) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverVerbosityLevel(HoverVerbosityAction.Decrease, args === null || args === void 0 ? void 0 : args.index, args === null || args === void 0 ? void 0 : args.focus);\n  }\n}","map":{"version":3,"names":["DECREASE_HOVER_VERBOSITY_ACTION_ID","DECREASE_HOVER_VERBOSITY_ACTION_LABEL","GO_TO_BOTTOM_HOVER_ACTION_ID","GO_TO_TOP_HOVER_ACTION_ID","INCREASE_HOVER_VERBOSITY_ACTION_ID","INCREASE_HOVER_VERBOSITY_ACTION_LABEL","PAGE_DOWN_HOVER_ACTION_ID","PAGE_UP_HOVER_ACTION_ID","SCROLL_DOWN_HOVER_ACTION_ID","SCROLL_LEFT_HOVER_ACTION_ID","SCROLL_RIGHT_HOVER_ACTION_ID","SCROLL_UP_HOVER_ACTION_ID","SHOW_DEFINITION_PREVIEW_HOVER_ACTION_ID","SHOW_OR_FOCUS_HOVER_ACTION_ID","KeyChord","EditorAction","Range","EditorContextKeys","GotoDefinitionAtPositionEditorContribution","HoverController","HoverVerbosityAction","nls","HoverFocusBehavior","ShowOrFocusHoverAction","constructor","id","label","localize","key","comment","metadata","description","localize2","args","name","schema","type","properties","enum","NoAutoFocus","FocusIfVisible","AutoFocusImmediately","enumDescriptions","default","alias","precondition","undefined","kbOpts","kbExpr","editorTextFocus","primary","weight","run","accessor","editor","hasModel","controller","get","focusArgument","focus","focusOption","Object","values","includes","showContentHover","position","getPosition","range","lineNumber","column","accessibilitySupportEnabled","getOption","isHoverVisible","ShowDefinitionPreviewHoverAction","goto","promise","startFindDefinitionFromCursor","then","ScrollUpHoverAction","hoverFocused","scrollUp","ScrollDownHoverAction","scrollDown","ScrollLeftHoverAction","scrollLeft","ScrollRightHoverAction","scrollRight","PageUpHoverAction","secondary","pageUp","PageDownHoverAction","pageDown","GoToTopHoverAction","goToTop","GoToBottomHoverAction","goToBottom","IncreaseHoverVerbosityLevel","hoverVisible","_a","updateMarkdownHoverVerbosityLevel","Increase","index","DecreaseHoverVerbosityLevel","Decrease"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverActions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DECREASE_HOVER_VERBOSITY_ACTION_ID, DECREASE_HOVER_VERBOSITY_ACTION_LABEL, GO_TO_BOTTOM_HOVER_ACTION_ID, GO_TO_TOP_HOVER_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_LABEL, PAGE_DOWN_HOVER_ACTION_ID, PAGE_UP_HOVER_ACTION_ID, SCROLL_DOWN_HOVER_ACTION_ID, SCROLL_LEFT_HOVER_ACTION_ID, SCROLL_RIGHT_HOVER_ACTION_ID, SCROLL_UP_HOVER_ACTION_ID, SHOW_DEFINITION_PREVIEW_HOVER_ACTION_ID, SHOW_OR_FOCUS_HOVER_ACTION_ID } from './hoverActionIds.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { HoverController } from './hoverController.js';\nimport { HoverVerbosityAction } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport './hover.css';\nvar HoverFocusBehavior;\n(function (HoverFocusBehavior) {\n    HoverFocusBehavior[\"NoAutoFocus\"] = \"noAutoFocus\";\n    HoverFocusBehavior[\"FocusIfVisible\"] = \"focusIfVisible\";\n    HoverFocusBehavior[\"AutoFocusImmediately\"] = \"autoFocusImmediately\";\n})(HoverFocusBehavior || (HoverFocusBehavior = {}));\nexport class ShowOrFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: SHOW_OR_FOCUS_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'showOrFocusHover',\n                comment: [\n                    'Label for action that will trigger the showing/focusing of a hover in the editor.',\n                    'If the hover is not visible, it will show the hover.',\n                    'This allows for users to show the hover without using the mouse.'\n                ]\n            }, \"Show or Focus Hover\"),\n            metadata: {\n                description: nls.localize2('showOrFocusHoverDescription', 'Show or focus the editor hover which shows documentation, references, and other content for a symbol at the current cursor position.'),\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'focus': {\n                                    description: 'Controls if and when the hover should take focus upon being triggered by this action.',\n                                    enum: [HoverFocusBehavior.NoAutoFocus, HoverFocusBehavior.FocusIfVisible, HoverFocusBehavior.AutoFocusImmediately],\n                                    enumDescriptions: [\n                                        nls.localize('showOrFocusHover.focus.noAutoFocus', 'The hover will not automatically take focus.'),\n                                        nls.localize('showOrFocusHover.focus.focusIfVisible', 'The hover will take focus only if it is already visible.'),\n                                        nls.localize('showOrFocusHover.focus.autoFocusImmediately', 'The hover will automatically take focus when it appears.'),\n                                    ],\n                                    default: HoverFocusBehavior.FocusIfVisible,\n                                }\n                            },\n                        }\n                    }]\n            },\n            alias: 'Show or Focus Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const focusArgument = args === null || args === void 0 ? void 0 : args.focus;\n        let focusOption = HoverFocusBehavior.FocusIfVisible;\n        if (Object.values(HoverFocusBehavior).includes(focusArgument)) {\n            focusOption = focusArgument;\n        }\n        else if (typeof focusArgument === 'boolean' && focusArgument) {\n            focusOption = HoverFocusBehavior.AutoFocusImmediately;\n        }\n        const showContentHover = (focus) => {\n            const position = editor.getPosition();\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n        };\n        const accessibilitySupportEnabled = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */;\n        if (controller.isHoverVisible) {\n            if (focusOption !== HoverFocusBehavior.NoAutoFocus) {\n                controller.focus();\n            }\n            else {\n                showContentHover(accessibilitySupportEnabled);\n            }\n        }\n        else {\n            showContentHover(accessibilitySupportEnabled || focusOption === HoverFocusBehavior.AutoFocusImmediately);\n        }\n    }\n}\nexport class ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: SHOW_DEFINITION_PREVIEW_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined,\n            metadata: {\n                description: nls.localize2('showDefinitionPreviewHoverDescription', 'Show the definition preview hover in the editor.'),\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nexport class ScrollUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: SCROLL_UP_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'scrollUpHover',\n                comment: [\n                    'Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Up Hover\"),\n            alias: 'Scroll Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 16 /* KeyCode.UpArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('scrollUpHoverDescription', 'Scroll up the editor hover.')\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollUp();\n    }\n}\nexport class ScrollDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: SCROLL_DOWN_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'scrollDownHover',\n                comment: [\n                    'Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Down Hover\"),\n            alias: 'Scroll Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 18 /* KeyCode.DownArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('scrollDownHoverDescription', 'Scroll down the editor hover.'),\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollDown();\n    }\n}\nexport class ScrollLeftHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: SCROLL_LEFT_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'scrollLeftHover',\n                comment: [\n                    'Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Left Hover\"),\n            alias: 'Scroll Left Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 15 /* KeyCode.LeftArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('scrollLeftHoverDescription', 'Scroll left the editor hover.'),\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollLeft();\n    }\n}\nexport class ScrollRightHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: SCROLL_RIGHT_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'scrollRightHover',\n                comment: [\n                    'Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Right Hover\"),\n            alias: 'Scroll Right Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 17 /* KeyCode.RightArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('scrollRightHoverDescription', 'Scroll right the editor hover.')\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollRight();\n    }\n}\nexport class PageUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: PAGE_UP_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'pageUpHover',\n                comment: [\n                    'Action that allows to page up in the hover widget with the page up command when the hover widget is focused.'\n                ]\n            }, \"Page Up Hover\"),\n            alias: 'Page Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 11 /* KeyCode.PageUp */,\n                secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('pageUpHoverDescription', 'Page up the editor hover.'),\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageUp();\n    }\n}\nexport class PageDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: PAGE_DOWN_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'pageDownHover',\n                comment: [\n                    'Action that allows to page down in the hover widget with the page down command when the hover widget is focused.'\n                ]\n            }, \"Page Down Hover\"),\n            alias: 'Page Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 12 /* KeyCode.PageDown */,\n                secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('pageDownHoverDescription', 'Page down the editor hover.'),\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageDown();\n    }\n}\nexport class GoToTopHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: GO_TO_TOP_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'goToTopHover',\n                comment: [\n                    'Action that allows to go to the top of the hover widget with the home command when the hover widget is focused.'\n                ]\n            }, \"Go To Top Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 14 /* KeyCode.Home */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('goToTopHoverDescription', 'Go to the top of the editor hover.'),\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToTop();\n    }\n}\nexport class GoToBottomHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: GO_TO_BOTTOM_HOVER_ACTION_ID,\n            label: nls.localize({\n                key: 'goToBottomHover',\n                comment: [\n                    'Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused.'\n                ]\n            }, \"Go To Bottom Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 13 /* KeyCode.End */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: nls.localize2('goToBottomHoverDescription', 'Go to the bottom of the editor hover.')\n            },\n        });\n    }\n    run(accessor, editor) {\n        const controller = HoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToBottom();\n    }\n}\nexport class IncreaseHoverVerbosityLevel extends EditorAction {\n    constructor() {\n        super({\n            id: INCREASE_HOVER_VERBOSITY_ACTION_ID,\n            label: INCREASE_HOVER_VERBOSITY_ACTION_LABEL,\n            alias: 'Increase Hover Verbosity Level',\n            precondition: EditorContextKeys.hoverVisible\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = HoverController.get(editor)) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverVerbosityLevel(HoverVerbosityAction.Increase, args === null || args === void 0 ? void 0 : args.index, args === null || args === void 0 ? void 0 : args.focus);\n    }\n}\nexport class DecreaseHoverVerbosityLevel extends EditorAction {\n    constructor() {\n        super({\n            id: DECREASE_HOVER_VERBOSITY_ACTION_ID,\n            label: DECREASE_HOVER_VERBOSITY_ACTION_LABEL,\n            alias: 'Decrease Hover Verbosity Level',\n            precondition: EditorContextKeys.hoverVisible\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = HoverController.get(editor)) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverVerbosityLevel(HoverVerbosityAction.Decrease, args === null || args === void 0 ? void 0 : args.index, args === null || args === void 0 ? void 0 : args.focus);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}