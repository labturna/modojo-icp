{"ast":null,"code":"/*\n * This file is generated from the candid for asset management.\n * didc version: 0.4.0\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default _ref => {\n  let {\n    IDL\n  } = _ref;\n  const bitcoin_network = IDL.Variant({\n    mainnet: IDL.Null,\n    testnet: IDL.Null\n  });\n  const bitcoin_address = IDL.Text;\n  const bitcoin_get_balance_args = IDL.Record({\n    network: bitcoin_network,\n    address: bitcoin_address,\n    min_confirmations: IDL.Opt(IDL.Nat32)\n  });\n  const satoshi = IDL.Nat64;\n  const bitcoin_get_balance_result = satoshi;\n  const bitcoin_get_current_fee_percentiles_args = IDL.Record({\n    network: bitcoin_network\n  });\n  const millisatoshi_per_byte = IDL.Nat64;\n  const bitcoin_get_current_fee_percentiles_result = IDL.Vec(millisatoshi_per_byte);\n  const bitcoin_get_utxos_args = IDL.Record({\n    network: bitcoin_network,\n    filter: IDL.Opt(IDL.Variant({\n      page: IDL.Vec(IDL.Nat8),\n      min_confirmations: IDL.Nat32\n    })),\n    address: bitcoin_address\n  });\n  const block_hash = IDL.Vec(IDL.Nat8);\n  const outpoint = IDL.Record({\n    txid: IDL.Vec(IDL.Nat8),\n    vout: IDL.Nat32\n  });\n  const utxo = IDL.Record({\n    height: IDL.Nat32,\n    value: satoshi,\n    outpoint: outpoint\n  });\n  const bitcoin_get_utxos_result = IDL.Record({\n    next_page: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    tip_height: IDL.Nat32,\n    tip_block_hash: block_hash,\n    utxos: IDL.Vec(utxo)\n  });\n  const bitcoin_send_transaction_args = IDL.Record({\n    transaction: IDL.Vec(IDL.Nat8),\n    network: bitcoin_network\n  });\n  const canister_id = IDL.Principal;\n  const canister_info_args = IDL.Record({\n    canister_id: canister_id,\n    num_requested_changes: IDL.Opt(IDL.Nat64)\n  });\n  const change_origin = IDL.Variant({\n    from_user: IDL.Record({\n      user_id: IDL.Principal\n    }),\n    from_canister: IDL.Record({\n      canister_version: IDL.Opt(IDL.Nat64),\n      canister_id: IDL.Principal\n    })\n  });\n  const change_details = IDL.Variant({\n    creation: IDL.Record({\n      controllers: IDL.Vec(IDL.Principal)\n    }),\n    code_deployment: IDL.Record({\n      mode: IDL.Variant({\n        reinstall: IDL.Null,\n        upgrade: IDL.Null,\n        install: IDL.Null\n      }),\n      module_hash: IDL.Vec(IDL.Nat8)\n    }),\n    controllers_change: IDL.Record({\n      controllers: IDL.Vec(IDL.Principal)\n    }),\n    code_uninstall: IDL.Null\n  });\n  const change = IDL.Record({\n    timestamp_nanos: IDL.Nat64,\n    canister_version: IDL.Nat64,\n    origin: change_origin,\n    details: change_details\n  });\n  const canister_info_result = IDL.Record({\n    controllers: IDL.Vec(IDL.Principal),\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    recent_changes: IDL.Vec(change),\n    total_num_changes: IDL.Nat64\n  });\n  const canister_status_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const log_visibility = IDL.Variant({\n    controllers: IDL.Null,\n    public: IDL.Null\n  });\n  const definite_canister_settings = IDL.Record({\n    freezing_threshold: IDL.Nat,\n    controllers: IDL.Vec(IDL.Principal),\n    reserved_cycles_limit: IDL.Nat,\n    log_visibility: log_visibility,\n    wasm_memory_limit: IDL.Nat,\n    memory_allocation: IDL.Nat,\n    compute_allocation: IDL.Nat\n  });\n  const canister_status_result = IDL.Record({\n    status: IDL.Variant({\n      stopped: IDL.Null,\n      stopping: IDL.Null,\n      running: IDL.Null\n    }),\n    memory_size: IDL.Nat,\n    cycles: IDL.Nat,\n    settings: definite_canister_settings,\n    query_stats: IDL.Record({\n      response_payload_bytes_total: IDL.Nat,\n      num_instructions_total: IDL.Nat,\n      num_calls_total: IDL.Nat,\n      request_payload_bytes_total: IDL.Nat\n    }),\n    idle_cycles_burned_per_day: IDL.Nat,\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    reserved_cycles: IDL.Nat\n  });\n  const clear_chunk_store_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const canister_settings = IDL.Record({\n    freezing_threshold: IDL.Opt(IDL.Nat),\n    controllers: IDL.Opt(IDL.Vec(IDL.Principal)),\n    reserved_cycles_limit: IDL.Opt(IDL.Nat),\n    log_visibility: IDL.Opt(log_visibility),\n    wasm_memory_limit: IDL.Opt(IDL.Nat),\n    memory_allocation: IDL.Opt(IDL.Nat),\n    compute_allocation: IDL.Opt(IDL.Nat)\n  });\n  const create_canister_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    sender_canister_version: IDL.Opt(IDL.Nat64)\n  });\n  const create_canister_result = IDL.Record({\n    canister_id: canister_id\n  });\n  const delete_canister_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const deposit_cycles_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const ecdsa_curve = IDL.Variant({\n    secp256k1: IDL.Null\n  });\n  const ecdsa_public_key_args = IDL.Record({\n    key_id: IDL.Record({\n      name: IDL.Text,\n      curve: ecdsa_curve\n    }),\n    canister_id: IDL.Opt(canister_id),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8))\n  });\n  const ecdsa_public_key_result = IDL.Record({\n    public_key: IDL.Vec(IDL.Nat8),\n    chain_code: IDL.Vec(IDL.Nat8)\n  });\n  const fetch_canister_logs_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const canister_log_record = IDL.Record({\n    idx: IDL.Nat64,\n    timestamp_nanos: IDL.Nat64,\n    content: IDL.Vec(IDL.Nat8)\n  });\n  const fetch_canister_logs_result = IDL.Record({\n    canister_log_records: IDL.Vec(canister_log_record)\n  });\n  const http_header = IDL.Record({\n    value: IDL.Text,\n    name: IDL.Text\n  });\n  const http_request_result = IDL.Record({\n    status: IDL.Nat,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(http_header)\n  });\n  const http_request_args = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Variant({\n      get: IDL.Null,\n      head: IDL.Null,\n      post: IDL.Null\n    }),\n    max_response_bytes: IDL.Opt(IDL.Nat64),\n    body: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    transform: IDL.Opt(IDL.Record({\n      function: IDL.Func([IDL.Record({\n        context: IDL.Vec(IDL.Nat8),\n        response: http_request_result\n      })], [http_request_result], ['query']),\n      context: IDL.Vec(IDL.Nat8)\n    })),\n    headers: IDL.Vec(http_header)\n  });\n  const canister_install_mode = IDL.Variant({\n    reinstall: IDL.Null,\n    upgrade: IDL.Opt(IDL.Record({\n      wasm_memory_persistence: IDL.Opt(IDL.Variant({\n        keep: IDL.Null,\n        replace: IDL.Null\n      })),\n      skip_pre_upgrade: IDL.Opt(IDL.Bool)\n    })),\n    install: IDL.Null\n  });\n  const chunk_hash = IDL.Record({\n    hash: IDL.Vec(IDL.Nat8)\n  });\n  const install_chunked_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module_hash: IDL.Vec(IDL.Nat8),\n    mode: canister_install_mode,\n    chunk_hashes_list: IDL.Vec(chunk_hash),\n    target_canister: canister_id,\n    store_canister: IDL.Opt(canister_id),\n    sender_canister_version: IDL.Opt(IDL.Nat64)\n  });\n  const wasm_module = IDL.Vec(IDL.Nat8);\n  const install_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module: wasm_module,\n    mode: canister_install_mode,\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64)\n  });\n  const node_metrics_history_args = IDL.Record({\n    start_at_timestamp_nanos: IDL.Nat64,\n    subnet_id: IDL.Principal\n  });\n  const node_metrics = IDL.Record({\n    num_block_failures_total: IDL.Nat64,\n    node_id: IDL.Principal,\n    num_blocks_proposed_total: IDL.Nat64\n  });\n  const node_metrics_history_result = IDL.Vec(IDL.Record({\n    timestamp_nanos: IDL.Nat64,\n    node_metrics: IDL.Vec(node_metrics)\n  }));\n  const provisional_create_canister_with_cycles_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    specified_id: IDL.Opt(canister_id),\n    amount: IDL.Opt(IDL.Nat),\n    sender_canister_version: IDL.Opt(IDL.Nat64)\n  });\n  const provisional_create_canister_with_cycles_result = IDL.Record({\n    canister_id: canister_id\n  });\n  const provisional_top_up_canister_args = IDL.Record({\n    canister_id: canister_id,\n    amount: IDL.Nat\n  });\n  const raw_rand_result = IDL.Vec(IDL.Nat8);\n  const schnorr_algorithm = IDL.Variant({\n    ed25519: IDL.Null,\n    bip340secp256k1: IDL.Null\n  });\n  const schnorr_public_key_args = IDL.Record({\n    key_id: IDL.Record({\n      algorithm: schnorr_algorithm,\n      name: IDL.Text\n    }),\n    canister_id: IDL.Opt(canister_id),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8))\n  });\n  const schnorr_public_key_result = IDL.Record({\n    public_key: IDL.Vec(IDL.Nat8),\n    chain_code: IDL.Vec(IDL.Nat8)\n  });\n  const sign_with_ecdsa_args = IDL.Record({\n    key_id: IDL.Record({\n      name: IDL.Text,\n      curve: ecdsa_curve\n    }),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    message_hash: IDL.Vec(IDL.Nat8)\n  });\n  const sign_with_ecdsa_result = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8)\n  });\n  const sign_with_schnorr_args = IDL.Record({\n    key_id: IDL.Record({\n      algorithm: schnorr_algorithm,\n      name: IDL.Text\n    }),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    message: IDL.Vec(IDL.Nat8)\n  });\n  const sign_with_schnorr_result = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8)\n  });\n  const start_canister_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const stop_canister_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const stored_chunks_args = IDL.Record({\n    canister_id: canister_id\n  });\n  const stored_chunks_result = IDL.Vec(chunk_hash);\n  const uninstall_code_args = IDL.Record({\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64)\n  });\n  const update_settings_args = IDL.Record({\n    canister_id: IDL.Principal,\n    settings: canister_settings,\n    sender_canister_version: IDL.Opt(IDL.Nat64)\n  });\n  const upload_chunk_args = IDL.Record({\n    chunk: IDL.Vec(IDL.Nat8),\n    canister_id: IDL.Principal\n  });\n  const upload_chunk_result = chunk_hash;\n  return IDL.Service({\n    bitcoin_get_balance: IDL.Func([bitcoin_get_balance_args], [bitcoin_get_balance_result], []),\n    bitcoin_get_current_fee_percentiles: IDL.Func([bitcoin_get_current_fee_percentiles_args], [bitcoin_get_current_fee_percentiles_result], []),\n    bitcoin_get_utxos: IDL.Func([bitcoin_get_utxos_args], [bitcoin_get_utxos_result], []),\n    bitcoin_send_transaction: IDL.Func([bitcoin_send_transaction_args], [], []),\n    canister_info: IDL.Func([canister_info_args], [canister_info_result], []),\n    canister_status: IDL.Func([canister_status_args], [canister_status_result], []),\n    clear_chunk_store: IDL.Func([clear_chunk_store_args], [], []),\n    create_canister: IDL.Func([create_canister_args], [create_canister_result], []),\n    delete_canister: IDL.Func([delete_canister_args], [], []),\n    deposit_cycles: IDL.Func([deposit_cycles_args], [], []),\n    ecdsa_public_key: IDL.Func([ecdsa_public_key_args], [ecdsa_public_key_result], []),\n    fetch_canister_logs: IDL.Func([fetch_canister_logs_args], [fetch_canister_logs_result], ['query']),\n    http_request: IDL.Func([http_request_args], [http_request_result], []),\n    install_chunked_code: IDL.Func([install_chunked_code_args], [], []),\n    install_code: IDL.Func([install_code_args], [], []),\n    node_metrics_history: IDL.Func([node_metrics_history_args], [node_metrics_history_result], []),\n    provisional_create_canister_with_cycles: IDL.Func([provisional_create_canister_with_cycles_args], [provisional_create_canister_with_cycles_result], []),\n    provisional_top_up_canister: IDL.Func([provisional_top_up_canister_args], [], []),\n    raw_rand: IDL.Func([], [raw_rand_result], []),\n    schnorr_public_key: IDL.Func([schnorr_public_key_args], [schnorr_public_key_result], []),\n    sign_with_ecdsa: IDL.Func([sign_with_ecdsa_args], [sign_with_ecdsa_result], []),\n    sign_with_schnorr: IDL.Func([sign_with_schnorr_args], [sign_with_schnorr_result], []),\n    start_canister: IDL.Func([start_canister_args], [], []),\n    stop_canister: IDL.Func([stop_canister_args], [], []),\n    stored_chunks: IDL.Func([stored_chunks_args], [stored_chunks_result], []),\n    uninstall_code: IDL.Func([uninstall_code_args], [], []),\n    update_settings: IDL.Func([update_settings_args], [], []),\n    upload_chunk: IDL.Func([upload_chunk_args], [upload_chunk_result], [])\n  });\n};","map":{"version":3,"names":["_ref","IDL","bitcoin_network","Variant","mainnet","Null","testnet","bitcoin_address","Text","bitcoin_get_balance_args","Record","network","address","min_confirmations","Opt","Nat32","satoshi","Nat64","bitcoin_get_balance_result","bitcoin_get_current_fee_percentiles_args","millisatoshi_per_byte","bitcoin_get_current_fee_percentiles_result","Vec","bitcoin_get_utxos_args","filter","page","Nat8","block_hash","outpoint","txid","vout","utxo","height","value","bitcoin_get_utxos_result","next_page","tip_height","tip_block_hash","utxos","bitcoin_send_transaction_args","transaction","canister_id","Principal","canister_info_args","num_requested_changes","change_origin","from_user","user_id","from_canister","canister_version","change_details","creation","controllers","code_deployment","mode","reinstall","upgrade","install","module_hash","controllers_change","code_uninstall","change","timestamp_nanos","origin","details","canister_info_result","recent_changes","total_num_changes","canister_status_args","log_visibility","public","definite_canister_settings","freezing_threshold","Nat","reserved_cycles_limit","wasm_memory_limit","memory_allocation","compute_allocation","canister_status_result","status","stopped","stopping","running","memory_size","cycles","settings","query_stats","response_payload_bytes_total","num_instructions_total","num_calls_total","request_payload_bytes_total","idle_cycles_burned_per_day","reserved_cycles","clear_chunk_store_args","canister_settings","create_canister_args","sender_canister_version","create_canister_result","delete_canister_args","deposit_cycles_args","ecdsa_curve","secp256k1","ecdsa_public_key_args","key_id","name","curve","derivation_path","ecdsa_public_key_result","public_key","chain_code","fetch_canister_logs_args","canister_log_record","idx","content","fetch_canister_logs_result","canister_log_records","http_header","http_request_result","body","headers","http_request_args","url","method","get","head","post","max_response_bytes","transform","function","Func","context","response","canister_install_mode","wasm_memory_persistence","keep","replace","skip_pre_upgrade","Bool","chunk_hash","hash","install_chunked_code_args","arg","wasm_module_hash","chunk_hashes_list","target_canister","store_canister","wasm_module","install_code_args","node_metrics_history_args","start_at_timestamp_nanos","subnet_id","node_metrics","num_block_failures_total","node_id","num_blocks_proposed_total","node_metrics_history_result","provisional_create_canister_with_cycles_args","specified_id","amount","provisional_create_canister_with_cycles_result","provisional_top_up_canister_args","raw_rand_result","schnorr_algorithm","ed25519","bip340secp256k1","schnorr_public_key_args","algorithm","schnorr_public_key_result","sign_with_ecdsa_args","message_hash","sign_with_ecdsa_result","signature","sign_with_schnorr_args","message","sign_with_schnorr_result","start_canister_args","stop_canister_args","stored_chunks_args","stored_chunks_result","uninstall_code_args","update_settings_args","upload_chunk_args","chunk","upload_chunk_result","Service","bitcoin_get_balance","bitcoin_get_current_fee_percentiles","bitcoin_get_utxos","bitcoin_send_transaction","canister_info","canister_status","clear_chunk_store","create_canister","delete_canister","deposit_cycles","ecdsa_public_key","fetch_canister_logs","http_request","install_chunked_code","install_code","node_metrics_history","provisional_create_canister_with_cycles","provisional_top_up_canister","raw_rand","schnorr_public_key","sign_with_ecdsa","sign_with_schnorr","start_canister","stop_canister","stored_chunks","uninstall_code","update_settings","upload_chunk"],"sources":["/home/arslan/modojo/node_modules/@dfinity/agent/src/canisters/management_idl.ts"],"sourcesContent":["/*\n * This file is generated from the candid for asset management.\n * didc version: 0.4.0\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n\nexport default ({ IDL }) => {\n  const bitcoin_network = IDL.Variant({\n    mainnet: IDL.Null,\n    testnet: IDL.Null,\n  });\n  const bitcoin_address = IDL.Text;\n  const bitcoin_get_balance_args = IDL.Record({\n    network: bitcoin_network,\n    address: bitcoin_address,\n    min_confirmations: IDL.Opt(IDL.Nat32),\n  });\n  const satoshi = IDL.Nat64;\n  const bitcoin_get_balance_result = satoshi;\n  const bitcoin_get_current_fee_percentiles_args = IDL.Record({\n    network: bitcoin_network,\n  });\n  const millisatoshi_per_byte = IDL.Nat64;\n  const bitcoin_get_current_fee_percentiles_result = IDL.Vec(millisatoshi_per_byte);\n  const bitcoin_get_utxos_args = IDL.Record({\n    network: bitcoin_network,\n    filter: IDL.Opt(\n      IDL.Variant({\n        page: IDL.Vec(IDL.Nat8),\n        min_confirmations: IDL.Nat32,\n      }),\n    ),\n    address: bitcoin_address,\n  });\n  const block_hash = IDL.Vec(IDL.Nat8);\n  const outpoint = IDL.Record({\n    txid: IDL.Vec(IDL.Nat8),\n    vout: IDL.Nat32,\n  });\n  const utxo = IDL.Record({\n    height: IDL.Nat32,\n    value: satoshi,\n    outpoint: outpoint,\n  });\n  const bitcoin_get_utxos_result = IDL.Record({\n    next_page: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    tip_height: IDL.Nat32,\n    tip_block_hash: block_hash,\n    utxos: IDL.Vec(utxo),\n  });\n  const bitcoin_send_transaction_args = IDL.Record({\n    transaction: IDL.Vec(IDL.Nat8),\n    network: bitcoin_network,\n  });\n  const canister_id = IDL.Principal;\n  const canister_info_args = IDL.Record({\n    canister_id: canister_id,\n    num_requested_changes: IDL.Opt(IDL.Nat64),\n  });\n  const change_origin = IDL.Variant({\n    from_user: IDL.Record({ user_id: IDL.Principal }),\n    from_canister: IDL.Record({\n      canister_version: IDL.Opt(IDL.Nat64),\n      canister_id: IDL.Principal,\n    }),\n  });\n  const change_details = IDL.Variant({\n    creation: IDL.Record({ controllers: IDL.Vec(IDL.Principal) }),\n    code_deployment: IDL.Record({\n      mode: IDL.Variant({\n        reinstall: IDL.Null,\n        upgrade: IDL.Null,\n        install: IDL.Null,\n      }),\n      module_hash: IDL.Vec(IDL.Nat8),\n    }),\n    controllers_change: IDL.Record({\n      controllers: IDL.Vec(IDL.Principal),\n    }),\n    code_uninstall: IDL.Null,\n  });\n  const change = IDL.Record({\n    timestamp_nanos: IDL.Nat64,\n    canister_version: IDL.Nat64,\n    origin: change_origin,\n    details: change_details,\n  });\n  const canister_info_result = IDL.Record({\n    controllers: IDL.Vec(IDL.Principal),\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    recent_changes: IDL.Vec(change),\n    total_num_changes: IDL.Nat64,\n  });\n  const canister_status_args = IDL.Record({ canister_id: canister_id });\n  const log_visibility = IDL.Variant({\n    controllers: IDL.Null,\n    public: IDL.Null,\n  });\n  const definite_canister_settings = IDL.Record({\n    freezing_threshold: IDL.Nat,\n    controllers: IDL.Vec(IDL.Principal),\n    reserved_cycles_limit: IDL.Nat,\n    log_visibility: log_visibility,\n    wasm_memory_limit: IDL.Nat,\n    memory_allocation: IDL.Nat,\n    compute_allocation: IDL.Nat,\n  });\n  const canister_status_result = IDL.Record({\n    status: IDL.Variant({\n      stopped: IDL.Null,\n      stopping: IDL.Null,\n      running: IDL.Null,\n    }),\n    memory_size: IDL.Nat,\n    cycles: IDL.Nat,\n    settings: definite_canister_settings,\n    query_stats: IDL.Record({\n      response_payload_bytes_total: IDL.Nat,\n      num_instructions_total: IDL.Nat,\n      num_calls_total: IDL.Nat,\n      request_payload_bytes_total: IDL.Nat,\n    }),\n    idle_cycles_burned_per_day: IDL.Nat,\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    reserved_cycles: IDL.Nat,\n  });\n  const clear_chunk_store_args = IDL.Record({ canister_id: canister_id });\n  const canister_settings = IDL.Record({\n    freezing_threshold: IDL.Opt(IDL.Nat),\n    controllers: IDL.Opt(IDL.Vec(IDL.Principal)),\n    reserved_cycles_limit: IDL.Opt(IDL.Nat),\n    log_visibility: IDL.Opt(log_visibility),\n    wasm_memory_limit: IDL.Opt(IDL.Nat),\n    memory_allocation: IDL.Opt(IDL.Nat),\n    compute_allocation: IDL.Opt(IDL.Nat),\n  });\n  const create_canister_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const create_canister_result = IDL.Record({ canister_id: canister_id });\n  const delete_canister_args = IDL.Record({ canister_id: canister_id });\n  const deposit_cycles_args = IDL.Record({ canister_id: canister_id });\n  const ecdsa_curve = IDL.Variant({ secp256k1: IDL.Null });\n  const ecdsa_public_key_args = IDL.Record({\n    key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n    canister_id: IDL.Opt(canister_id),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n  });\n  const ecdsa_public_key_result = IDL.Record({\n    public_key: IDL.Vec(IDL.Nat8),\n    chain_code: IDL.Vec(IDL.Nat8),\n  });\n  const fetch_canister_logs_args = IDL.Record({ canister_id: canister_id });\n  const canister_log_record = IDL.Record({\n    idx: IDL.Nat64,\n    timestamp_nanos: IDL.Nat64,\n    content: IDL.Vec(IDL.Nat8),\n  });\n  const fetch_canister_logs_result = IDL.Record({\n    canister_log_records: IDL.Vec(canister_log_record),\n  });\n  const http_header = IDL.Record({ value: IDL.Text, name: IDL.Text });\n  const http_request_result = IDL.Record({\n    status: IDL.Nat,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(http_header),\n  });\n  const http_request_args = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Variant({\n      get: IDL.Null,\n      head: IDL.Null,\n      post: IDL.Null,\n    }),\n    max_response_bytes: IDL.Opt(IDL.Nat64),\n    body: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    transform: IDL.Opt(\n      IDL.Record({\n        function: IDL.Func(\n          [\n            IDL.Record({\n              context: IDL.Vec(IDL.Nat8),\n              response: http_request_result,\n            }),\n          ],\n          [http_request_result],\n          ['query'],\n        ),\n        context: IDL.Vec(IDL.Nat8),\n      }),\n    ),\n    headers: IDL.Vec(http_header),\n  });\n  const canister_install_mode = IDL.Variant({\n    reinstall: IDL.Null,\n    upgrade: IDL.Opt(\n      IDL.Record({\n        wasm_memory_persistence: IDL.Opt(IDL.Variant({ keep: IDL.Null, replace: IDL.Null })),\n        skip_pre_upgrade: IDL.Opt(IDL.Bool),\n      }),\n    ),\n    install: IDL.Null,\n  });\n  const chunk_hash = IDL.Record({ hash: IDL.Vec(IDL.Nat8) });\n  const install_chunked_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module_hash: IDL.Vec(IDL.Nat8),\n    mode: canister_install_mode,\n    chunk_hashes_list: IDL.Vec(chunk_hash),\n    target_canister: canister_id,\n    store_canister: IDL.Opt(canister_id),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const wasm_module = IDL.Vec(IDL.Nat8);\n  const install_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module: wasm_module,\n    mode: canister_install_mode,\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const node_metrics_history_args = IDL.Record({\n    start_at_timestamp_nanos: IDL.Nat64,\n    subnet_id: IDL.Principal,\n  });\n  const node_metrics = IDL.Record({\n    num_block_failures_total: IDL.Nat64,\n    node_id: IDL.Principal,\n    num_blocks_proposed_total: IDL.Nat64,\n  });\n  const node_metrics_history_result = IDL.Vec(\n    IDL.Record({\n      timestamp_nanos: IDL.Nat64,\n      node_metrics: IDL.Vec(node_metrics),\n    }),\n  );\n  const provisional_create_canister_with_cycles_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    specified_id: IDL.Opt(canister_id),\n    amount: IDL.Opt(IDL.Nat),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const provisional_create_canister_with_cycles_result = IDL.Record({\n    canister_id: canister_id,\n  });\n  const provisional_top_up_canister_args = IDL.Record({\n    canister_id: canister_id,\n    amount: IDL.Nat,\n  });\n  const raw_rand_result = IDL.Vec(IDL.Nat8);\n  const schnorr_algorithm = IDL.Variant({\n    ed25519: IDL.Null,\n    bip340secp256k1: IDL.Null,\n  });\n  const schnorr_public_key_args = IDL.Record({\n    key_id: IDL.Record({\n      algorithm: schnorr_algorithm,\n      name: IDL.Text,\n    }),\n    canister_id: IDL.Opt(canister_id),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n  });\n  const schnorr_public_key_result = IDL.Record({\n    public_key: IDL.Vec(IDL.Nat8),\n    chain_code: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_ecdsa_args = IDL.Record({\n    key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    message_hash: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_ecdsa_result = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_schnorr_args = IDL.Record({\n    key_id: IDL.Record({\n      algorithm: schnorr_algorithm,\n      name: IDL.Text,\n    }),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    message: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_schnorr_result = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8),\n  });\n  const start_canister_args = IDL.Record({ canister_id: canister_id });\n  const stop_canister_args = IDL.Record({ canister_id: canister_id });\n  const stored_chunks_args = IDL.Record({ canister_id: canister_id });\n  const stored_chunks_result = IDL.Vec(chunk_hash);\n  const uninstall_code_args = IDL.Record({\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const update_settings_args = IDL.Record({\n    canister_id: IDL.Principal,\n    settings: canister_settings,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const upload_chunk_args = IDL.Record({\n    chunk: IDL.Vec(IDL.Nat8),\n    canister_id: IDL.Principal,\n  });\n  const upload_chunk_result = chunk_hash;\n  return IDL.Service({\n    bitcoin_get_balance: IDL.Func([bitcoin_get_balance_args], [bitcoin_get_balance_result], []),\n    bitcoin_get_current_fee_percentiles: IDL.Func(\n      [bitcoin_get_current_fee_percentiles_args],\n      [bitcoin_get_current_fee_percentiles_result],\n      [],\n    ),\n    bitcoin_get_utxos: IDL.Func([bitcoin_get_utxos_args], [bitcoin_get_utxos_result], []),\n    bitcoin_send_transaction: IDL.Func([bitcoin_send_transaction_args], [], []),\n    canister_info: IDL.Func([canister_info_args], [canister_info_result], []),\n    canister_status: IDL.Func([canister_status_args], [canister_status_result], []),\n    clear_chunk_store: IDL.Func([clear_chunk_store_args], [], []),\n    create_canister: IDL.Func([create_canister_args], [create_canister_result], []),\n    delete_canister: IDL.Func([delete_canister_args], [], []),\n    deposit_cycles: IDL.Func([deposit_cycles_args], [], []),\n    ecdsa_public_key: IDL.Func([ecdsa_public_key_args], [ecdsa_public_key_result], []),\n    fetch_canister_logs: IDL.Func(\n      [fetch_canister_logs_args],\n      [fetch_canister_logs_result],\n      ['query'],\n    ),\n    http_request: IDL.Func([http_request_args], [http_request_result], []),\n    install_chunked_code: IDL.Func([install_chunked_code_args], [], []),\n    install_code: IDL.Func([install_code_args], [], []),\n    node_metrics_history: IDL.Func([node_metrics_history_args], [node_metrics_history_result], []),\n    provisional_create_canister_with_cycles: IDL.Func(\n      [provisional_create_canister_with_cycles_args],\n      [provisional_create_canister_with_cycles_result],\n      [],\n    ),\n    provisional_top_up_canister: IDL.Func([provisional_top_up_canister_args], [], []),\n    raw_rand: IDL.Func([], [raw_rand_result], []),\n    schnorr_public_key: IDL.Func([schnorr_public_key_args], [schnorr_public_key_result], []),\n    sign_with_ecdsa: IDL.Func([sign_with_ecdsa_args], [sign_with_ecdsa_result], []),\n    sign_with_schnorr: IDL.Func([sign_with_schnorr_args], [sign_with_schnorr_result], []),\n    start_canister: IDL.Func([start_canister_args], [], []),\n    stop_canister: IDL.Func([stop_canister_args], [], []),\n    stored_chunks: IDL.Func([stored_chunks_args], [stored_chunks_result], []),\n    uninstall_code: IDL.Func([uninstall_code_args], [], []),\n    update_settings: IDL.Func([update_settings_args], [], []),\n    upload_chunk: IDL.Func([upload_chunk_args], [upload_chunk_result], []),\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}