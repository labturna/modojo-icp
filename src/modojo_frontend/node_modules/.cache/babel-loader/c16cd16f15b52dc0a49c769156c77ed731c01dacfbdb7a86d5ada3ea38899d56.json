{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray, compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { DECREASE_HOVER_VERBOSITY_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_ID } from './hoverActionIds.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { HoverVerbosityAction } from '../../../common/languages.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ClickAction, KeyDownAction } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../../../platform/hover/browser/hover.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { getHoverProviderResultsAsAsyncIterable } from './getHover.js';\nconst $ = dom.$;\nconst increaseHoverVerbosityIcon = registerIcon('hover-increase-verbosity', Codicon.add, nls.localize('increaseHoverVerbosity', 'Icon for increaseing hover verbosity.'));\nconst decreaseHoverVerbosityIcon = registerIcon('hover-decrease-verbosity', Codicon.remove, nls.localize('decreaseHoverVerbosity', 'Icon for decreasing hover verbosity.'));\nexport class MarkdownHover {\n  constructor(owner, range, contents, isBeforeContent, ordinal) {\n    let source = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : undefined;\n    this.owner = owner;\n    this.range = range;\n    this.contents = contents;\n    this.isBeforeContent = isBeforeContent;\n    this.ordinal = ordinal;\n    this.source = source;\n  }\n  isValidForHoverAnchor(anchor) {\n    return anchor.type === 1 /* HoverAnchorType.Range */ && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;\n  }\n}\nclass HoverSource {\n  constructor(hover, hoverProvider, hoverPosition) {\n    this.hover = hover;\n    this.hoverProvider = hoverProvider;\n    this.hoverPosition = hoverPosition;\n  }\n  supportsVerbosityAction(hoverVerbosityAction) {\n    var _a, _b;\n    switch (hoverVerbosityAction) {\n      case HoverVerbosityAction.Increase:\n        return (_a = this.hover.canIncreaseVerbosity) !== null && _a !== void 0 ? _a : false;\n      case HoverVerbosityAction.Decrease:\n        return (_b = this.hover.canDecreaseVerbosity) !== null && _b !== void 0 ? _b : false;\n    }\n  }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n  constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService, _keybindingService, _hoverService) {\n    this._editor = _editor;\n    this._languageService = _languageService;\n    this._openerService = _openerService;\n    this._configurationService = _configurationService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._keybindingService = _keybindingService;\n    this._hoverService = _hoverService;\n    this.hoverOrdinal = 3;\n  }\n  createLoadingMessage(anchor) {\n    return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n  }\n  computeSync(anchor, lineDecorations) {\n    if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n      return [];\n    }\n    const model = this._editor.getModel();\n    const lineNumber = anchor.range.startLineNumber;\n    const maxColumn = model.getLineMaxColumn(lineNumber);\n    const result = [];\n    let index = 1000;\n    const lineLength = model.getLineLength(lineNumber);\n    const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n    const stopRenderingLineAfter = this._editor.getOption(117 /* EditorOption.stopRenderingLineAfter */);\n    const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n      overrideIdentifier: languageId\n    });\n    let stopRenderingMessage = false;\n    if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n      stopRenderingMessage = true;\n      result.push(new MarkdownHover(this, anchor.range, [{\n        value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n      }], false, index++));\n    }\n    if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n      result.push(new MarkdownHover(this, anchor.range, [{\n        value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n      }], false, index++));\n    }\n    let isBeforeContent = false;\n    for (const d of lineDecorations) {\n      const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;\n      const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;\n      const hoverMessage = d.options.hoverMessage;\n      if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n        continue;\n      }\n      if (d.options.beforeContentClassName) {\n        isBeforeContent = true;\n      }\n      const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n      result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n    }\n    return result;\n  }\n  computeAsync(anchor, lineDecorations, token) {\n    if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n      return AsyncIterableObject.EMPTY;\n    }\n    const model = this._editor.getModel();\n    const hoverProviderRegistry = this._languageFeaturesService.hoverProvider;\n    if (!hoverProviderRegistry.has(model)) {\n      return AsyncIterableObject.EMPTY;\n    }\n    const markdownHovers = this._getMarkdownHovers(hoverProviderRegistry, model, anchor, token);\n    return markdownHovers;\n  }\n  _getMarkdownHovers(hoverProviderRegistry, model, anchor, token) {\n    const position = anchor.range.getStartPosition();\n    const hoverProviderResults = getHoverProviderResultsAsAsyncIterable(hoverProviderRegistry, model, position, token);\n    const markdownHovers = hoverProviderResults.filter(item => !isEmptyMarkdownString(item.hover.contents)).map(item => {\n      const range = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n      const hoverSource = new HoverSource(item.hover, item.provider, position);\n      return new MarkdownHover(this, range, item.hover.contents, false, item.ordinal, hoverSource);\n    });\n    return markdownHovers;\n  }\n  renderHoverParts(context, hoverParts) {\n    this._renderedHoverParts = new MarkdownRenderedHoverParts(hoverParts, context.fragment, this._editor, this._languageService, this._openerService, this._keybindingService, this._hoverService, this._configurationService, context.onContentsChanged);\n    return this._renderedHoverParts;\n  }\n  markdownHoverContentAtIndex(index) {\n    var _a, _b;\n    return (_b = (_a = this._renderedHoverParts) === null || _a === void 0 ? void 0 : _a.markdownHoverContentAtIndex(index)) !== null && _b !== void 0 ? _b : '';\n  }\n  doesMarkdownHoverAtIndexSupportVerbosityAction(index, action) {\n    var _a, _b;\n    return (_b = (_a = this._renderedHoverParts) === null || _a === void 0 ? void 0 : _a.doesMarkdownHoverAtIndexSupportVerbosityAction(index, action)) !== null && _b !== void 0 ? _b : false;\n  }\n  updateMarkdownHoverVerbosityLevel(action, index, focus) {\n    var _a;\n    (_a = this._renderedHoverParts) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverPartVerbosityLevel(action, index, focus);\n  }\n};\nMarkdownHoverParticipant = __decorate([__param(1, ILanguageService), __param(2, IOpenerService), __param(3, IConfigurationService), __param(4, ILanguageFeaturesService), __param(5, IKeybindingService), __param(6, IHoverService)], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nclass MarkdownRenderedHoverParts extends Disposable {\n  constructor(hoverParts,\n  // we own!\n  hoverPartsContainer, _editor, _languageService, _openerService, _keybindingService, _hoverService, _configurationService, _onFinishedRendering) {\n    super();\n    this._editor = _editor;\n    this._languageService = _languageService;\n    this._openerService = _openerService;\n    this._keybindingService = _keybindingService;\n    this._hoverService = _hoverService;\n    this._configurationService = _configurationService;\n    this._onFinishedRendering = _onFinishedRendering;\n    this._focusedHoverPartIndex = -1;\n    this._ongoingHoverOperations = new Map();\n    this._renderedHoverParts = this._renderHoverParts(hoverParts, hoverPartsContainer, this._onFinishedRendering);\n    this._register(toDisposable(() => {\n      this._renderedHoverParts.forEach(renderedHoverPart => {\n        renderedHoverPart.disposables.dispose();\n      });\n    }));\n    this._register(toDisposable(() => {\n      this._ongoingHoverOperations.forEach(operation => {\n        operation.tokenSource.dispose(true);\n      });\n    }));\n  }\n  _renderHoverParts(hoverParts, hoverPartsContainer, onFinishedRendering) {\n    hoverParts.sort(compareBy(hover => hover.ordinal, numberComparator));\n    return hoverParts.map((hoverPart, hoverIndex) => {\n      const renderedHoverPart = this._renderHoverPart(hoverIndex, hoverPart.contents, hoverPart.source, onFinishedRendering);\n      hoverPartsContainer.appendChild(renderedHoverPart.renderedMarkdown);\n      return renderedHoverPart;\n    });\n  }\n  _renderHoverPart(hoverPartIndex, hoverContents, hoverSource, onFinishedRendering) {\n    const {\n      renderedMarkdown,\n      disposables\n    } = this._renderMarkdownContent(hoverContents, onFinishedRendering);\n    if (!hoverSource) {\n      return {\n        renderedMarkdown,\n        disposables\n      };\n    }\n    const canIncreaseVerbosity = hoverSource.supportsVerbosityAction(HoverVerbosityAction.Increase);\n    const canDecreaseVerbosity = hoverSource.supportsVerbosityAction(HoverVerbosityAction.Decrease);\n    if (!canIncreaseVerbosity && !canDecreaseVerbosity) {\n      return {\n        renderedMarkdown,\n        disposables,\n        hoverSource\n      };\n    }\n    const actionsContainer = $('div.verbosity-actions');\n    renderedMarkdown.prepend(actionsContainer);\n    disposables.add(this._renderHoverExpansionAction(actionsContainer, HoverVerbosityAction.Increase, canIncreaseVerbosity));\n    disposables.add(this._renderHoverExpansionAction(actionsContainer, HoverVerbosityAction.Decrease, canDecreaseVerbosity));\n    this._register(dom.addDisposableListener(renderedMarkdown, dom.EventType.FOCUS_IN, event => {\n      event.stopPropagation();\n      this._focusedHoverPartIndex = hoverPartIndex;\n    }));\n    this._register(dom.addDisposableListener(renderedMarkdown, dom.EventType.FOCUS_OUT, event => {\n      event.stopPropagation();\n      this._focusedHoverPartIndex = -1;\n    }));\n    return {\n      renderedMarkdown,\n      disposables,\n      hoverSource\n    };\n  }\n  _renderMarkdownContent(markdownContent, onFinishedRendering) {\n    const renderedMarkdown = $('div.hover-row');\n    renderedMarkdown.tabIndex = 0;\n    const renderedMarkdownContents = $('div.hover-row-contents');\n    renderedMarkdown.appendChild(renderedMarkdownContents);\n    const disposables = new DisposableStore();\n    disposables.add(renderMarkdownInContainer(this._editor, renderedMarkdownContents, markdownContent, this._languageService, this._openerService, onFinishedRendering));\n    return {\n      renderedMarkdown,\n      disposables\n    };\n  }\n  _renderHoverExpansionAction(container, action, actionEnabled) {\n    const store = new DisposableStore();\n    const isActionIncrease = action === HoverVerbosityAction.Increase;\n    const actionElement = dom.append(container, $(ThemeIcon.asCSSSelector(isActionIncrease ? increaseHoverVerbosityIcon : decreaseHoverVerbosityIcon)));\n    actionElement.tabIndex = 0;\n    const hoverDelegate = new WorkbenchHoverDelegate('mouse', false, {\n      target: container,\n      position: {\n        hoverPosition: 0 /* HoverPosition.LEFT */\n      }\n    }, this._configurationService, this._hoverService);\n    store.add(this._hoverService.setupUpdatableHover(hoverDelegate, actionElement, labelForHoverVerbosityAction(this._keybindingService, action)));\n    if (!actionEnabled) {\n      actionElement.classList.add('disabled');\n      return store;\n    }\n    actionElement.classList.add('enabled');\n    const actionFunction = () => this.updateMarkdownHoverPartVerbosityLevel(action);\n    store.add(new ClickAction(actionElement, actionFunction));\n    store.add(new KeyDownAction(actionElement, actionFunction, [3 /* KeyCode.Enter */, 10 /* KeyCode.Space */]));\n    return store;\n  }\n  async updateMarkdownHoverPartVerbosityLevel(action) {\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    let focus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var _a;\n    const model = this._editor.getModel();\n    if (!model) {\n      return;\n    }\n    const indexOfInterest = index !== -1 ? index : this._focusedHoverPartIndex;\n    const hoverRenderedPart = this._getRenderedHoverPartAtIndex(indexOfInterest);\n    if (!hoverRenderedPart || !((_a = hoverRenderedPart.hoverSource) === null || _a === void 0 ? void 0 : _a.supportsVerbosityAction(action))) {\n      return;\n    }\n    const hoverSource = hoverRenderedPart.hoverSource;\n    const newHover = await this._fetchHover(hoverSource, model, action);\n    if (!newHover) {\n      return;\n    }\n    const newHoverSource = new HoverSource(newHover, hoverSource.hoverProvider, hoverSource.hoverPosition);\n    const newHoverRenderedPart = this._renderHoverPart(indexOfInterest, newHover.contents, newHoverSource, this._onFinishedRendering);\n    this._replaceRenderedHoverPartAtIndex(indexOfInterest, newHoverRenderedPart);\n    if (focus) {\n      this._focusOnHoverPartWithIndex(indexOfInterest);\n    }\n    this._onFinishedRendering();\n  }\n  markdownHoverContentAtIndex(index) {\n    var _a;\n    const hoverRenderedPart = this._getRenderedHoverPartAtIndex(index);\n    return (_a = hoverRenderedPart === null || hoverRenderedPart === void 0 ? void 0 : hoverRenderedPart.renderedMarkdown.innerText) !== null && _a !== void 0 ? _a : '';\n  }\n  doesMarkdownHoverAtIndexSupportVerbosityAction(index, action) {\n    var _a;\n    const hoverRenderedPart = this._getRenderedHoverPartAtIndex(index);\n    if (!hoverRenderedPart || !((_a = hoverRenderedPart.hoverSource) === null || _a === void 0 ? void 0 : _a.supportsVerbosityAction(action))) {\n      return false;\n    }\n    return true;\n  }\n  async _fetchHover(hoverSource, model, action) {\n    let verbosityDelta = action === HoverVerbosityAction.Increase ? 1 : -1;\n    const provider = hoverSource.hoverProvider;\n    const ongoingHoverOperation = this._ongoingHoverOperations.get(provider);\n    if (ongoingHoverOperation) {\n      ongoingHoverOperation.tokenSource.cancel();\n      verbosityDelta += ongoingHoverOperation.verbosityDelta;\n    }\n    const tokenSource = new CancellationTokenSource();\n    this._ongoingHoverOperations.set(provider, {\n      verbosityDelta,\n      tokenSource\n    });\n    const context = {\n      verbosityRequest: {\n        verbosityDelta,\n        previousHover: hoverSource.hover\n      }\n    };\n    let hover;\n    try {\n      hover = await Promise.resolve(provider.provideHover(model, hoverSource.hoverPosition, tokenSource.token, context));\n    } catch (e) {\n      onUnexpectedExternalError(e);\n    }\n    tokenSource.dispose();\n    this._ongoingHoverOperations.delete(provider);\n    return hover;\n  }\n  _replaceRenderedHoverPartAtIndex(index, renderedHoverPart) {\n    if (index >= this._renderHoverParts.length || index < 0) {\n      return;\n    }\n    const currentRenderedHoverPart = this._renderedHoverParts[index];\n    const currentRenderedMarkdown = currentRenderedHoverPart.renderedMarkdown;\n    currentRenderedMarkdown.replaceWith(renderedHoverPart.renderedMarkdown);\n    currentRenderedHoverPart.disposables.dispose();\n    this._renderedHoverParts[index] = renderedHoverPart;\n  }\n  _focusOnHoverPartWithIndex(index) {\n    this._renderedHoverParts[index].renderedMarkdown.focus();\n  }\n  _getRenderedHoverPartAtIndex(index) {\n    return this._renderedHoverParts[index];\n  }\n}\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n  // Sort hover parts to keep them stable since they might come in async, out-of-order\n  hoverParts.sort(compareBy(hover => hover.ordinal, numberComparator));\n  const disposables = new DisposableStore();\n  for (const hoverPart of hoverParts) {\n    disposables.add(renderMarkdownInContainer(editor, context.fragment, hoverPart.contents, languageService, openerService, context.onContentsChanged));\n  }\n  return disposables;\n}\nfunction renderMarkdownInContainer(editor, container, markdownStrings, languageService, openerService, onFinishedRendering) {\n  const store = new DisposableStore();\n  for (const contents of markdownStrings) {\n    if (isEmptyMarkdownString(contents)) {\n      continue;\n    }\n    const markdownHoverElement = $('div.markdown-hover');\n    const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n    const renderer = store.add(new MarkdownRenderer({\n      editor\n    }, languageService, openerService));\n    store.add(renderer.onDidRenderAsync(() => {\n      hoverContentsElement.className = 'hover-contents code-hover-contents';\n      onFinishedRendering();\n    }));\n    const renderedContents = store.add(renderer.render(contents));\n    hoverContentsElement.appendChild(renderedContents.element);\n    container.appendChild(markdownHoverElement);\n  }\n  return store;\n}\nexport function labelForHoverVerbosityAction(keybindingService, action) {\n  switch (action) {\n    case HoverVerbosityAction.Increase:\n      {\n        const kb = keybindingService.lookupKeybinding(INCREASE_HOVER_VERBOSITY_ACTION_ID);\n        return kb ? nls.localize('increaseVerbosityWithKb', \"Increase Hover Verbosity ({0})\", kb.getLabel()) : nls.localize('increaseVerbosity', \"Increase Hover Verbosity\");\n      }\n    case HoverVerbosityAction.Decrease:\n      {\n        const kb = keybindingService.lookupKeybinding(DECREASE_HOVER_VERBOSITY_ACTION_ID);\n        return kb ? nls.localize('decreaseVerbosityWithKb', \"Decrease Hover Verbosity ({0})\", kb.getLabel()) : nls.localize('decreaseVerbosity', \"Decrease Hover Verbosity\");\n      }\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","asArray","compareBy","numberComparator","CancellationTokenSource","isEmptyMarkdownString","MarkdownString","Disposable","DisposableStore","toDisposable","MarkdownRenderer","DECREASE_HOVER_VERBOSITY_ACTION_ID","INCREASE_HOVER_VERBOSITY_ACTION_ID","Range","ILanguageService","nls","IConfigurationService","IOpenerService","ILanguageFeaturesService","HoverVerbosityAction","registerIcon","Codicon","ThemeIcon","onUnexpectedExternalError","IKeybindingService","ClickAction","KeyDownAction","IHoverService","WorkbenchHoverDelegate","AsyncIterableObject","getHoverProviderResultsAsAsyncIterable","$","increaseHoverVerbosityIcon","add","localize","decreaseHoverVerbosityIcon","remove","MarkdownHover","constructor","owner","range","contents","isBeforeContent","ordinal","source","undefined","isValidForHoverAnchor","anchor","type","startColumn","endColumn","HoverSource","hover","hoverProvider","hoverPosition","supportsVerbosityAction","hoverVerbosityAction","_a","_b","Increase","canIncreaseVerbosity","Decrease","canDecreaseVerbosity","MarkdownHoverParticipant","_editor","_languageService","_openerService","_configurationService","_languageFeaturesService","_keybindingService","_hoverService","hoverOrdinal","createLoadingMessage","appendText","computeSync","lineDecorations","hasModel","model","getModel","lineNumber","startLineNumber","maxColumn","getLineMaxColumn","result","index","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","getOption","maxTokenizationLineLength","getValue","overrideIdentifier","stopRenderingMessage","push","value","endLineNumber","hoverMessage","options","beforeContentClassName","computeAsync","token","EMPTY","hoverProviderRegistry","has","markdownHovers","_getMarkdownHovers","position","getStartPosition","hoverProviderResults","filter","item","map","lift","hoverSource","provider","renderHoverParts","context","hoverParts","_renderedHoverParts","MarkdownRenderedHoverParts","fragment","onContentsChanged","markdownHoverContentAtIndex","doesMarkdownHoverAtIndexSupportVerbosityAction","action","updateMarkdownHoverVerbosityLevel","focus","updateMarkdownHoverPartVerbosityLevel","hoverPartsContainer","_onFinishedRendering","_focusedHoverPartIndex","_ongoingHoverOperations","Map","_renderHoverParts","_register","forEach","renderedHoverPart","disposables","dispose","operation","tokenSource","onFinishedRendering","sort","hoverPart","hoverIndex","_renderHoverPart","appendChild","renderedMarkdown","hoverPartIndex","hoverContents","_renderMarkdownContent","actionsContainer","prepend","_renderHoverExpansionAction","addDisposableListener","EventType","FOCUS_IN","event","stopPropagation","FOCUS_OUT","markdownContent","tabIndex","renderedMarkdownContents","renderMarkdownInContainer","container","actionEnabled","store","isActionIncrease","actionElement","append","asCSSSelector","hoverDelegate","setupUpdatableHover","labelForHoverVerbosityAction","classList","actionFunction","indexOfInterest","hoverRenderedPart","_getRenderedHoverPartAtIndex","newHover","_fetchHover","newHoverSource","newHoverRenderedPart","_replaceRenderedHoverPartAtIndex","_focusOnHoverPartWithIndex","innerText","verbosityDelta","ongoingHoverOperation","get","cancel","set","verbosityRequest","previousHover","Promise","resolve","provideHover","e","delete","currentRenderedHoverPart","currentRenderedMarkdown","replaceWith","renderMarkdownHovers","editor","languageService","openerService","markdownStrings","markdownHoverElement","hoverContentsElement","renderer","onDidRenderAsync","className","renderedContents","render","element","keybindingService","kb","lookupKeybinding","getLabel"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray, compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { DECREASE_HOVER_VERBOSITY_ACTION_ID, INCREASE_HOVER_VERBOSITY_ACTION_ID } from './hoverActionIds.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { HoverVerbosityAction } from '../../../common/languages.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ClickAction, KeyDownAction } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../../../platform/hover/browser/hover.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { getHoverProviderResultsAsAsyncIterable } from './getHover.js';\nconst $ = dom.$;\nconst increaseHoverVerbosityIcon = registerIcon('hover-increase-verbosity', Codicon.add, nls.localize('increaseHoverVerbosity', 'Icon for increaseing hover verbosity.'));\nconst decreaseHoverVerbosityIcon = registerIcon('hover-decrease-verbosity', Codicon.remove, nls.localize('decreaseHoverVerbosity', 'Icon for decreasing hover verbosity.'));\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal, source = undefined) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n        this.source = source;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nclass HoverSource {\n    constructor(hover, hoverProvider, hoverPosition) {\n        this.hover = hover;\n        this.hoverProvider = hoverProvider;\n        this.hoverPosition = hoverPosition;\n    }\n    supportsVerbosityAction(hoverVerbosityAction) {\n        var _a, _b;\n        switch (hoverVerbosityAction) {\n            case HoverVerbosityAction.Increase:\n                return (_a = this.hover.canIncreaseVerbosity) !== null && _a !== void 0 ? _a : false;\n            case HoverVerbosityAction.Decrease:\n                return (_b = this.hover.canDecreaseVerbosity) !== null && _b !== void 0 ? _b : false;\n        }\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService, _keybindingService, _hoverService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._keybindingService = _keybindingService;\n        this._hoverService = _hoverService;\n        this.hoverOrdinal = 3;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(117 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        const hoverProviderRegistry = this._languageFeaturesService.hoverProvider;\n        if (!hoverProviderRegistry.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const markdownHovers = this._getMarkdownHovers(hoverProviderRegistry, model, anchor, token);\n        return markdownHovers;\n    }\n    _getMarkdownHovers(hoverProviderRegistry, model, anchor, token) {\n        const position = anchor.range.getStartPosition();\n        const hoverProviderResults = getHoverProviderResultsAsAsyncIterable(hoverProviderRegistry, model, position, token);\n        const markdownHovers = hoverProviderResults.filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const range = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            const hoverSource = new HoverSource(item.hover, item.provider, position);\n            return new MarkdownHover(this, range, item.hover.contents, false, item.ordinal, hoverSource);\n        });\n        return markdownHovers;\n    }\n    renderHoverParts(context, hoverParts) {\n        this._renderedHoverParts = new MarkdownRenderedHoverParts(hoverParts, context.fragment, this._editor, this._languageService, this._openerService, this._keybindingService, this._hoverService, this._configurationService, context.onContentsChanged);\n        return this._renderedHoverParts;\n    }\n    markdownHoverContentAtIndex(index) {\n        var _a, _b;\n        return (_b = (_a = this._renderedHoverParts) === null || _a === void 0 ? void 0 : _a.markdownHoverContentAtIndex(index)) !== null && _b !== void 0 ? _b : '';\n    }\n    doesMarkdownHoverAtIndexSupportVerbosityAction(index, action) {\n        var _a, _b;\n        return (_b = (_a = this._renderedHoverParts) === null || _a === void 0 ? void 0 : _a.doesMarkdownHoverAtIndexSupportVerbosityAction(index, action)) !== null && _b !== void 0 ? _b : false;\n    }\n    updateMarkdownHoverVerbosityLevel(action, index, focus) {\n        var _a;\n        (_a = this._renderedHoverParts) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverPartVerbosityLevel(action, index, focus);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IKeybindingService),\n    __param(6, IHoverService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nclass MarkdownRenderedHoverParts extends Disposable {\n    constructor(hoverParts, // we own!\n    hoverPartsContainer, _editor, _languageService, _openerService, _keybindingService, _hoverService, _configurationService, _onFinishedRendering) {\n        super();\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._keybindingService = _keybindingService;\n        this._hoverService = _hoverService;\n        this._configurationService = _configurationService;\n        this._onFinishedRendering = _onFinishedRendering;\n        this._focusedHoverPartIndex = -1;\n        this._ongoingHoverOperations = new Map();\n        this._renderedHoverParts = this._renderHoverParts(hoverParts, hoverPartsContainer, this._onFinishedRendering);\n        this._register(toDisposable(() => {\n            this._renderedHoverParts.forEach(renderedHoverPart => {\n                renderedHoverPart.disposables.dispose();\n            });\n        }));\n        this._register(toDisposable(() => {\n            this._ongoingHoverOperations.forEach(operation => { operation.tokenSource.dispose(true); });\n        }));\n    }\n    _renderHoverParts(hoverParts, hoverPartsContainer, onFinishedRendering) {\n        hoverParts.sort(compareBy(hover => hover.ordinal, numberComparator));\n        return hoverParts.map((hoverPart, hoverIndex) => {\n            const renderedHoverPart = this._renderHoverPart(hoverIndex, hoverPart.contents, hoverPart.source, onFinishedRendering);\n            hoverPartsContainer.appendChild(renderedHoverPart.renderedMarkdown);\n            return renderedHoverPart;\n        });\n    }\n    _renderHoverPart(hoverPartIndex, hoverContents, hoverSource, onFinishedRendering) {\n        const { renderedMarkdown, disposables } = this._renderMarkdownContent(hoverContents, onFinishedRendering);\n        if (!hoverSource) {\n            return { renderedMarkdown, disposables };\n        }\n        const canIncreaseVerbosity = hoverSource.supportsVerbosityAction(HoverVerbosityAction.Increase);\n        const canDecreaseVerbosity = hoverSource.supportsVerbosityAction(HoverVerbosityAction.Decrease);\n        if (!canIncreaseVerbosity && !canDecreaseVerbosity) {\n            return { renderedMarkdown, disposables, hoverSource };\n        }\n        const actionsContainer = $('div.verbosity-actions');\n        renderedMarkdown.prepend(actionsContainer);\n        disposables.add(this._renderHoverExpansionAction(actionsContainer, HoverVerbosityAction.Increase, canIncreaseVerbosity));\n        disposables.add(this._renderHoverExpansionAction(actionsContainer, HoverVerbosityAction.Decrease, canDecreaseVerbosity));\n        this._register(dom.addDisposableListener(renderedMarkdown, dom.EventType.FOCUS_IN, (event) => {\n            event.stopPropagation();\n            this._focusedHoverPartIndex = hoverPartIndex;\n        }));\n        this._register(dom.addDisposableListener(renderedMarkdown, dom.EventType.FOCUS_OUT, (event) => {\n            event.stopPropagation();\n            this._focusedHoverPartIndex = -1;\n        }));\n        return { renderedMarkdown, disposables, hoverSource };\n    }\n    _renderMarkdownContent(markdownContent, onFinishedRendering) {\n        const renderedMarkdown = $('div.hover-row');\n        renderedMarkdown.tabIndex = 0;\n        const renderedMarkdownContents = $('div.hover-row-contents');\n        renderedMarkdown.appendChild(renderedMarkdownContents);\n        const disposables = new DisposableStore();\n        disposables.add(renderMarkdownInContainer(this._editor, renderedMarkdownContents, markdownContent, this._languageService, this._openerService, onFinishedRendering));\n        return { renderedMarkdown, disposables };\n    }\n    _renderHoverExpansionAction(container, action, actionEnabled) {\n        const store = new DisposableStore();\n        const isActionIncrease = action === HoverVerbosityAction.Increase;\n        const actionElement = dom.append(container, $(ThemeIcon.asCSSSelector(isActionIncrease ? increaseHoverVerbosityIcon : decreaseHoverVerbosityIcon)));\n        actionElement.tabIndex = 0;\n        const hoverDelegate = new WorkbenchHoverDelegate('mouse', false, { target: container, position: { hoverPosition: 0 /* HoverPosition.LEFT */ } }, this._configurationService, this._hoverService);\n        store.add(this._hoverService.setupUpdatableHover(hoverDelegate, actionElement, labelForHoverVerbosityAction(this._keybindingService, action)));\n        if (!actionEnabled) {\n            actionElement.classList.add('disabled');\n            return store;\n        }\n        actionElement.classList.add('enabled');\n        const actionFunction = () => this.updateMarkdownHoverPartVerbosityLevel(action);\n        store.add(new ClickAction(actionElement, actionFunction));\n        store.add(new KeyDownAction(actionElement, actionFunction, [3 /* KeyCode.Enter */, 10 /* KeyCode.Space */]));\n        return store;\n    }\n    async updateMarkdownHoverPartVerbosityLevel(action, index = -1, focus = true) {\n        var _a;\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        const indexOfInterest = index !== -1 ? index : this._focusedHoverPartIndex;\n        const hoverRenderedPart = this._getRenderedHoverPartAtIndex(indexOfInterest);\n        if (!hoverRenderedPart || !((_a = hoverRenderedPart.hoverSource) === null || _a === void 0 ? void 0 : _a.supportsVerbosityAction(action))) {\n            return;\n        }\n        const hoverSource = hoverRenderedPart.hoverSource;\n        const newHover = await this._fetchHover(hoverSource, model, action);\n        if (!newHover) {\n            return;\n        }\n        const newHoverSource = new HoverSource(newHover, hoverSource.hoverProvider, hoverSource.hoverPosition);\n        const newHoverRenderedPart = this._renderHoverPart(indexOfInterest, newHover.contents, newHoverSource, this._onFinishedRendering);\n        this._replaceRenderedHoverPartAtIndex(indexOfInterest, newHoverRenderedPart);\n        if (focus) {\n            this._focusOnHoverPartWithIndex(indexOfInterest);\n        }\n        this._onFinishedRendering();\n    }\n    markdownHoverContentAtIndex(index) {\n        var _a;\n        const hoverRenderedPart = this._getRenderedHoverPartAtIndex(index);\n        return (_a = hoverRenderedPart === null || hoverRenderedPart === void 0 ? void 0 : hoverRenderedPart.renderedMarkdown.innerText) !== null && _a !== void 0 ? _a : '';\n    }\n    doesMarkdownHoverAtIndexSupportVerbosityAction(index, action) {\n        var _a;\n        const hoverRenderedPart = this._getRenderedHoverPartAtIndex(index);\n        if (!hoverRenderedPart || !((_a = hoverRenderedPart.hoverSource) === null || _a === void 0 ? void 0 : _a.supportsVerbosityAction(action))) {\n            return false;\n        }\n        return true;\n    }\n    async _fetchHover(hoverSource, model, action) {\n        let verbosityDelta = action === HoverVerbosityAction.Increase ? 1 : -1;\n        const provider = hoverSource.hoverProvider;\n        const ongoingHoverOperation = this._ongoingHoverOperations.get(provider);\n        if (ongoingHoverOperation) {\n            ongoingHoverOperation.tokenSource.cancel();\n            verbosityDelta += ongoingHoverOperation.verbosityDelta;\n        }\n        const tokenSource = new CancellationTokenSource();\n        this._ongoingHoverOperations.set(provider, { verbosityDelta, tokenSource });\n        const context = { verbosityRequest: { verbosityDelta, previousHover: hoverSource.hover } };\n        let hover;\n        try {\n            hover = await Promise.resolve(provider.provideHover(model, hoverSource.hoverPosition, tokenSource.token, context));\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n        }\n        tokenSource.dispose();\n        this._ongoingHoverOperations.delete(provider);\n        return hover;\n    }\n    _replaceRenderedHoverPartAtIndex(index, renderedHoverPart) {\n        if (index >= this._renderHoverParts.length || index < 0) {\n            return;\n        }\n        const currentRenderedHoverPart = this._renderedHoverParts[index];\n        const currentRenderedMarkdown = currentRenderedHoverPart.renderedMarkdown;\n        currentRenderedMarkdown.replaceWith(renderedHoverPart.renderedMarkdown);\n        currentRenderedHoverPart.disposables.dispose();\n        this._renderedHoverParts[index] = renderedHoverPart;\n    }\n    _focusOnHoverPartWithIndex(index) {\n        this._renderedHoverParts[index].renderedMarkdown.focus();\n    }\n    _getRenderedHoverPartAtIndex(index) {\n        return this._renderedHoverParts[index];\n    }\n}\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort(compareBy(hover => hover.ordinal, numberComparator));\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        disposables.add(renderMarkdownInContainer(editor, context.fragment, hoverPart.contents, languageService, openerService, context.onContentsChanged));\n    }\n    return disposables;\n}\nfunction renderMarkdownInContainer(editor, container, markdownStrings, languageService, openerService, onFinishedRendering) {\n    const store = new DisposableStore();\n    for (const contents of markdownStrings) {\n        if (isEmptyMarkdownString(contents)) {\n            continue;\n        }\n        const markdownHoverElement = $('div.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = store.add(new MarkdownRenderer({ editor }, languageService, openerService));\n        store.add(renderer.onDidRenderAsync(() => {\n            hoverContentsElement.className = 'hover-contents code-hover-contents';\n            onFinishedRendering();\n        }));\n        const renderedContents = store.add(renderer.render(contents));\n        hoverContentsElement.appendChild(renderedContents.element);\n        container.appendChild(markdownHoverElement);\n    }\n    return store;\n}\nexport function labelForHoverVerbosityAction(keybindingService, action) {\n    switch (action) {\n        case HoverVerbosityAction.Increase: {\n            const kb = keybindingService.lookupKeybinding(INCREASE_HOVER_VERBOSITY_ACTION_ID);\n            return kb ?\n                nls.localize('increaseVerbosityWithKb', \"Increase Hover Verbosity ({0})\", kb.getLabel()) :\n                nls.localize('increaseVerbosity', \"Increase Hover Verbosity\");\n        }\n        case HoverVerbosityAction.Decrease: {\n            const kb = keybindingService.lookupKeybinding(DECREASE_HOVER_VERBOSITY_ACTION_ID);\n            return kb ?\n                nls.localize('decreaseVerbosityWithKb', \"Decrease Hover Verbosity ({0})\", kb.getLabel()) :\n                nls.localize('decreaseVerbosity', \"Decrease Hover Verbosity\");\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}