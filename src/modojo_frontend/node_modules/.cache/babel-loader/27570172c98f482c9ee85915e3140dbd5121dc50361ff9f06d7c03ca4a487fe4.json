{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { isEqual } from './resources.js';\nimport { escapeRegExpCharacters } from './strings.js';\nimport { URI } from './uri.js';\nexport class MarkdownString {\n  constructor() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isTrustedOrOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var _a, _b, _c;\n    this.value = value;\n    if (typeof this.value !== 'string') {\n      throw illegalArgument('value');\n    }\n    if (typeof isTrustedOrOptions === 'boolean') {\n      this.isTrusted = isTrustedOrOptions;\n      this.supportThemeIcons = false;\n      this.supportHtml = false;\n    } else {\n      this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n      this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n      this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n    }\n  }\n  appendText(value) {\n    let newlineStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n    .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n    .replace(/\\>/gm, '\\\\>') // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n    .replace(/\\n/g, newlineStyle === 1 /* MarkdownStringTextNewlineStyle.Break */ ? '\\\\\\n' : '\\n\\n'); // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n    return this;\n  }\n  appendMarkdown(value) {\n    this.value += value;\n    return this;\n  }\n  appendCodeblock(langId, code) {\n    this.value += `\\n${appendEscapedMarkdownCodeBlockFence(code, langId)}\\n`;\n    return this;\n  }\n  appendLink(target, label, title) {\n    this.value += '[';\n    this.value += this._escape(label, ']');\n    this.value += '](';\n    this.value += this._escape(String(target), ')');\n    if (title) {\n      this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n    }\n    this.value += ')';\n    return this;\n  }\n  _escape(value, ch) {\n    const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n    return value.replace(r, (match, offset) => {\n      if (value.charAt(offset - 1) !== '\\\\') {\n        return `\\\\${match}`;\n      } else {\n        return match;\n      }\n    });\n  }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n  if (isMarkdownString(oneOrMany)) {\n    return !oneOrMany.value;\n  } else if (Array.isArray(oneOrMany)) {\n    return oneOrMany.every(isEmptyMarkdownString);\n  } else {\n    return true;\n  }\n}\nexport function isMarkdownString(thing) {\n  if (thing instanceof MarkdownString) {\n    return true;\n  } else if (thing && typeof thing === 'object') {\n    return typeof thing.value === 'string' && (typeof thing.isTrusted === 'boolean' || typeof thing.isTrusted === 'object' || thing.isTrusted === undefined) && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n  }\n  return false;\n}\nexport function markdownStringEqual(a, b) {\n  if (a === b) {\n    return true;\n  } else if (!a || !b) {\n    return false;\n  } else {\n    return a.value === b.value && a.isTrusted === b.isTrusted && a.supportThemeIcons === b.supportThemeIcons && a.supportHtml === b.supportHtml && (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n  }\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n  // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n  return text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&'); // CodeQL [SM02383] Backslash is escaped in the character class\n}\n/**\n * @see https://github.com/microsoft/vscode/issues/193746\n */\nexport function appendEscapedMarkdownCodeBlockFence(code, langId) {\n  var _a, _b;\n  const longestFenceLength = (_b = (_a = code.match(/^`+/gm)) === null || _a === void 0 ? void 0 : _a.reduce((a, b) => a.length > b.length ? a : b).length) !== null && _b !== void 0 ? _b : 0;\n  const desiredFenceLength = longestFenceLength >= 3 ? longestFenceLength + 1 : 3;\n  // the markdown result\n  return [`${'`'.repeat(desiredFenceLength)}${langId}`, code, `${'`'.repeat(desiredFenceLength)}`].join('\\n');\n}\nexport function escapeDoubleQuotes(input) {\n  return input.replace(/\"/g, '&quot;');\n}\nexport function removeMarkdownEscapes(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n  const dimensions = [];\n  const splitted = href.split('|').map(s => s.trim());\n  href = splitted[0];\n  const parameters = splitted[1];\n  if (parameters) {\n    const heightFromParams = /height=(\\d+)/.exec(parameters);\n    const widthFromParams = /width=(\\d+)/.exec(parameters);\n    const height = heightFromParams ? heightFromParams[1] : '';\n    const width = widthFromParams ? widthFromParams[1] : '';\n    const widthIsFinite = isFinite(parseInt(width));\n    const heightIsFinite = isFinite(parseInt(height));\n    if (widthIsFinite) {\n      dimensions.push(`width=\"${width}\"`);\n    }\n    if (heightIsFinite) {\n      dimensions.push(`height=\"${height}\"`);\n    }\n  }\n  return {\n    href,\n    dimensions\n  };\n}","map":{"version":3,"names":["illegalArgument","escapeIcons","isEqual","escapeRegExpCharacters","URI","MarkdownString","constructor","value","arguments","length","undefined","isTrustedOrOptions","_a","_b","_c","isTrusted","supportThemeIcons","supportHtml","appendText","newlineStyle","escapeMarkdownSyntaxTokens","replace","_match","g1","repeat","appendMarkdown","appendCodeblock","langId","code","appendEscapedMarkdownCodeBlockFence","appendLink","target","label","title","_escape","String","ch","r","RegExp","match","offset","charAt","isEmptyMarkdownString","oneOrMany","isMarkdownString","Array","isArray","every","thing","markdownStringEqual","a","b","baseUri","from","text","longestFenceLength","reduce","desiredFenceLength","join","escapeDoubleQuotes","input","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","split","map","s","trim","parameters","heightFromParams","exec","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","push"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/base/common/htmlContent.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { isEqual } from './resources.js';\nimport { escapeRegExpCharacters } from './strings.js';\nimport { URI } from './uri.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* MarkdownStringTextNewlineStyle.Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\>/gm, '\\\\>') // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\n/g, newlineStyle === 1 /* MarkdownStringTextNewlineStyle.Break */ ? '\\\\\\n' : '\\n\\n'); // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += `\\n${appendEscapedMarkdownCodeBlockFence(code, langId)}\\n`;\n        return this;\n    }\n    appendLink(target, label, title) {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n    _escape(value, ch) {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || typeof thing.isTrusted === 'object' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function markdownStringEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else if (!a || !b) {\n        return false;\n    }\n    else {\n        return a.value === b.value\n            && a.isTrusted === b.isTrusted\n            && a.supportThemeIcons === b.supportThemeIcons\n            && a.supportHtml === b.supportHtml\n            && (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n    }\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&'); // CodeQL [SM02383] Backslash is escaped in the character class\n}\n/**\n * @see https://github.com/microsoft/vscode/issues/193746\n */\nexport function appendEscapedMarkdownCodeBlockFence(code, langId) {\n    var _a, _b;\n    const longestFenceLength = (_b = (_a = code.match(/^`+/gm)) === null || _a === void 0 ? void 0 : _a.reduce((a, b) => (a.length > b.length ? a : b)).length) !== null && _b !== void 0 ? _b : 0;\n    const desiredFenceLength = longestFenceLength >= 3 ? longestFenceLength + 1 : 3;\n    // the markdown result\n    return [\n        `${'`'.repeat(desiredFenceLength)}${langId}`,\n        code,\n        `${'`'.repeat(desiredFenceLength)}`,\n    ].join('\\n');\n}\nexport function escapeDoubleQuotes(input) {\n    return input.replace(/\"/g, '&quot;');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}