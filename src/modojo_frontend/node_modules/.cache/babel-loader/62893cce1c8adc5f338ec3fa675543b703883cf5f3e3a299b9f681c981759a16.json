{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { DropdownMenuActionViewItem } from '../dropdown/dropdownActionViewItem.js';\nimport { Action, SubmenuAction } from '../../../common/actions.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { EventMultiplexer } from '../../../common/event.js';\nimport { Disposable, DisposableStore } from '../../../common/lifecycle.js';\nimport './toolbar.css';\nimport * as nls from '../../../../nls.js';\nimport { createInstantHoverDelegate } from '../hover/hoverDelegateFactory.js';\n/**\n * A widget that combines an action bar for primary actions and a dropdown for secondary actions.\n */\nexport class ToolBar extends Disposable {\n  constructor(container, contextMenuProvider) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      orientation: 0 /* ActionsOrientation.HORIZONTAL */\n    };\n    var _a;\n    super();\n    this.submenuActionViewItems = [];\n    this.hasSecondaryActions = false;\n    this._onDidChangeDropdownVisibility = this._register(new EventMultiplexer());\n    this.onDidChangeDropdownVisibility = this._onDidChangeDropdownVisibility.event;\n    this.disposables = this._register(new DisposableStore());\n    options.hoverDelegate = (_a = options.hoverDelegate) !== null && _a !== void 0 ? _a : this._register(createInstantHoverDelegate());\n    this.options = options;\n    this.lookupKeybindings = typeof this.options.getKeyBinding === 'function';\n    this.toggleMenuAction = this._register(new ToggleMenuAction(() => {\n      var _a;\n      return (_a = this.toggleMenuActionViewItem) === null || _a === void 0 ? void 0 : _a.show();\n    }, options.toggleMenuTitle));\n    this.element = document.createElement('div');\n    this.element.className = 'monaco-toolbar';\n    container.appendChild(this.element);\n    this.actionBar = this._register(new ActionBar(this.element, {\n      orientation: options.orientation,\n      ariaLabel: options.ariaLabel,\n      actionRunner: options.actionRunner,\n      allowContextMenu: options.allowContextMenu,\n      highlightToggledItems: options.highlightToggledItems,\n      hoverDelegate: options.hoverDelegate,\n      actionViewItemProvider: (action, viewItemOptions) => {\n        var _a;\n        if (action.id === ToggleMenuAction.ID) {\n          this.toggleMenuActionViewItem = new DropdownMenuActionViewItem(action, action.menuActions, contextMenuProvider, {\n            actionViewItemProvider: this.options.actionViewItemProvider,\n            actionRunner: this.actionRunner,\n            keybindingProvider: this.options.getKeyBinding,\n            classNames: ThemeIcon.asClassNameArray((_a = options.moreIcon) !== null && _a !== void 0 ? _a : Codicon.toolBarMore),\n            anchorAlignmentProvider: this.options.anchorAlignmentProvider,\n            menuAsChild: !!this.options.renderDropdownAsChildElement,\n            skipTelemetry: this.options.skipTelemetry,\n            isMenu: true,\n            hoverDelegate: this.options.hoverDelegate\n          });\n          this.toggleMenuActionViewItem.setActionContext(this.actionBar.context);\n          this.disposables.add(this._onDidChangeDropdownVisibility.add(this.toggleMenuActionViewItem.onDidChangeVisibility));\n          return this.toggleMenuActionViewItem;\n        }\n        if (options.actionViewItemProvider) {\n          const result = options.actionViewItemProvider(action, viewItemOptions);\n          if (result) {\n            return result;\n          }\n        }\n        if (action instanceof SubmenuAction) {\n          const result = new DropdownMenuActionViewItem(action, action.actions, contextMenuProvider, {\n            actionViewItemProvider: this.options.actionViewItemProvider,\n            actionRunner: this.actionRunner,\n            keybindingProvider: this.options.getKeyBinding,\n            classNames: action.class,\n            anchorAlignmentProvider: this.options.anchorAlignmentProvider,\n            menuAsChild: !!this.options.renderDropdownAsChildElement,\n            skipTelemetry: this.options.skipTelemetry,\n            hoverDelegate: this.options.hoverDelegate\n          });\n          result.setActionContext(this.actionBar.context);\n          this.submenuActionViewItems.push(result);\n          this.disposables.add(this._onDidChangeDropdownVisibility.add(result.onDidChangeVisibility));\n          return result;\n        }\n        return undefined;\n      }\n    }));\n  }\n  set actionRunner(actionRunner) {\n    this.actionBar.actionRunner = actionRunner;\n  }\n  get actionRunner() {\n    return this.actionBar.actionRunner;\n  }\n  getElement() {\n    return this.element;\n  }\n  getItemAction(indexOrElement) {\n    return this.actionBar.getAction(indexOrElement);\n  }\n  setActions(primaryActions, secondaryActions) {\n    this.clear();\n    const primaryActionsToSet = primaryActions ? primaryActions.slice(0) : [];\n    // Inject additional action to open secondary actions if present\n    this.hasSecondaryActions = !!(secondaryActions && secondaryActions.length > 0);\n    if (this.hasSecondaryActions && secondaryActions) {\n      this.toggleMenuAction.menuActions = secondaryActions.slice(0);\n      primaryActionsToSet.push(this.toggleMenuAction);\n    }\n    primaryActionsToSet.forEach(action => {\n      this.actionBar.push(action, {\n        icon: true,\n        label: false,\n        keybinding: this.getKeybindingLabel(action)\n      });\n    });\n  }\n  getKeybindingLabel(action) {\n    var _a, _b, _c;\n    const key = this.lookupKeybindings ? (_b = (_a = this.options).getKeyBinding) === null || _b === void 0 ? void 0 : _b.call(_a, action) : undefined;\n    return (_c = key === null || key === void 0 ? void 0 : key.getLabel()) !== null && _c !== void 0 ? _c : undefined;\n  }\n  clear() {\n    this.submenuActionViewItems = [];\n    this.disposables.clear();\n    this.actionBar.clear();\n  }\n  dispose() {\n    this.clear();\n    this.disposables.dispose();\n    super.dispose();\n  }\n}\nexport class ToggleMenuAction extends Action {\n  constructor(toggleDropdownMenu, title) {\n    title = title || nls.localize('moreActions', \"More Actions...\");\n    super(ToggleMenuAction.ID, title, undefined, true);\n    this._menuActions = [];\n    this.toggleDropdownMenu = toggleDropdownMenu;\n  }\n  async run() {\n    this.toggleDropdownMenu();\n  }\n  get menuActions() {\n    return this._menuActions;\n  }\n  set menuActions(actions) {\n    this._menuActions = actions;\n  }\n}\nToggleMenuAction.ID = 'toolbar.toggle.more';","map":{"version":3,"names":["ActionBar","DropdownMenuActionViewItem","Action","SubmenuAction","Codicon","ThemeIcon","EventMultiplexer","Disposable","DisposableStore","nls","createInstantHoverDelegate","ToolBar","constructor","container","contextMenuProvider","options","arguments","length","undefined","orientation","_a","submenuActionViewItems","hasSecondaryActions","_onDidChangeDropdownVisibility","_register","onDidChangeDropdownVisibility","event","disposables","hoverDelegate","lookupKeybindings","getKeyBinding","toggleMenuAction","ToggleMenuAction","toggleMenuActionViewItem","show","toggleMenuTitle","element","document","createElement","className","appendChild","actionBar","ariaLabel","actionRunner","allowContextMenu","highlightToggledItems","actionViewItemProvider","action","viewItemOptions","id","ID","menuActions","keybindingProvider","classNames","asClassNameArray","moreIcon","toolBarMore","anchorAlignmentProvider","menuAsChild","renderDropdownAsChildElement","skipTelemetry","isMenu","setActionContext","context","add","onDidChangeVisibility","result","actions","class","push","getElement","getItemAction","indexOrElement","getAction","setActions","primaryActions","secondaryActions","clear","primaryActionsToSet","slice","forEach","icon","label","keybinding","getKeybindingLabel","_b","_c","key","call","getLabel","dispose","toggleDropdownMenu","title","localize","_menuActions","run"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/base/browser/ui/toolbar/toolbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { DropdownMenuActionViewItem } from '../dropdown/dropdownActionViewItem.js';\nimport { Action, SubmenuAction } from '../../../common/actions.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { EventMultiplexer } from '../../../common/event.js';\nimport { Disposable, DisposableStore } from '../../../common/lifecycle.js';\nimport './toolbar.css';\nimport * as nls from '../../../../nls.js';\nimport { createInstantHoverDelegate } from '../hover/hoverDelegateFactory.js';\n/**\n * A widget that combines an action bar for primary actions and a dropdown for secondary actions.\n */\nexport class ToolBar extends Disposable {\n    constructor(container, contextMenuProvider, options = { orientation: 0 /* ActionsOrientation.HORIZONTAL */ }) {\n        var _a;\n        super();\n        this.submenuActionViewItems = [];\n        this.hasSecondaryActions = false;\n        this._onDidChangeDropdownVisibility = this._register(new EventMultiplexer());\n        this.onDidChangeDropdownVisibility = this._onDidChangeDropdownVisibility.event;\n        this.disposables = this._register(new DisposableStore());\n        options.hoverDelegate = (_a = options.hoverDelegate) !== null && _a !== void 0 ? _a : this._register(createInstantHoverDelegate());\n        this.options = options;\n        this.lookupKeybindings = typeof this.options.getKeyBinding === 'function';\n        this.toggleMenuAction = this._register(new ToggleMenuAction(() => { var _a; return (_a = this.toggleMenuActionViewItem) === null || _a === void 0 ? void 0 : _a.show(); }, options.toggleMenuTitle));\n        this.element = document.createElement('div');\n        this.element.className = 'monaco-toolbar';\n        container.appendChild(this.element);\n        this.actionBar = this._register(new ActionBar(this.element, {\n            orientation: options.orientation,\n            ariaLabel: options.ariaLabel,\n            actionRunner: options.actionRunner,\n            allowContextMenu: options.allowContextMenu,\n            highlightToggledItems: options.highlightToggledItems,\n            hoverDelegate: options.hoverDelegate,\n            actionViewItemProvider: (action, viewItemOptions) => {\n                var _a;\n                if (action.id === ToggleMenuAction.ID) {\n                    this.toggleMenuActionViewItem = new DropdownMenuActionViewItem(action, action.menuActions, contextMenuProvider, {\n                        actionViewItemProvider: this.options.actionViewItemProvider,\n                        actionRunner: this.actionRunner,\n                        keybindingProvider: this.options.getKeyBinding,\n                        classNames: ThemeIcon.asClassNameArray((_a = options.moreIcon) !== null && _a !== void 0 ? _a : Codicon.toolBarMore),\n                        anchorAlignmentProvider: this.options.anchorAlignmentProvider,\n                        menuAsChild: !!this.options.renderDropdownAsChildElement,\n                        skipTelemetry: this.options.skipTelemetry,\n                        isMenu: true,\n                        hoverDelegate: this.options.hoverDelegate\n                    });\n                    this.toggleMenuActionViewItem.setActionContext(this.actionBar.context);\n                    this.disposables.add(this._onDidChangeDropdownVisibility.add(this.toggleMenuActionViewItem.onDidChangeVisibility));\n                    return this.toggleMenuActionViewItem;\n                }\n                if (options.actionViewItemProvider) {\n                    const result = options.actionViewItemProvider(action, viewItemOptions);\n                    if (result) {\n                        return result;\n                    }\n                }\n                if (action instanceof SubmenuAction) {\n                    const result = new DropdownMenuActionViewItem(action, action.actions, contextMenuProvider, {\n                        actionViewItemProvider: this.options.actionViewItemProvider,\n                        actionRunner: this.actionRunner,\n                        keybindingProvider: this.options.getKeyBinding,\n                        classNames: action.class,\n                        anchorAlignmentProvider: this.options.anchorAlignmentProvider,\n                        menuAsChild: !!this.options.renderDropdownAsChildElement,\n                        skipTelemetry: this.options.skipTelemetry,\n                        hoverDelegate: this.options.hoverDelegate\n                    });\n                    result.setActionContext(this.actionBar.context);\n                    this.submenuActionViewItems.push(result);\n                    this.disposables.add(this._onDidChangeDropdownVisibility.add(result.onDidChangeVisibility));\n                    return result;\n                }\n                return undefined;\n            }\n        }));\n    }\n    set actionRunner(actionRunner) {\n        this.actionBar.actionRunner = actionRunner;\n    }\n    get actionRunner() {\n        return this.actionBar.actionRunner;\n    }\n    getElement() {\n        return this.element;\n    }\n    getItemAction(indexOrElement) {\n        return this.actionBar.getAction(indexOrElement);\n    }\n    setActions(primaryActions, secondaryActions) {\n        this.clear();\n        const primaryActionsToSet = primaryActions ? primaryActions.slice(0) : [];\n        // Inject additional action to open secondary actions if present\n        this.hasSecondaryActions = !!(secondaryActions && secondaryActions.length > 0);\n        if (this.hasSecondaryActions && secondaryActions) {\n            this.toggleMenuAction.menuActions = secondaryActions.slice(0);\n            primaryActionsToSet.push(this.toggleMenuAction);\n        }\n        primaryActionsToSet.forEach(action => {\n            this.actionBar.push(action, { icon: true, label: false, keybinding: this.getKeybindingLabel(action) });\n        });\n    }\n    getKeybindingLabel(action) {\n        var _a, _b, _c;\n        const key = this.lookupKeybindings ? (_b = (_a = this.options).getKeyBinding) === null || _b === void 0 ? void 0 : _b.call(_a, action) : undefined;\n        return (_c = key === null || key === void 0 ? void 0 : key.getLabel()) !== null && _c !== void 0 ? _c : undefined;\n    }\n    clear() {\n        this.submenuActionViewItems = [];\n        this.disposables.clear();\n        this.actionBar.clear();\n    }\n    dispose() {\n        this.clear();\n        this.disposables.dispose();\n        super.dispose();\n    }\n}\nexport class ToggleMenuAction extends Action {\n    constructor(toggleDropdownMenu, title) {\n        title = title || nls.localize('moreActions', \"More Actions...\");\n        super(ToggleMenuAction.ID, title, undefined, true);\n        this._menuActions = [];\n        this.toggleDropdownMenu = toggleDropdownMenu;\n    }\n    async run() {\n        this.toggleDropdownMenu();\n    }\n    get menuActions() {\n        return this._menuActions;\n    }\n    set menuActions(actions) {\n        this._menuActions = actions;\n    }\n}\nToggleMenuAction.ID = 'toolbar.toggle.more';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}