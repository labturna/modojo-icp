{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../common/core/position.js';\nimport * as languages from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const Context = {\n  Visible: new RawContextKey('parameterHintsVisible', false),\n  MultipleSignatures: new RawContextKey('parameterHintsMultipleSignatures', false)\n};\nexport async function provideSignatureHelp(registry, model, position, context, token) {\n  const supports = registry.ordered(model);\n  for (const support of supports) {\n    try {\n      const result = await support.provideSignatureHelp(model, position, token, context);\n      if (result) {\n        return result;\n      }\n    } catch (err) {\n      onUnexpectedExternalError(err);\n    }\n  }\n  return undefined;\n}\nCommandsRegistry.registerCommand('_executeSignatureHelpProvider', async function (accessor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  const [uri, position, triggerCharacter] = args;\n  assertType(URI.isUri(uri));\n  assertType(Position.isIPosition(position));\n  assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n  const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n  const ref = await accessor.get(ITextModelService).createModelReference(uri);\n  try {\n    const result = await provideSignatureHelp(languageFeaturesService.signatureHelpProvider, ref.object.textEditorModel, Position.lift(position), {\n      triggerKind: languages.SignatureHelpTriggerKind.Invoke,\n      isRetrigger: false,\n      triggerCharacter\n    }, CancellationToken.None);\n    if (!result) {\n      return undefined;\n    }\n    setTimeout(() => result.dispose(), 0);\n    return result.value;\n  } finally {\n    ref.dispose();\n  }\n});","map":{"version":3,"names":["CancellationToken","onUnexpectedExternalError","assertType","URI","Position","languages","ILanguageFeaturesService","ITextModelService","CommandsRegistry","RawContextKey","Context","Visible","MultipleSignatures","provideSignatureHelp","registry","model","position","context","token","supports","ordered","support","result","err","undefined","registerCommand","accessor","_len","arguments","length","args","Array","_key","uri","triggerCharacter","isUri","isIPosition","languageFeaturesService","get","ref","createModelReference","signatureHelpProvider","object","textEditorModel","lift","triggerKind","SignatureHelpTriggerKind","Invoke","isRetrigger","None","setTimeout","dispose","value"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/browser/provideSignatureHelp.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../common/core/position.js';\nimport * as languages from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const Context = {\n    Visible: new RawContextKey('parameterHintsVisible', false),\n    MultipleSignatures: new RawContextKey('parameterHintsMultipleSignatures', false),\n};\nexport async function provideSignatureHelp(registry, model, position, context, token) {\n    const supports = registry.ordered(model);\n    for (const support of supports) {\n        try {\n            const result = await support.provideSignatureHelp(model, position, token, context);\n            if (result) {\n                return result;\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n    }\n    return undefined;\n}\nCommandsRegistry.registerCommand('_executeSignatureHelpProvider', async (accessor, ...args) => {\n    const [uri, position, triggerCharacter] = args;\n    assertType(URI.isUri(uri));\n    assertType(Position.isIPosition(position));\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const ref = await accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const result = await provideSignatureHelp(languageFeaturesService.signatureHelpProvider, ref.object.textEditorModel, Position.lift(position), {\n            triggerKind: languages.SignatureHelpTriggerKind.Invoke,\n            isRetrigger: false,\n            triggerCharacter,\n        }, CancellationToken.None);\n        if (!result) {\n            return undefined;\n        }\n        setTimeout(() => result.dispose(), 0);\n        return result.value;\n    }\n    finally {\n        ref.dispose();\n    }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,GAAG,QAAQ,gCAAgC;AACpD,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,OAAO,KAAKC,SAAS,MAAM,8BAA8B;AACzD,SAASC,wBAAwB,QAAQ,8CAA8C;AACvF,SAASC,iBAAiB,QAAQ,6CAA6C;AAC/E,SAASC,gBAAgB,QAAQ,kDAAkD;AACnF,SAASC,aAAa,QAAQ,sDAAsD;AACpF,OAAO,MAAMC,OAAO,GAAG;EACnBC,OAAO,EAAE,IAAIF,aAAa,CAAC,uBAAuB,EAAE,KAAK,CAAC;EAC1DG,kBAAkB,EAAE,IAAIH,aAAa,CAAC,kCAAkC,EAAE,KAAK;AACnF,CAAC;AACD,OAAO,eAAeI,oBAAoBA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAE;EAClF,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,OAAO,CAACL,KAAK,CAAC;EACxC,KAAK,MAAMM,OAAO,IAAIF,QAAQ,EAAE;IAC5B,IAAI;MACA,MAAMG,MAAM,GAAG,MAAMD,OAAO,CAACR,oBAAoB,CAACE,KAAK,EAAEC,QAAQ,EAAEE,KAAK,EAAED,OAAO,CAAC;MAClF,IAAIK,MAAM,EAAE;QACR,OAAOA,MAAM;MACjB;IACJ,CAAC,CACD,OAAOC,GAAG,EAAE;MACRtB,yBAAyB,CAACsB,GAAG,CAAC;IAClC;EACJ;EACA,OAAOC,SAAS;AACpB;AACAhB,gBAAgB,CAACiB,eAAe,CAAC,+BAA+B,EAAE,gBAAOC,QAAQ,EAAc;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EACtF,MAAM,CAACC,GAAG,EAAEjB,QAAQ,EAAEkB,gBAAgB,CAAC,GAAGJ,IAAI;EAC9C5B,UAAU,CAACC,GAAG,CAACgC,KAAK,CAACF,GAAG,CAAC,CAAC;EAC1B/B,UAAU,CAACE,QAAQ,CAACgC,WAAW,CAACpB,QAAQ,CAAC,CAAC;EAC1Cd,UAAU,CAAC,OAAOgC,gBAAgB,KAAK,QAAQ,IAAI,CAACA,gBAAgB,CAAC;EACrE,MAAMG,uBAAuB,GAAGX,QAAQ,CAACY,GAAG,CAAChC,wBAAwB,CAAC;EACtE,MAAMiC,GAAG,GAAG,MAAMb,QAAQ,CAACY,GAAG,CAAC/B,iBAAiB,CAAC,CAACiC,oBAAoB,CAACP,GAAG,CAAC;EAC3E,IAAI;IACA,MAAMX,MAAM,GAAG,MAAMT,oBAAoB,CAACwB,uBAAuB,CAACI,qBAAqB,EAAEF,GAAG,CAACG,MAAM,CAACC,eAAe,EAAEvC,QAAQ,CAACwC,IAAI,CAAC5B,QAAQ,CAAC,EAAE;MAC1I6B,WAAW,EAAExC,SAAS,CAACyC,wBAAwB,CAACC,MAAM;MACtDC,WAAW,EAAE,KAAK;MAClBd;IACJ,CAAC,EAAElC,iBAAiB,CAACiD,IAAI,CAAC;IAC1B,IAAI,CAAC3B,MAAM,EAAE;MACT,OAAOE,SAAS;IACpB;IACA0B,UAAU,CAAC,MAAM5B,MAAM,CAAC6B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IACrC,OAAO7B,MAAM,CAAC8B,KAAK;EACvB,CAAC,SACO;IACJb,GAAG,CAACY,OAAO,CAAC,CAAC;EACjB;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}