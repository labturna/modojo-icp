{"ast":null,"code":"const events = ['mousedown', 'mousemove', 'keydown', 'touchstart', 'wheel'];\n/**\n * Detects if the user has been idle for a duration of `idleTimeout` ms, and calls `onIdle` and registered callbacks.\n * By default, the IdleManager will log a user out after 10 minutes of inactivity.\n * To override these defaults, you can pass an `onIdle` callback, or configure a custom `idleTimeout` in milliseconds\n */\nexport class IdleManager {\n  /**\n   * @protected\n   * @param options {@link IdleManagerOptions}\n   */\n  constructor() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _a;\n    this.callbacks = [];\n    this.idleTimeout = 10 * 60 * 1000;\n    this.timeoutID = undefined;\n    const {\n      onIdle,\n      idleTimeout = 10 * 60 * 1000\n    } = options || {};\n    this.callbacks = onIdle ? [onIdle] : [];\n    this.idleTimeout = idleTimeout;\n    const _resetTimer = this._resetTimer.bind(this);\n    window.addEventListener('load', _resetTimer, true);\n    events.forEach(function (name) {\n      document.addEventListener(name, _resetTimer, true);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    const debounce = (func, wait) => {\n      let timeout;\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const context = _this;\n        const later = function () {\n          timeout = undefined;\n          func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = window.setTimeout(later, wait);\n      };\n    };\n    if (options === null || options === void 0 ? void 0 : options.captureScroll) {\n      // debounce scroll events\n      const scroll = debounce(_resetTimer, (_a = options === null || options === void 0 ? void 0 : options.scrollDebounce) !== null && _a !== void 0 ? _a : 100);\n      window.addEventListener('scroll', scroll, true);\n    }\n    _resetTimer();\n  }\n  /**\n   * Creates an {@link IdleManager}\n   * @param {IdleManagerOptions} options Optional configuration\n   * @see {@link IdleManagerOptions}\n   * @param options.onIdle Callback once user has been idle. Use to prompt for fresh login, and use `Actor.agentOf(your_actor).invalidateIdentity()` to protect the user\n   * @param options.idleTimeout timeout in ms\n   * @param options.captureScroll capture scroll events\n   * @param options.scrollDebounce scroll debounce time in ms\n   */\n  static create() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return new this(options);\n  }\n  /**\n   * @param {IdleCB} callback function to be called when user goes idle\n   */\n  registerCallback(callback) {\n    this.callbacks.push(callback);\n  }\n  /**\n   * Cleans up the idle manager and its listeners\n   */\n  exit() {\n    clearTimeout(this.timeoutID);\n    window.removeEventListener('load', this._resetTimer, true);\n    const _resetTimer = this._resetTimer.bind(this);\n    events.forEach(function (name) {\n      document.removeEventListener(name, _resetTimer, true);\n    });\n    this.callbacks.forEach(cb => cb());\n  }\n  /**\n   * Resets the timeouts during cleanup\n   */\n  _resetTimer() {\n    const exit = this.exit.bind(this);\n    window.clearTimeout(this.timeoutID);\n    this.timeoutID = window.setTimeout(exit, this.idleTimeout);\n  }\n}","map":{"version":3,"names":["events","IdleManager","constructor","_this","options","arguments","length","undefined","callbacks","idleTimeout","timeoutID","onIdle","_resetTimer","bind","window","addEventListener","forEach","name","document","debounce","func","wait","timeout","_len","args","Array","_key","context","later","apply","clearTimeout","setTimeout","captureScroll","scroll","_a","scrollDebounce","create","registerCallback","callback","push","exit","removeEventListener","cb"],"sources":["/home/arslan/modojo/node_modules/@dfinity/auth-client/src/idleManager.ts"],"sourcesContent":["/** @module IdleManager */\ntype IdleCB = () => unknown;\nexport type IdleManagerOptions = {\n  /**\n   * Callback after the user has gone idle\n   */\n  onIdle?: IdleCB;\n  /**\n   * timeout in ms\n   * @default 30 minutes [600_000]\n   */\n  idleTimeout?: number;\n  /**\n   * capture scroll events\n   * @default false\n   */\n  captureScroll?: boolean;\n  /**\n   * scroll debounce time in ms\n   * @default 100\n   */\n  scrollDebounce?: number;\n};\n\nconst events = ['mousedown', 'mousemove', 'keydown', 'touchstart', 'wheel'];\n\n/**\n * Detects if the user has been idle for a duration of `idleTimeout` ms, and calls `onIdle` and registered callbacks.\n * By default, the IdleManager will log a user out after 10 minutes of inactivity.\n * To override these defaults, you can pass an `onIdle` callback, or configure a custom `idleTimeout` in milliseconds\n */\nexport class IdleManager {\n  callbacks: IdleCB[] = [];\n  idleTimeout: IdleManagerOptions['idleTimeout'] = 10 * 60 * 1000;\n  timeoutID?: number = undefined;\n\n  /**\n   * Creates an {@link IdleManager}\n   * @param {IdleManagerOptions} options Optional configuration\n   * @see {@link IdleManagerOptions}\n   * @param options.onIdle Callback once user has been idle. Use to prompt for fresh login, and use `Actor.agentOf(your_actor).invalidateIdentity()` to protect the user\n   * @param options.idleTimeout timeout in ms\n   * @param options.captureScroll capture scroll events\n   * @param options.scrollDebounce scroll debounce time in ms\n   */\n  public static create(\n    options: {\n      /**\n       * Callback after the user has gone idle\n       * @see {@link IdleCB}\n       */\n      onIdle?: () => unknown;\n      /**\n       * timeout in ms\n       * @default 10 minutes [600_000]\n       */\n      idleTimeout?: number;\n      /**\n       * capture scroll events\n       * @default false\n       */\n      captureScroll?: boolean;\n      /**\n       * scroll debounce time in ms\n       * @default 100\n       */\n      scrollDebounce?: number;\n    } = {},\n  ): IdleManager {\n    return new this(options);\n  }\n\n  /**\n   * @protected\n   * @param options {@link IdleManagerOptions}\n   */\n  protected constructor(options: IdleManagerOptions = {}) {\n    const { onIdle, idleTimeout = 10 * 60 * 1000 } = options || {};\n\n    this.callbacks = onIdle ? [onIdle] : [];\n    this.idleTimeout = idleTimeout;\n\n    const _resetTimer = this._resetTimer.bind(this);\n\n    window.addEventListener('load', _resetTimer, true);\n\n    events.forEach(function (name) {\n      document.addEventListener(name, _resetTimer, true);\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    const debounce = (func: Function, wait: number) => {\n      let timeout: number | undefined;\n      return (...args: unknown[]) => {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const context = this;\n        const later = function () {\n          timeout = undefined;\n          func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = window.setTimeout(later, wait);\n      };\n    };\n\n    if (options?.captureScroll) {\n      // debounce scroll events\n      const scroll = debounce(_resetTimer, options?.scrollDebounce ?? 100);\n      window.addEventListener('scroll', scroll, true);\n    }\n\n    _resetTimer();\n  }\n\n  /**\n   * @param {IdleCB} callback function to be called when user goes idle\n   */\n  public registerCallback(callback: IdleCB): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Cleans up the idle manager and its listeners\n   */\n  public exit(): void {\n    clearTimeout(this.timeoutID);\n    window.removeEventListener('load', this._resetTimer, true);\n\n    const _resetTimer = this._resetTimer.bind(this);\n    events.forEach(function (name) {\n      document.removeEventListener(name, _resetTimer, true);\n    });\n    this.callbacks.forEach(cb => cb());\n  }\n\n  /**\n   * Resets the timeouts during cleanup\n   */\n  _resetTimer(): void {\n    const exit = this.exit.bind(this);\n    window.clearTimeout(this.timeoutID);\n    this.timeoutID = window.setTimeout(exit, this.idleTimeout);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}