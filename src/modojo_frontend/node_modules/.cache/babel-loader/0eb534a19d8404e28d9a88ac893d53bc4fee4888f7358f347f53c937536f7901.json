{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n  const disposable = new DisposableStore();\n  const onDidChangeEmmiter = disposable.add(new Emitter());\n  const iconRegistry = getIconRegistry();\n  disposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n  if (themeService) {\n    disposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n  }\n  return {\n    dispose: () => disposable.dispose(),\n    onDidChange: onDidChangeEmmiter.event,\n    getCSS() {\n      const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n      const usedFontIds = {};\n      const rules = [];\n      const rootAttribs = [];\n      for (const contribution of iconRegistry.getIcons()) {\n        const definition = productIconTheme.getIcon(contribution);\n        if (!definition) {\n          continue;\n        }\n        const fontContribution = definition.font;\n        const fontFamilyVar = `--vscode-icon-${contribution.id}-font-family`;\n        const contentVar = `--vscode-icon-${contribution.id}-content`;\n        if (fontContribution) {\n          usedFontIds[fontContribution.id] = fontContribution.definition;\n          rootAttribs.push(`${fontFamilyVar}: ${asCSSPropertyValue(fontContribution.id)};`, `${contentVar}: '${definition.fontCharacter}';`);\n          rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`);\n        } else {\n          rootAttribs.push(`${contentVar}: '${definition.fontCharacter}'; ${fontFamilyVar}: 'codicon';`);\n          rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`);\n        }\n      }\n      for (const id in usedFontIds) {\n        const definition = usedFontIds[id];\n        const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n        const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n        const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n        rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n      }\n      rules.push(`:root { ${rootAttribs.join(' ')} }`);\n      return rules.join('\\n');\n    }\n  };\n}\nexport class UnthemedProductIconTheme {\n  getIcon(contribution) {\n    const iconRegistry = getIconRegistry();\n    let definition = contribution.defaults;\n    while (ThemeIcon.isThemeIcon(definition)) {\n      const c = iconRegistry.getIcon(definition.id);\n      if (!c) {\n        return undefined;\n      }\n      definition = c.defaults;\n    }\n    return definition;\n  }\n}","map":{"version":3,"names":["asCSSPropertyValue","asCSSUrl","Emitter","DisposableStore","ThemeIcon","getIconRegistry","getIconsStyleSheet","themeService","disposable","onDidChangeEmmiter","add","iconRegistry","onDidChange","fire","onDidProductIconThemeChange","dispose","event","getCSS","productIconTheme","getProductIconTheme","UnthemedProductIconTheme","usedFontIds","rules","rootAttribs","contribution","getIcons","definition","getIcon","fontContribution","font","fontFamilyVar","id","contentVar","push","fontCharacter","fontWeight","weight","fontStyle","style","src","map","l","location","format","join","defaults","isThemeIcon","c","undefined"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n    const disposable = new DisposableStore();\n    const onDidChangeEmmiter = disposable.add(new Emitter());\n    const iconRegistry = getIconRegistry();\n    disposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n    if (themeService) {\n        disposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n    }\n    return {\n        dispose: () => disposable.dispose(),\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const rules = [];\n            const rootAttribs = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    continue;\n                }\n                const fontContribution = definition.font;\n                const fontFamilyVar = `--vscode-icon-${contribution.id}-font-family`;\n                const contentVar = `--vscode-icon-${contribution.id}-content`;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    rootAttribs.push(`${fontFamilyVar}: ${asCSSPropertyValue(fontContribution.id)};`, `${contentVar}: '${definition.fontCharacter}';`);\n                    rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`);\n                }\n                else {\n                    rootAttribs.push(`${contentVar}: '${definition.fontCharacter}'; ${fontFamilyVar}: 'codicon';`);\n                    rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            rules.push(`:root { ${rootAttribs.join(' ')} }`);\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}