{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar QuickInputController_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickPick, backButton, InputBox, InQuickInputContextKey, QuickInputTypeContextKey, EndOfQuickInputBoxContextKey } from './quickInput.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { QuickInputTree } from './quickInputTree.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport './quickInputActions.js';\nconst $ = dom.$;\nlet QuickInputController = QuickInputController_1 = class QuickInputController extends Disposable {\n  get currentQuickInput() {\n    var _a;\n    return (_a = this.controller) !== null && _a !== void 0 ? _a : undefined;\n  }\n  get container() {\n    return this._container;\n  }\n  constructor(options, layoutService, instantiationService, contextKeyService) {\n    super();\n    this.options = options;\n    this.layoutService = layoutService;\n    this.instantiationService = instantiationService;\n    this.contextKeyService = contextKeyService;\n    this.enabled = true;\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.keyMods = {\n      ctrlCmd: false,\n      alt: false\n    };\n    this.controller = null;\n    this.onShowEmitter = this._register(new Emitter());\n    this.onShow = this.onShowEmitter.event;\n    this.onHideEmitter = this._register(new Emitter());\n    this.onHide = this.onHideEmitter.event;\n    this.inQuickInputContext = InQuickInputContextKey.bindTo(this.contextKeyService);\n    this.quickInputTypeContext = QuickInputTypeContextKey.bindTo(this.contextKeyService);\n    this.endOfQuickInputBoxContext = EndOfQuickInputBoxContextKey.bindTo(this.contextKeyService);\n    this.idPrefix = options.idPrefix;\n    this._container = options.container;\n    this.styles = options.styles;\n    this._register(Event.runAndSubscribe(dom.onDidRegisterWindow, _ref => {\n      let {\n        window,\n        disposables\n      } = _ref;\n      return this.registerKeyModsListeners(window, disposables);\n    }, {\n      window: mainWindow,\n      disposables: this._store\n    }));\n    this._register(dom.onWillUnregisterWindow(window => {\n      if (this.ui && dom.getWindow(this.ui.container) === window) {\n        // The window this quick input is contained in is about to\n        // close, so we have to make sure to reparent it back to an\n        // existing parent to not loose functionality.\n        // (https://github.com/microsoft/vscode/issues/195870)\n        this.reparentUI(this.layoutService.mainContainer);\n        this.layout(this.layoutService.mainContainerDimension, this.layoutService.mainContainerOffset.quickPickTop);\n      }\n    }));\n  }\n  registerKeyModsListeners(window, disposables) {\n    const listener = e => {\n      this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n      this.keyMods.alt = e.altKey;\n    };\n    for (const event of [dom.EventType.KEY_DOWN, dom.EventType.KEY_UP, dom.EventType.MOUSE_DOWN]) {\n      disposables.add(dom.addDisposableListener(window, event, listener, true));\n    }\n  }\n  getUI(showInActiveContainer) {\n    if (this.ui) {\n      // In order to support aux windows, re-parent the controller\n      // if the original event is from a different document\n      if (showInActiveContainer) {\n        if (dom.getWindow(this._container) !== dom.getWindow(this.layoutService.activeContainer)) {\n          this.reparentUI(this.layoutService.activeContainer);\n          this.layout(this.layoutService.activeContainerDimension, this.layoutService.activeContainerOffset.quickPickTop);\n        }\n      }\n      return this.ui;\n    }\n    const container = dom.append(this._container, $('.quick-input-widget.show-file-icons'));\n    container.tabIndex = -1;\n    container.style.display = 'none';\n    const styleSheet = dom.createStyleSheet(container);\n    const titleBar = dom.append(container, $('.quick-input-titlebar'));\n    const leftActionBar = this._register(new ActionBar(titleBar, {\n      hoverDelegate: this.options.hoverDelegate\n    }));\n    leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n    const title = dom.append(titleBar, $('.quick-input-title'));\n    const rightActionBar = this._register(new ActionBar(titleBar, {\n      hoverDelegate: this.options.hoverDelegate\n    }));\n    rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n    const headerContainer = dom.append(container, $('.quick-input-header'));\n    const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n    checkAll.type = 'checkbox';\n    checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n    this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n      const checked = checkAll.checked;\n      list.setAllVisibleChecked(checked);\n    }));\n    this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space'...\n        inputBox.setFocus();\n      }\n    }));\n    const description2 = dom.append(headerContainer, $('.quick-input-description'));\n    const inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n    const filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n    const inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n    inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n    const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n    visibleCountContainer.setAttribute('aria-live', 'polite');\n    visibleCountContainer.setAttribute('aria-atomic', 'true');\n    const visibleCount = new CountBadge(visibleCountContainer, {\n      countFormat: localize({\n        key: 'quickInput.visibleCount',\n        comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n      }, \"{0} Results\")\n    }, this.styles.countBadge);\n    const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n    countContainer.setAttribute('aria-live', 'polite');\n    const count = new CountBadge(countContainer, {\n      countFormat: localize({\n        key: 'quickInput.countSelected',\n        comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.']\n      }, \"{0} Selected\")\n    }, this.styles.countBadge);\n    const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const ok = this._register(new Button(okContainer, this.styles.button));\n    ok.label = localize('ok', \"OK\");\n    this._register(ok.onDidClick(e => {\n      this.onDidAcceptEmitter.fire();\n    }));\n    const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const customButton = this._register(new Button(customButtonContainer, {\n      ...this.styles.button,\n      supportIcons: true\n    }));\n    customButton.label = localize('custom', \"Custom\");\n    this._register(customButton.onDidClick(e => {\n      this.onDidCustomEmitter.fire();\n    }));\n    const message = dom.append(inputContainer, $(`#${this.idPrefix}message.quick-input-message`));\n    const progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n    progressBar.getContainer().classList.add('quick-input-progress');\n    const widget = dom.append(container, $('.quick-input-html-widget'));\n    widget.tabIndex = -1;\n    const description1 = dom.append(container, $('.quick-input-description'));\n    const listId = this.idPrefix + 'list';\n    const list = this._register(this.instantiationService.createInstance(QuickInputTree, container, this.options.hoverDelegate, this.options.linkOpenerDelegate, listId));\n    inputBox.setAttribute('aria-controls', listId);\n    this._register(list.onDidChangeFocus(() => {\n      var _a;\n      inputBox.setAttribute('aria-activedescendant', (_a = list.getActiveDescendant()) !== null && _a !== void 0 ? _a : '');\n    }));\n    this._register(list.onChangedAllVisibleChecked(checked => {\n      checkAll.checked = checked;\n    }));\n    this._register(list.onChangedVisibleCount(c => {\n      visibleCount.setCount(c);\n    }));\n    this._register(list.onChangedCheckedCount(c => {\n      count.setCount(c);\n    }));\n    this._register(list.onLeave(() => {\n      // Defer to avoid the input field reacting to the triggering key.\n      // TODO@TylerLeonhardt https://github.com/microsoft/vscode/issues/203675\n      setTimeout(() => {\n        if (!this.controller) {\n          return;\n        }\n        inputBox.setFocus();\n        if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n          list.clearFocus();\n        }\n      }, 0);\n    }));\n    const focusTracker = dom.trackFocus(container);\n    this._register(focusTracker);\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      const ui = this.getUI();\n      if (dom.isAncestor(e.relatedTarget, ui.inputContainer)) {\n        const value = ui.inputBox.isSelectionAtEnd();\n        if (this.endOfQuickInputBoxContext.get() !== value) {\n          this.endOfQuickInputBoxContext.set(value);\n        }\n      }\n      // Ignore focus events within container\n      if (dom.isAncestor(e.relatedTarget, ui.container)) {\n        return;\n      }\n      this.inQuickInputContext.set(true);\n      this.previousFocusElement = dom.isHTMLElement(e.relatedTarget) ? e.relatedTarget : undefined;\n    }, true));\n    this._register(focusTracker.onDidBlur(() => {\n      if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n        this.hide(QuickInputHideReason.Blur);\n      }\n      this.inQuickInputContext.set(false);\n      this.endOfQuickInputBoxContext.set(false);\n      this.previousFocusElement = undefined;\n    }));\n    this._register(inputBox.onKeyDown(_ => {\n      const value = this.getUI().inputBox.isSelectionAtEnd();\n      if (this.endOfQuickInputBoxContext.get() !== value) {\n        this.endOfQuickInputBoxContext.set(value);\n      }\n    }));\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      inputBox.setFocus();\n    }));\n    // TODO: Turn into commands instead of handling KEY_DOWN\n    // Keybindings for the quickinput widget as a whole\n    this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, event => {\n      if (dom.isAncestor(event.target, widget)) {\n        return; // Ignore event if target is inside widget to allow the widget to handle the event.\n      }\n      switch (event.keyCode) {\n        case 3 /* KeyCode.Enter */:\n          dom.EventHelper.stop(event, true);\n          if (this.enabled) {\n            this.onDidAcceptEmitter.fire();\n          }\n          break;\n        case 9 /* KeyCode.Escape */:\n          dom.EventHelper.stop(event, true);\n          this.hide(QuickInputHideReason.Gesture);\n          break;\n        case 2 /* KeyCode.Tab */:\n          if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n            // detect only visible actions\n            const selectors = ['.quick-input-list .monaco-action-bar .always-visible', '.quick-input-list-entry:hover .monaco-action-bar', '.monaco-list-row.focused .monaco-action-bar'];\n            if (container.classList.contains('show-checkboxes')) {\n              selectors.push('input');\n            } else {\n              selectors.push('input[type=text]');\n            }\n            if (this.getUI().list.isDisplayed()) {\n              selectors.push('.monaco-list');\n            }\n            // focus links if there are any\n            if (this.getUI().message) {\n              selectors.push('.quick-input-message a');\n            }\n            if (this.getUI().widget) {\n              if (dom.isAncestor(event.target, this.getUI().widget)) {\n                // let the widget control tab\n                break;\n              }\n              selectors.push('.quick-input-html-widget');\n            }\n            const stops = container.querySelectorAll(selectors.join(', '));\n            if (event.shiftKey && event.target === stops[0]) {\n              // Clear the focus from the list in order to allow\n              // screen readers to read operations in the input box.\n              dom.EventHelper.stop(event, true);\n              list.clearFocus();\n            } else if (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n              dom.EventHelper.stop(event, true);\n              stops[0].focus();\n            }\n          }\n          break;\n        case 10 /* KeyCode.Space */:\n          if (event.ctrlKey) {\n            dom.EventHelper.stop(event, true);\n            this.getUI().list.toggleHover();\n          }\n          break;\n      }\n    }));\n    this.ui = {\n      container,\n      styleSheet,\n      leftActionBar,\n      titleBar,\n      title,\n      description1,\n      description2,\n      widget,\n      rightActionBar,\n      checkAll,\n      inputContainer,\n      filterContainer,\n      inputBox,\n      visibleCountContainer,\n      visibleCount,\n      countContainer,\n      count,\n      okContainer,\n      ok,\n      message,\n      customButtonContainer,\n      customButton,\n      list,\n      progressBar,\n      onDidAccept: this.onDidAcceptEmitter.event,\n      onDidCustom: this.onDidCustomEmitter.event,\n      onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n      ignoreFocusOut: false,\n      keyMods: this.keyMods,\n      show: controller => this.show(controller),\n      hide: () => this.hide(),\n      setVisibilities: visibilities => this.setVisibilities(visibilities),\n      setEnabled: enabled => this.setEnabled(enabled),\n      setContextKey: contextKey => this.options.setContextKey(contextKey),\n      linkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n    };\n    this.updateStyles();\n    return this.ui;\n  }\n  reparentUI(container) {\n    if (this.ui) {\n      this._container = container;\n      dom.append(this._container, this.ui.container);\n    }\n  }\n  pick(picks) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : CancellationToken.None;\n    return new Promise((doResolve, reject) => {\n      let resolve = result => {\n        var _a;\n        resolve = doResolve;\n        (_a = options.onKeyMods) === null || _a === void 0 ? void 0 : _a.call(options, input.keyMods);\n        doResolve(result);\n      };\n      if (token.isCancellationRequested) {\n        resolve(undefined);\n        return;\n      }\n      const input = this.createQuickPick();\n      let activeItem;\n      const disposables = [input, input.onDidAccept(() => {\n        if (input.canSelectMany) {\n          resolve(input.selectedItems.slice());\n          input.hide();\n        } else {\n          const result = input.activeItems[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidChangeActive(items => {\n        const focused = items[0];\n        if (focused && options.onDidFocus) {\n          options.onDidFocus(focused);\n        }\n      }), input.onDidChangeSelection(items => {\n        if (!input.canSelectMany) {\n          const result = items[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton({\n        ...event,\n        removeItem: () => {\n          const index = input.items.indexOf(event.item);\n          if (index !== -1) {\n            const items = input.items.slice();\n            const removed = items.splice(index, 1);\n            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n            const keepScrollPositionBefore = input.keepScrollPosition;\n            input.keepScrollPosition = true;\n            input.items = items;\n            if (activeItems) {\n              input.activeItems = activeItems;\n            }\n            input.keepScrollPosition = keepScrollPositionBefore;\n          }\n        }\n      })), input.onDidTriggerSeparatorButton(event => {\n        var _a;\n        return (_a = options.onDidTriggerSeparatorButton) === null || _a === void 0 ? void 0 : _a.call(options, event);\n      }), input.onDidChangeValue(value => {\n        if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n          input.activeItems = [activeItem];\n        }\n      }), token.onCancellationRequested(() => {\n        input.hide();\n      }), input.onDidHide(() => {\n        dispose(disposables);\n        resolve(undefined);\n      })];\n      input.title = options.title;\n      input.canSelectMany = !!options.canPickMany;\n      input.placeholder = options.placeHolder;\n      input.ignoreFocusOut = !!options.ignoreFocusLost;\n      input.matchOnDescription = !!options.matchOnDescription;\n      input.matchOnDetail = !!options.matchOnDetail;\n      input.matchOnLabel = options.matchOnLabel === undefined || options.matchOnLabel; // default to true\n      input.quickNavigate = options.quickNavigate;\n      input.hideInput = !!options.hideInput;\n      input.contextKey = options.contextKey;\n      input.busy = true;\n      Promise.all([picks, options.activeItem]).then(_ref2 => {\n        let [items, _activeItem] = _ref2;\n        activeItem = _activeItem;\n        input.busy = false;\n        input.items = items;\n        if (input.canSelectMany) {\n          input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n        }\n        if (activeItem) {\n          input.activeItems = [activeItem];\n        }\n      });\n      input.show();\n      Promise.resolve(picks).then(undefined, err => {\n        reject(err);\n        input.hide();\n      });\n    });\n  }\n  createQuickPick() {\n    const ui = this.getUI(true);\n    return new QuickPick(ui);\n  }\n  createInputBox() {\n    const ui = this.getUI(true);\n    return new InputBox(ui);\n  }\n  show(controller) {\n    const ui = this.getUI(true);\n    this.onShowEmitter.fire();\n    const oldController = this.controller;\n    this.controller = controller;\n    oldController === null || oldController === void 0 ? void 0 : oldController.didHide();\n    this.setEnabled(true);\n    ui.leftActionBar.clear();\n    ui.title.textContent = '';\n    ui.description1.textContent = '';\n    ui.description2.textContent = '';\n    dom.reset(ui.widget);\n    ui.rightActionBar.clear();\n    ui.checkAll.checked = false;\n    // ui.inputBox.value = ''; Avoid triggering an event.\n    ui.inputBox.placeholder = '';\n    ui.inputBox.password = false;\n    ui.inputBox.showDecoration(Severity.Ignore);\n    ui.visibleCount.setCount(0);\n    ui.count.setCount(0);\n    dom.reset(ui.message);\n    ui.progressBar.stop();\n    ui.list.setElements([]);\n    ui.list.matchOnDescription = false;\n    ui.list.matchOnDetail = false;\n    ui.list.matchOnLabel = true;\n    ui.list.sortByLabel = true;\n    ui.ignoreFocusOut = false;\n    ui.inputBox.toggles = undefined;\n    const backKeybindingLabel = this.options.backKeybindingLabel();\n    backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n    ui.container.style.display = '';\n    this.updateLayout();\n    ui.inputBox.setFocus();\n    this.quickInputTypeContext.set(controller.type);\n  }\n  isVisible() {\n    return !!this.ui && this.ui.container.style.display !== 'none';\n  }\n  setVisibilities(visibilities) {\n    const ui = this.getUI();\n    ui.title.style.display = visibilities.title ? '' : 'none';\n    ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n    ui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n    ui.countContainer.style.display = visibilities.count ? '' : 'none';\n    ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n    ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n    ui.message.style.display = visibilities.message ? '' : 'none';\n    ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n    ui.list.display(!!visibilities.list);\n    ui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n    ui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n    this.updateLayout(); // TODO\n  }\n  setEnabled(enabled) {\n    if (enabled !== this.enabled) {\n      this.enabled = enabled;\n      for (const item of this.getUI().leftActionBar.viewItems) {\n        item.action.enabled = enabled;\n      }\n      for (const item of this.getUI().rightActionBar.viewItems) {\n        item.action.enabled = enabled;\n      }\n      this.getUI().checkAll.disabled = !enabled;\n      this.getUI().inputBox.enabled = enabled;\n      this.getUI().ok.enabled = enabled;\n      this.getUI().list.enabled = enabled;\n    }\n  }\n  hide(reason) {\n    var _a, _b;\n    const controller = this.controller;\n    if (!controller) {\n      return;\n    }\n    controller.willHide(reason);\n    const container = (_a = this.ui) === null || _a === void 0 ? void 0 : _a.container;\n    const focusChanged = container && !dom.isAncestorOfActiveElement(container);\n    this.controller = null;\n    this.onHideEmitter.fire();\n    if (container) {\n      container.style.display = 'none';\n    }\n    if (!focusChanged) {\n      let currentElement = this.previousFocusElement;\n      while (currentElement && !currentElement.offsetParent) {\n        currentElement = (_b = currentElement.parentElement) !== null && _b !== void 0 ? _b : undefined;\n      }\n      if (currentElement === null || currentElement === void 0 ? void 0 : currentElement.offsetParent) {\n        currentElement.focus();\n        this.previousFocusElement = undefined;\n      } else {\n        this.options.returnFocus();\n      }\n    }\n    controller.didHide(reason);\n  }\n  layout(dimension, titleBarOffset) {\n    this.dimension = dimension;\n    this.titleBarOffset = titleBarOffset;\n    this.updateLayout();\n  }\n  updateLayout() {\n    if (this.ui && this.isVisible()) {\n      this.ui.container.style.top = `${this.titleBarOffset}px`;\n      const style = this.ui.container.style;\n      const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController_1.MAX_WIDTH);\n      style.width = width + 'px';\n      style.marginLeft = '-' + width / 2 + 'px';\n      this.ui.inputBox.layout();\n      this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n    }\n  }\n  applyStyles(styles) {\n    this.styles = styles;\n    this.updateStyles();\n  }\n  updateStyles() {\n    if (this.ui) {\n      const {\n        quickInputTitleBackground,\n        quickInputBackground,\n        quickInputForeground,\n        widgetBorder,\n        widgetShadow\n      } = this.styles.widget;\n      this.ui.titleBar.style.backgroundColor = quickInputTitleBackground !== null && quickInputTitleBackground !== void 0 ? quickInputTitleBackground : '';\n      this.ui.container.style.backgroundColor = quickInputBackground !== null && quickInputBackground !== void 0 ? quickInputBackground : '';\n      this.ui.container.style.color = quickInputForeground !== null && quickInputForeground !== void 0 ? quickInputForeground : '';\n      this.ui.container.style.border = widgetBorder ? `1px solid ${widgetBorder}` : '';\n      this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n      this.ui.list.style(this.styles.list);\n      const content = [];\n      if (this.styles.pickerGroup.pickerGroupBorder) {\n        content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.pickerGroup.pickerGroupBorder}; }`);\n      }\n      if (this.styles.pickerGroup.pickerGroupForeground) {\n        content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.pickerGroup.pickerGroupForeground}; }`);\n      }\n      if (this.styles.pickerGroup.pickerGroupForeground) {\n        content.push(`.quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }`);\n      }\n      if (this.styles.keybindingLabel.keybindingLabelBackground || this.styles.keybindingLabel.keybindingLabelBorder || this.styles.keybindingLabel.keybindingLabelBottomBorder || this.styles.keybindingLabel.keybindingLabelShadow || this.styles.keybindingLabel.keybindingLabelForeground) {\n        content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n        if (this.styles.keybindingLabel.keybindingLabelBackground) {\n          content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBorder) {\n          // Order matters here. `border-color` must come before `border-bottom-color`.\n          content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n          content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelShadow) {\n          content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelForeground) {\n          content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n        }\n        content.push('}');\n      }\n      const newStyles = content.join('\\n');\n      if (newStyles !== this.ui.styleSheet.textContent) {\n        this.ui.styleSheet.textContent = newStyles;\n      }\n    }\n  }\n};\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget\nQuickInputController = QuickInputController_1 = __decorate([__param(1, ILayoutService), __param(2, IInstantiationService), __param(3, IContextKeyService)], QuickInputController);\nexport { QuickInputController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","QuickInputController_1","dom","ActionBar","Button","CountBadge","ProgressBar","CancellationToken","Emitter","Event","Disposable","dispose","Severity","localize","QuickInputHideReason","QuickInputBox","QuickPick","backButton","InputBox","InQuickInputContextKey","QuickInputTypeContextKey","EndOfQuickInputBoxContextKey","ILayoutService","mainWindow","IInstantiationService","QuickInputTree","IContextKeyService","$","QuickInputController","currentQuickInput","_a","controller","undefined","container","_container","constructor","options","layoutService","instantiationService","contextKeyService","enabled","onDidAcceptEmitter","_register","onDidCustomEmitter","onDidTriggerButtonEmitter","keyMods","ctrlCmd","alt","onShowEmitter","onShow","event","onHideEmitter","onHide","inQuickInputContext","bindTo","quickInputTypeContext","endOfQuickInputBoxContext","idPrefix","styles","runAndSubscribe","onDidRegisterWindow","_ref","window","disposables","registerKeyModsListeners","_store","onWillUnregisterWindow","ui","getWindow","reparentUI","mainContainer","layout","mainContainerDimension","mainContainerOffset","quickPickTop","listener","e","ctrlKey","metaKey","altKey","EventType","KEY_DOWN","KEY_UP","MOUSE_DOWN","add","addDisposableListener","getUI","showInActiveContainer","activeContainer","activeContainerDimension","activeContainerOffset","append","tabIndex","style","display","styleSheet","createStyleSheet","titleBar","leftActionBar","hoverDelegate","domNode","classList","title","rightActionBar","headerContainer","checkAll","type","setAttribute","addStandardDisposableListener","CHANGE","checked","list","setAllVisibleChecked","CLICK","x","y","inputBox","setFocus","description2","inputContainer","filterContainer","toggle","visibleCountContainer","visibleCount","countFormat","comment","countBadge","countContainer","count","okContainer","ok","button","label","onDidClick","fire","customButtonContainer","customButton","supportIcons","message","progressBar","getContainer","widget","description1","listId","createInstance","linkOpenerDelegate","onDidChangeFocus","getActiveDescendant","onChangedAllVisibleChecked","onChangedVisibleCount","setCount","onChangedCheckedCount","onLeave","setTimeout","canSelectMany","clearFocus","focusTracker","trackFocus","FOCUS","isAncestor","relatedTarget","value","isSelectionAtEnd","get","set","previousFocusElement","isHTMLElement","onDidBlur","ignoreFocusOut","hide","Blur","onKeyDown","_","keyCode","EventHelper","stop","Gesture","selectors","contains","push","isDisplayed","stops","querySelectorAll","join","shiftKey","focus","toggleHover","onDidAccept","onDidCustom","onDidTriggerButton","show","setVisibilities","visibilities","setEnabled","setContextKey","contextKey","content","updateStyles","pick","picks","token","None","Promise","doResolve","reject","resolve","result","onKeyMods","call","input","isCancellationRequested","createQuickPick","activeItem","selectedItems","slice","activeItems","onDidChangeActive","items","focused","onDidFocus","onDidChangeSelection","onDidTriggerItemButton","removeItem","index","indexOf","item","removed","splice","filter","keepScrollPositionBefore","keepScrollPosition","onDidTriggerSeparatorButton","onDidChangeValue","onCancellationRequested","onDidHide","canPickMany","placeholder","placeHolder","ignoreFocusLost","matchOnDescription","matchOnDetail","matchOnLabel","quickNavigate","hideInput","busy","all","then","_ref2","_activeItem","picked","err","createInputBox","oldController","didHide","clear","textContent","reset","password","showDecoration","Ignore","setElements","sortByLabel","toggles","backKeybindingLabel","tooltip","updateLayout","isVisible","description","checkBox","viewItems","action","disabled","reason","_b","willHide","focusChanged","isAncestorOfActiveElement","currentElement","offsetParent","parentElement","returnFocus","dimension","titleBarOffset","top","width","Math","min","MAX_WIDTH","marginLeft","height","applyStyles","quickInputTitleBackground","quickInputBackground","quickInputForeground","widgetBorder","widgetShadow","backgroundColor","color","border","boxShadow","pickerGroup","pickerGroupBorder","pickerGroupForeground","keybindingLabel","keybindingLabelBackground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","keybindingLabelForeground","newStyles"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar QuickInputController_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickPick, backButton, InputBox, InQuickInputContextKey, QuickInputTypeContextKey, EndOfQuickInputBoxContextKey } from './quickInput.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { QuickInputTree } from './quickInputTree.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport './quickInputActions.js';\nconst $ = dom.$;\nlet QuickInputController = QuickInputController_1 = class QuickInputController extends Disposable {\n    get currentQuickInput() { var _a; return (_a = this.controller) !== null && _a !== void 0 ? _a : undefined; }\n    get container() { return this._container; }\n    constructor(options, layoutService, instantiationService, contextKeyService) {\n        super();\n        this.options = options;\n        this.layoutService = layoutService;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.enabled = true;\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.keyMods = { ctrlCmd: false, alt: false };\n        this.controller = null;\n        this.onShowEmitter = this._register(new Emitter());\n        this.onShow = this.onShowEmitter.event;\n        this.onHideEmitter = this._register(new Emitter());\n        this.onHide = this.onHideEmitter.event;\n        this.inQuickInputContext = InQuickInputContextKey.bindTo(this.contextKeyService);\n        this.quickInputTypeContext = QuickInputTypeContextKey.bindTo(this.contextKeyService);\n        this.endOfQuickInputBoxContext = EndOfQuickInputBoxContextKey.bindTo(this.contextKeyService);\n        this.idPrefix = options.idPrefix;\n        this._container = options.container;\n        this.styles = options.styles;\n        this._register(Event.runAndSubscribe(dom.onDidRegisterWindow, ({ window, disposables }) => this.registerKeyModsListeners(window, disposables), { window: mainWindow, disposables: this._store }));\n        this._register(dom.onWillUnregisterWindow(window => {\n            if (this.ui && dom.getWindow(this.ui.container) === window) {\n                // The window this quick input is contained in is about to\n                // close, so we have to make sure to reparent it back to an\n                // existing parent to not loose functionality.\n                // (https://github.com/microsoft/vscode/issues/195870)\n                this.reparentUI(this.layoutService.mainContainer);\n                this.layout(this.layoutService.mainContainerDimension, this.layoutService.mainContainerOffset.quickPickTop);\n            }\n        }));\n    }\n    registerKeyModsListeners(window, disposables) {\n        const listener = (e) => {\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n            this.keyMods.alt = e.altKey;\n        };\n        for (const event of [dom.EventType.KEY_DOWN, dom.EventType.KEY_UP, dom.EventType.MOUSE_DOWN]) {\n            disposables.add(dom.addDisposableListener(window, event, listener, true));\n        }\n    }\n    getUI(showInActiveContainer) {\n        if (this.ui) {\n            // In order to support aux windows, re-parent the controller\n            // if the original event is from a different document\n            if (showInActiveContainer) {\n                if (dom.getWindow(this._container) !== dom.getWindow(this.layoutService.activeContainer)) {\n                    this.reparentUI(this.layoutService.activeContainer);\n                    this.layout(this.layoutService.activeContainerDimension, this.layoutService.activeContainerOffset.quickPickTop);\n                }\n            }\n            return this.ui;\n        }\n        const container = dom.append(this._container, $('.quick-input-widget.show-file-icons'));\n        container.tabIndex = -1;\n        container.style.display = 'none';\n        const styleSheet = dom.createStyleSheet(container);\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\n        const leftActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n        const title = dom.append(titleBar, $('.quick-input-title'));\n        const rightActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n        const headerContainer = dom.append(container, $('.quick-input-header'));\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n        checkAll.type = 'checkbox';\n        checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n            const checked = checkAll.checked;\n            list.setAllVisibleChecked(checked);\n        }));\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\n                inputBox.setFocus();\n            }\n        }));\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\n        const inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n        const filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n        const inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n        visibleCountContainer.setAttribute('aria-live', 'polite');\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") }, this.styles.countBadge);\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n        countContainer.setAttribute('aria-live', 'polite');\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") }, this.styles.countBadge);\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const ok = this._register(new Button(okContainer, this.styles.button));\n        ok.label = localize('ok', \"OK\");\n        this._register(ok.onDidClick(e => {\n            this.onDidAcceptEmitter.fire();\n        }));\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const customButton = this._register(new Button(customButtonContainer, { ...this.styles.button, supportIcons: true }));\n        customButton.label = localize('custom', \"Custom\");\n        this._register(customButton.onDidClick(e => {\n            this.onDidCustomEmitter.fire();\n        }));\n        const message = dom.append(inputContainer, $(`#${this.idPrefix}message.quick-input-message`));\n        const progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n        progressBar.getContainer().classList.add('quick-input-progress');\n        const widget = dom.append(container, $('.quick-input-html-widget'));\n        widget.tabIndex = -1;\n        const description1 = dom.append(container, $('.quick-input-description'));\n        const listId = this.idPrefix + 'list';\n        const list = this._register(this.instantiationService.createInstance(QuickInputTree, container, this.options.hoverDelegate, this.options.linkOpenerDelegate, listId));\n        inputBox.setAttribute('aria-controls', listId);\n        this._register(list.onDidChangeFocus(() => {\n            var _a;\n            inputBox.setAttribute('aria-activedescendant', (_a = list.getActiveDescendant()) !== null && _a !== void 0 ? _a : '');\n        }));\n        this._register(list.onChangedAllVisibleChecked(checked => {\n            checkAll.checked = checked;\n        }));\n        this._register(list.onChangedVisibleCount(c => {\n            visibleCount.setCount(c);\n        }));\n        this._register(list.onChangedCheckedCount(c => {\n            count.setCount(c);\n        }));\n        this._register(list.onLeave(() => {\n            // Defer to avoid the input field reacting to the triggering key.\n            // TODO@TylerLeonhardt https://github.com/microsoft/vscode/issues/203675\n            setTimeout(() => {\n                if (!this.controller) {\n                    return;\n                }\n                inputBox.setFocus();\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n                    list.clearFocus();\n                }\n            }, 0);\n        }));\n        const focusTracker = dom.trackFocus(container);\n        this._register(focusTracker);\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n            const ui = this.getUI();\n            if (dom.isAncestor(e.relatedTarget, ui.inputContainer)) {\n                const value = ui.inputBox.isSelectionAtEnd();\n                if (this.endOfQuickInputBoxContext.get() !== value) {\n                    this.endOfQuickInputBoxContext.set(value);\n                }\n            }\n            // Ignore focus events within container\n            if (dom.isAncestor(e.relatedTarget, ui.container)) {\n                return;\n            }\n            this.inQuickInputContext.set(true);\n            this.previousFocusElement = dom.isHTMLElement(e.relatedTarget) ? e.relatedTarget : undefined;\n        }, true));\n        this._register(focusTracker.onDidBlur(() => {\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n                this.hide(QuickInputHideReason.Blur);\n            }\n            this.inQuickInputContext.set(false);\n            this.endOfQuickInputBoxContext.set(false);\n            this.previousFocusElement = undefined;\n        }));\n        this._register(inputBox.onKeyDown(_ => {\n            const value = this.getUI().inputBox.isSelectionAtEnd();\n            if (this.endOfQuickInputBoxContext.get() !== value) {\n                this.endOfQuickInputBoxContext.set(value);\n            }\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\n            inputBox.setFocus();\n        }));\n        // TODO: Turn into commands instead of handling KEY_DOWN\n        // Keybindings for the quickinput widget as a whole\n        this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, (event) => {\n            if (dom.isAncestor(event.target, widget)) {\n                return; // Ignore event if target is inside widget to allow the widget to handle the event.\n            }\n            switch (event.keyCode) {\n                case 3 /* KeyCode.Enter */:\n                    dom.EventHelper.stop(event, true);\n                    if (this.enabled) {\n                        this.onDidAcceptEmitter.fire();\n                    }\n                    break;\n                case 9 /* KeyCode.Escape */:\n                    dom.EventHelper.stop(event, true);\n                    this.hide(QuickInputHideReason.Gesture);\n                    break;\n                case 2 /* KeyCode.Tab */:\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n                        // detect only visible actions\n                        const selectors = [\n                            '.quick-input-list .monaco-action-bar .always-visible',\n                            '.quick-input-list-entry:hover .monaco-action-bar',\n                            '.monaco-list-row.focused .monaco-action-bar'\n                        ];\n                        if (container.classList.contains('show-checkboxes')) {\n                            selectors.push('input');\n                        }\n                        else {\n                            selectors.push('input[type=text]');\n                        }\n                        if (this.getUI().list.isDisplayed()) {\n                            selectors.push('.monaco-list');\n                        }\n                        // focus links if there are any\n                        if (this.getUI().message) {\n                            selectors.push('.quick-input-message a');\n                        }\n                        if (this.getUI().widget) {\n                            if (dom.isAncestor(event.target, this.getUI().widget)) {\n                                // let the widget control tab\n                                break;\n                            }\n                            selectors.push('.quick-input-html-widget');\n                        }\n                        const stops = container.querySelectorAll(selectors.join(', '));\n                        if (event.shiftKey && event.target === stops[0]) {\n                            // Clear the focus from the list in order to allow\n                            // screen readers to read operations in the input box.\n                            dom.EventHelper.stop(event, true);\n                            list.clearFocus();\n                        }\n                        else if (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n                            dom.EventHelper.stop(event, true);\n                            stops[0].focus();\n                        }\n                    }\n                    break;\n                case 10 /* KeyCode.Space */:\n                    if (event.ctrlKey) {\n                        dom.EventHelper.stop(event, true);\n                        this.getUI().list.toggleHover();\n                    }\n                    break;\n            }\n        }));\n        this.ui = {\n            container,\n            styleSheet,\n            leftActionBar,\n            titleBar,\n            title,\n            description1,\n            description2,\n            widget,\n            rightActionBar,\n            checkAll,\n            inputContainer,\n            filterContainer,\n            inputBox,\n            visibleCountContainer,\n            visibleCount,\n            countContainer,\n            count,\n            okContainer,\n            ok,\n            message,\n            customButtonContainer,\n            customButton,\n            list,\n            progressBar,\n            onDidAccept: this.onDidAcceptEmitter.event,\n            onDidCustom: this.onDidCustomEmitter.event,\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n            ignoreFocusOut: false,\n            keyMods: this.keyMods,\n            show: controller => this.show(controller),\n            hide: () => this.hide(),\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\n            setEnabled: enabled => this.setEnabled(enabled),\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\n            linkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n        };\n        this.updateStyles();\n        return this.ui;\n    }\n    reparentUI(container) {\n        if (this.ui) {\n            this._container = container;\n            dom.append(this._container, this.ui.container);\n        }\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return new Promise((doResolve, reject) => {\n            let resolve = (result) => {\n                var _a;\n                resolve = doResolve;\n                (_a = options.onKeyMods) === null || _a === void 0 ? void 0 : _a.call(options, input.keyMods);\n                doResolve(result);\n            };\n            if (token.isCancellationRequested) {\n                resolve(undefined);\n                return;\n            }\n            const input = this.createQuickPick();\n            let activeItem;\n            const disposables = [\n                input,\n                input.onDidAccept(() => {\n                    if (input.canSelectMany) {\n                        resolve(input.selectedItems.slice());\n                        input.hide();\n                    }\n                    else {\n                        const result = input.activeItems[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidChangeActive(items => {\n                    const focused = items[0];\n                    if (focused && options.onDidFocus) {\n                        options.onDidFocus(focused);\n                    }\n                }),\n                input.onDidChangeSelection(items => {\n                    if (!input.canSelectMany) {\n                        const result = items[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton({\n                    ...event,\n                    removeItem: () => {\n                        const index = input.items.indexOf(event.item);\n                        if (index !== -1) {\n                            const items = input.items.slice();\n                            const removed = items.splice(index, 1);\n                            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n                            const keepScrollPositionBefore = input.keepScrollPosition;\n                            input.keepScrollPosition = true;\n                            input.items = items;\n                            if (activeItems) {\n                                input.activeItems = activeItems;\n                            }\n                            input.keepScrollPosition = keepScrollPositionBefore;\n                        }\n                    }\n                })),\n                input.onDidTriggerSeparatorButton(event => { var _a; return (_a = options.onDidTriggerSeparatorButton) === null || _a === void 0 ? void 0 : _a.call(options, event); }),\n                input.onDidChangeValue(value => {\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n                        input.activeItems = [activeItem];\n                    }\n                }),\n                token.onCancellationRequested(() => {\n                    input.hide();\n                }),\n                input.onDidHide(() => {\n                    dispose(disposables);\n                    resolve(undefined);\n                }),\n            ];\n            input.title = options.title;\n            input.canSelectMany = !!options.canPickMany;\n            input.placeholder = options.placeHolder;\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\n            input.matchOnDescription = !!options.matchOnDescription;\n            input.matchOnDetail = !!options.matchOnDetail;\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\n            input.quickNavigate = options.quickNavigate;\n            input.hideInput = !!options.hideInput;\n            input.contextKey = options.contextKey;\n            input.busy = true;\n            Promise.all([picks, options.activeItem])\n                .then(([items, _activeItem]) => {\n                activeItem = _activeItem;\n                input.busy = false;\n                input.items = items;\n                if (input.canSelectMany) {\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n                }\n                if (activeItem) {\n                    input.activeItems = [activeItem];\n                }\n            });\n            input.show();\n            Promise.resolve(picks).then(undefined, err => {\n                reject(err);\n                input.hide();\n            });\n        });\n    }\n    createQuickPick() {\n        const ui = this.getUI(true);\n        return new QuickPick(ui);\n    }\n    createInputBox() {\n        const ui = this.getUI(true);\n        return new InputBox(ui);\n    }\n    show(controller) {\n        const ui = this.getUI(true);\n        this.onShowEmitter.fire();\n        const oldController = this.controller;\n        this.controller = controller;\n        oldController === null || oldController === void 0 ? void 0 : oldController.didHide();\n        this.setEnabled(true);\n        ui.leftActionBar.clear();\n        ui.title.textContent = '';\n        ui.description1.textContent = '';\n        ui.description2.textContent = '';\n        dom.reset(ui.widget);\n        ui.rightActionBar.clear();\n        ui.checkAll.checked = false;\n        // ui.inputBox.value = ''; Avoid triggering an event.\n        ui.inputBox.placeholder = '';\n        ui.inputBox.password = false;\n        ui.inputBox.showDecoration(Severity.Ignore);\n        ui.visibleCount.setCount(0);\n        ui.count.setCount(0);\n        dom.reset(ui.message);\n        ui.progressBar.stop();\n        ui.list.setElements([]);\n        ui.list.matchOnDescription = false;\n        ui.list.matchOnDetail = false;\n        ui.list.matchOnLabel = true;\n        ui.list.sortByLabel = true;\n        ui.ignoreFocusOut = false;\n        ui.inputBox.toggles = undefined;\n        const backKeybindingLabel = this.options.backKeybindingLabel();\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n        ui.container.style.display = '';\n        this.updateLayout();\n        ui.inputBox.setFocus();\n        this.quickInputTypeContext.set(controller.type);\n    }\n    isVisible() {\n        return !!this.ui && this.ui.container.style.display !== 'none';\n    }\n    setVisibilities(visibilities) {\n        const ui = this.getUI();\n        ui.title.style.display = visibilities.title ? '' : 'none';\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n        ui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n        ui.message.style.display = visibilities.message ? '' : 'none';\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n        ui.list.display(!!visibilities.list);\n        ui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n        ui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n        this.updateLayout(); // TODO\n    }\n    setEnabled(enabled) {\n        if (enabled !== this.enabled) {\n            this.enabled = enabled;\n            for (const item of this.getUI().leftActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            for (const item of this.getUI().rightActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            this.getUI().checkAll.disabled = !enabled;\n            this.getUI().inputBox.enabled = enabled;\n            this.getUI().ok.enabled = enabled;\n            this.getUI().list.enabled = enabled;\n        }\n    }\n    hide(reason) {\n        var _a, _b;\n        const controller = this.controller;\n        if (!controller) {\n            return;\n        }\n        controller.willHide(reason);\n        const container = (_a = this.ui) === null || _a === void 0 ? void 0 : _a.container;\n        const focusChanged = container && !dom.isAncestorOfActiveElement(container);\n        this.controller = null;\n        this.onHideEmitter.fire();\n        if (container) {\n            container.style.display = 'none';\n        }\n        if (!focusChanged) {\n            let currentElement = this.previousFocusElement;\n            while (currentElement && !currentElement.offsetParent) {\n                currentElement = (_b = currentElement.parentElement) !== null && _b !== void 0 ? _b : undefined;\n            }\n            if (currentElement === null || currentElement === void 0 ? void 0 : currentElement.offsetParent) {\n                currentElement.focus();\n                this.previousFocusElement = undefined;\n            }\n            else {\n                this.options.returnFocus();\n            }\n        }\n        controller.didHide(reason);\n    }\n    layout(dimension, titleBarOffset) {\n        this.dimension = dimension;\n        this.titleBarOffset = titleBarOffset;\n        this.updateLayout();\n    }\n    updateLayout() {\n        if (this.ui && this.isVisible()) {\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\n            const style = this.ui.container.style;\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController_1.MAX_WIDTH);\n            style.width = width + 'px';\n            style.marginLeft = '-' + (width / 2) + 'px';\n            this.ui.inputBox.layout();\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n        }\n    }\n    applyStyles(styles) {\n        this.styles = styles;\n        this.updateStyles();\n    }\n    updateStyles() {\n        if (this.ui) {\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, widgetBorder, widgetShadow, } = this.styles.widget;\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground !== null && quickInputTitleBackground !== void 0 ? quickInputTitleBackground : '';\n            this.ui.container.style.backgroundColor = quickInputBackground !== null && quickInputBackground !== void 0 ? quickInputBackground : '';\n            this.ui.container.style.color = quickInputForeground !== null && quickInputForeground !== void 0 ? quickInputForeground : '';\n            this.ui.container.style.border = widgetBorder ? `1px solid ${widgetBorder}` : '';\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n            this.ui.list.style(this.styles.list);\n            const content = [];\n            if (this.styles.pickerGroup.pickerGroupBorder) {\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.pickerGroup.pickerGroupBorder}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.pickerGroup.pickerGroupForeground}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }`);\n            }\n            if (this.styles.keybindingLabel.keybindingLabelBackground ||\n                this.styles.keybindingLabel.keybindingLabelBorder ||\n                this.styles.keybindingLabel.keybindingLabelBottomBorder ||\n                this.styles.keybindingLabel.keybindingLabelShadow ||\n                this.styles.keybindingLabel.keybindingLabelForeground) {\n                content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n                if (this.styles.keybindingLabel.keybindingLabelBackground) {\n                    content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBorder) {\n                    // Order matters here. `border-color` must come before `border-bottom-color`.\n                    content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n                    content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelShadow) {\n                    content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelForeground) {\n                    content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n                }\n                content.push('}');\n            }\n            const newStyles = content.join('\\n');\n            if (newStyles !== this.ui.styleSheet.textContent) {\n                this.ui.styleSheet.textContent = newStyles;\n            }\n        }\n    }\n};\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget\nQuickInputController = QuickInputController_1 = __decorate([\n    __param(1, ILayoutService),\n    __param(2, IInstantiationService),\n    __param(3, IContextKeyService)\n], QuickInputController);\nexport { QuickInputController };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}