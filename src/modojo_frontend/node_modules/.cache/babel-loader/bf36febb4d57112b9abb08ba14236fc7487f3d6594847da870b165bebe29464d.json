{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Sash } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, observableValue } from '../../../../../base/common/observable.js';\nimport { derivedWithSetter } from '../../../../../base/common/observableInternal/derived.js';\nexport class SashLayout {\n  resetSash() {\n    this._sashRatio.set(undefined, undefined);\n  }\n  constructor(_options, dimensions) {\n    this._options = _options;\n    this.dimensions = dimensions;\n    this.sashLeft = derivedWithSetter(this, reader => {\n      var _a;\n      const ratio = (_a = this._sashRatio.read(reader)) !== null && _a !== void 0 ? _a : this._options.splitViewDefaultRatio.read(reader);\n      return this._computeSashLeft(ratio, reader);\n    }, (value, tx) => {\n      const contentWidth = this.dimensions.width.get();\n      this._sashRatio.set(value / contentWidth, tx);\n    });\n    this._sashRatio = observableValue(this, undefined);\n  }\n  /** @pure */\n  _computeSashLeft(desiredRatio, reader) {\n    const contentWidth = this.dimensions.width.read(reader);\n    const midPoint = Math.floor(this._options.splitViewDefaultRatio.read(reader) * contentWidth);\n    const sashLeft = this._options.enableSplitViewResizing.read(reader) ? Math.floor(desiredRatio * contentWidth) : midPoint;\n    const MINIMUM_EDITOR_WIDTH = 100;\n    if (contentWidth <= MINIMUM_EDITOR_WIDTH * 2) {\n      return midPoint;\n    }\n    if (sashLeft < MINIMUM_EDITOR_WIDTH) {\n      return MINIMUM_EDITOR_WIDTH;\n    }\n    if (sashLeft > contentWidth - MINIMUM_EDITOR_WIDTH) {\n      return contentWidth - MINIMUM_EDITOR_WIDTH;\n    }\n    return sashLeft;\n  }\n}\nexport class DiffEditorSash extends Disposable {\n  constructor(_domNode, _dimensions, _enabled, _boundarySashes, sashLeft, _resetSash) {\n    super();\n    this._domNode = _domNode;\n    this._dimensions = _dimensions;\n    this._enabled = _enabled;\n    this._boundarySashes = _boundarySashes;\n    this.sashLeft = sashLeft;\n    this._resetSash = _resetSash;\n    this._sash = this._register(new Sash(this._domNode, {\n      getVerticalSashTop: _sash => 0,\n      getVerticalSashLeft: _sash => this.sashLeft.get(),\n      getVerticalSashHeight: _sash => this._dimensions.height.get()\n    }, {\n      orientation: 0 /* Orientation.VERTICAL */\n    }));\n    this._startSashPosition = undefined;\n    this._register(this._sash.onDidStart(() => {\n      this._startSashPosition = this.sashLeft.get();\n    }));\n    this._register(this._sash.onDidChange(e => {\n      this.sashLeft.set(this._startSashPosition + (e.currentX - e.startX), undefined);\n    }));\n    this._register(this._sash.onDidEnd(() => this._sash.layout()));\n    this._register(this._sash.onDidReset(() => this._resetSash()));\n    this._register(autorun(reader => {\n      const sashes = this._boundarySashes.read(reader);\n      if (sashes) {\n        this._sash.orthogonalEndSash = sashes.bottom;\n      }\n    }));\n    this._register(autorun(reader => {\n      /** @description DiffEditorSash.layoutSash */\n      const enabled = this._enabled.read(reader);\n      this._sash.state = enabled ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n      this.sashLeft.read(reader);\n      this._dimensions.height.read(reader);\n      this._sash.layout();\n    }));\n  }\n}","map":{"version":3,"names":["Sash","Disposable","autorun","observableValue","derivedWithSetter","SashLayout","resetSash","_sashRatio","set","undefined","constructor","_options","dimensions","sashLeft","reader","_a","ratio","read","splitViewDefaultRatio","_computeSashLeft","value","tx","contentWidth","width","get","desiredRatio","midPoint","Math","floor","enableSplitViewResizing","MINIMUM_EDITOR_WIDTH","DiffEditorSash","_domNode","_dimensions","_enabled","_boundarySashes","_resetSash","_sash","_register","getVerticalSashTop","getVerticalSashLeft","getVerticalSashHeight","height","orientation","_startSashPosition","onDidStart","onDidChange","e","currentX","startX","onDidEnd","layout","onDidReset","sashes","orthogonalEndSash","bottom","enabled","state"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorSash.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Sash } from '../../../../../base/browser/ui/sash/sash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, observableValue } from '../../../../../base/common/observable.js';\nimport { derivedWithSetter } from '../../../../../base/common/observableInternal/derived.js';\nexport class SashLayout {\n    resetSash() {\n        this._sashRatio.set(undefined, undefined);\n    }\n    constructor(_options, dimensions) {\n        this._options = _options;\n        this.dimensions = dimensions;\n        this.sashLeft = derivedWithSetter(this, reader => {\n            var _a;\n            const ratio = (_a = this._sashRatio.read(reader)) !== null && _a !== void 0 ? _a : this._options.splitViewDefaultRatio.read(reader);\n            return this._computeSashLeft(ratio, reader);\n        }, (value, tx) => {\n            const contentWidth = this.dimensions.width.get();\n            this._sashRatio.set(value / contentWidth, tx);\n        });\n        this._sashRatio = observableValue(this, undefined);\n    }\n    /** @pure */\n    _computeSashLeft(desiredRatio, reader) {\n        const contentWidth = this.dimensions.width.read(reader);\n        const midPoint = Math.floor(this._options.splitViewDefaultRatio.read(reader) * contentWidth);\n        const sashLeft = this._options.enableSplitViewResizing.read(reader) ? Math.floor(desiredRatio * contentWidth) : midPoint;\n        const MINIMUM_EDITOR_WIDTH = 100;\n        if (contentWidth <= MINIMUM_EDITOR_WIDTH * 2) {\n            return midPoint;\n        }\n        if (sashLeft < MINIMUM_EDITOR_WIDTH) {\n            return MINIMUM_EDITOR_WIDTH;\n        }\n        if (sashLeft > contentWidth - MINIMUM_EDITOR_WIDTH) {\n            return contentWidth - MINIMUM_EDITOR_WIDTH;\n        }\n        return sashLeft;\n    }\n}\nexport class DiffEditorSash extends Disposable {\n    constructor(_domNode, _dimensions, _enabled, _boundarySashes, sashLeft, _resetSash) {\n        super();\n        this._domNode = _domNode;\n        this._dimensions = _dimensions;\n        this._enabled = _enabled;\n        this._boundarySashes = _boundarySashes;\n        this.sashLeft = sashLeft;\n        this._resetSash = _resetSash;\n        this._sash = this._register(new Sash(this._domNode, {\n            getVerticalSashTop: (_sash) => 0,\n            getVerticalSashLeft: (_sash) => this.sashLeft.get(),\n            getVerticalSashHeight: (_sash) => this._dimensions.height.get(),\n        }, { orientation: 0 /* Orientation.VERTICAL */ }));\n        this._startSashPosition = undefined;\n        this._register(this._sash.onDidStart(() => {\n            this._startSashPosition = this.sashLeft.get();\n        }));\n        this._register(this._sash.onDidChange((e) => {\n            this.sashLeft.set(this._startSashPosition + (e.currentX - e.startX), undefined);\n        }));\n        this._register(this._sash.onDidEnd(() => this._sash.layout()));\n        this._register(this._sash.onDidReset(() => this._resetSash()));\n        this._register(autorun(reader => {\n            const sashes = this._boundarySashes.read(reader);\n            if (sashes) {\n                this._sash.orthogonalEndSash = sashes.bottom;\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description DiffEditorSash.layoutSash */\n            const enabled = this._enabled.read(reader);\n            this._sash.state = enabled ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n            this.sashLeft.read(reader);\n            this._dimensions.height.read(reader);\n            this._sash.layout();\n        }));\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}