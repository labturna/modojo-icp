{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport * as React from \"react\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { noop, processSize } from \"./utils\";\nfunction MonacoDiffEditor(_a) {\n  var width = _a.width,\n    height = _a.height,\n    value = _a.value,\n    defaultValue = _a.defaultValue,\n    language = _a.language,\n    theme = _a.theme,\n    options = _a.options,\n    overrideServices = _a.overrideServices,\n    editorWillMount = _a.editorWillMount,\n    editorDidMount = _a.editorDidMount,\n    editorWillUnmount = _a.editorWillUnmount,\n    onChange = _a.onChange,\n    className = _a.className,\n    original = _a.original,\n    originalUri = _a.originalUri,\n    modifiedUri = _a.modifiedUri;\n  var containerElement = useRef(null);\n  var editor = useRef(null);\n  var _subscription = useRef(null);\n  var __prevent_trigger_change_event = useRef(null);\n  var fixedWidth = processSize(width);\n  var fixedHeight = processSize(height);\n  var style = useMemo(function () {\n    return {\n      width: fixedWidth,\n      height: fixedHeight\n    };\n  }, [fixedWidth, fixedHeight]);\n  var handleEditorWillMount = function () {\n    var finalOptions = editorWillMount(monaco);\n    return finalOptions || {};\n  };\n  var handleEditorDidMount = function () {\n    editorDidMount(editor.current, monaco);\n    var modified = editor.current.getModel().modified;\n    _subscription.current = modified.onDidChangeContent(function (event) {\n      if (!__prevent_trigger_change_event.current) {\n        onChange(modified.getValue(), event);\n      }\n    });\n  };\n  var handleEditorWillUnmount = function () {\n    editorWillUnmount(editor.current, monaco);\n  };\n  var initModels = function () {\n    var finalValue = value != null ? value : defaultValue;\n    var originalModelUri = originalUri === null || originalUri === void 0 ? void 0 : originalUri(monaco);\n    var modifiedModelUri = modifiedUri === null || modifiedUri === void 0 ? void 0 : modifiedUri(monaco);\n    var originalModel = originalModelUri && monaco.editor.getModel(originalModelUri);\n    var modifiedModel = modifiedModelUri && monaco.editor.getModel(modifiedModelUri);\n    // Cannot create two models with the same URI,\n    // if model with the given URI is already created, just update it.\n    if (originalModel) {\n      originalModel.setValue(original);\n      monaco.editor.setModelLanguage(originalModel, language);\n    } else {\n      originalModel = monaco.editor.createModel(finalValue, language, originalModelUri);\n    }\n    if (modifiedModel) {\n      originalModel.setValue(finalValue);\n      monaco.editor.setModelLanguage(modifiedModel, language);\n    } else {\n      modifiedModel = monaco.editor.createModel(finalValue, language, modifiedModelUri);\n    }\n    editor.current.setModel({\n      original: originalModel,\n      modified: modifiedModel\n    });\n  };\n  useEffect(function () {\n    if (containerElement.current) {\n      // Before initializing monaco editor\n      handleEditorWillMount();\n      editor.current = monaco.editor.createDiffEditor(containerElement.current, __assign(__assign(__assign({}, className ? {\n        extraEditorClassName: className\n      } : {}), options), theme ? {\n        theme: theme\n      } : {}), overrideServices);\n      // After initializing monaco editor\n      initModels();\n      handleEditorDidMount();\n    }\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  useEffect(function () {\n    if (editor.current) {\n      editor.current.updateOptions(__assign(__assign({}, className ? {\n        extraEditorClassName: className\n      } : {}), options));\n    }\n  }, [className, options]);\n  useEffect(function () {\n    if (editor.current) {\n      editor.current.layout();\n    }\n  }, [width, height]);\n  useEffect(function () {\n    if (editor.current) {\n      var _a = editor.current.getModel(),\n        originalEditor = _a.original,\n        modified = _a.modified;\n      monaco.editor.setModelLanguage(originalEditor, language);\n      monaco.editor.setModelLanguage(modified, language);\n    }\n  }, [language]);\n  useEffect(function () {\n    if (editor.current) {\n      var modified = editor.current.getModel().modified;\n      __prevent_trigger_change_event.current = true;\n      // modifiedEditor is not in the public API for diff editors\n      editor.current.getModifiedEditor().pushUndoStop();\n      // pushEditOperations says it expects a cursorComputer, but doesn't seem to need one.\n      // @ts-expect-error\n      modified.pushEditOperations([], [{\n        range: modified.getFullModelRange(),\n        text: value\n      }]);\n      // modifiedEditor is not in the public API for diff editors\n      editor.current.getModifiedEditor().pushUndoStop();\n      __prevent_trigger_change_event.current = false;\n    }\n  }, [value]);\n  useEffect(function () {\n    monaco.editor.setTheme(theme);\n  }, [theme]);\n  useEffect(function () {\n    if (editor.current) {\n      var originalEditor = editor.current.getModel().original;\n      if (original !== originalEditor.getValue()) {\n        originalEditor.setValue(original);\n      }\n    }\n  }, [original]);\n  useEffect(function () {\n    return function () {\n      if (editor.current) {\n        handleEditorWillUnmount();\n        editor.current.dispose();\n        var _a = editor.current.getModel(),\n          originalEditor = _a.original,\n          modified = _a.modified;\n        if (originalEditor) {\n          originalEditor.dispose();\n        }\n        if (modified) {\n          modified.dispose();\n        }\n      }\n      if (_subscription.current) {\n        _subscription.current.dispose();\n      }\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return React.createElement(\"div\", {\n    ref: containerElement,\n    style: style,\n    className: \"react-monaco-editor-container\"\n  });\n}\nMonacoDiffEditor.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  original: null,\n  value: null,\n  defaultValue: \"\",\n  language: \"javascript\",\n  theme: null,\n  options: {},\n  overrideServices: {},\n  editorWillMount: noop,\n  editorDidMount: noop,\n  editorWillUnmount: noop,\n  onChange: noop,\n  className: null\n};\nMonacoDiffEditor.displayName = \"MonacoDiffEditor\";\nexport default MonacoDiffEditor;","map":{"version":3,"names":["monaco","React","useEffect","useMemo","useRef","noop","processSize","MonacoDiffEditor","_a","width","height","value","defaultValue","language","theme","options","overrideServices","editorWillMount","editorDidMount","editorWillUnmount","onChange","className","original","originalUri","modifiedUri","containerElement","editor","_subscription","__prevent_trigger_change_event","fixedWidth","fixedHeight","style","handleEditorWillMount","finalOptions","handleEditorDidMount","current","modified","getModel","onDidChangeContent","event","getValue","handleEditorWillUnmount","initModels","finalValue","originalModelUri","modifiedModelUri","originalModel","modifiedModel","setValue","setModelLanguage","createModel","setModel","createDiffEditor","__assign","extraEditorClassName","updateOptions","layout","originalEditor","getModifiedEditor","pushUndoStop","pushEditOperations","range","getFullModelRange","text","setTheme","dispose","createElement","ref","defaultProps","displayName"],"sources":["/home/arslan/modojo/node_modules/react-monaco-editor/src/diff.tsx"],"sourcesContent":["import * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport * as React from \"react\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { MonacoDiffEditorProps } from \"./types\";\nimport { noop, processSize } from \"./utils\";\n\nfunction MonacoDiffEditor({\n  width,\n  height,\n  value,\n  defaultValue,\n  language,\n  theme,\n  options,\n  overrideServices,\n  editorWillMount,\n  editorDidMount,\n  editorWillUnmount,\n  onChange,\n  className,\n  original,\n  originalUri,\n  modifiedUri,\n}: MonacoDiffEditorProps) {\n  const containerElement = useRef<HTMLDivElement | null>(null);\n\n  const editor = useRef<monaco.editor.IStandaloneDiffEditor | null>(null);\n\n  const _subscription = useRef<monaco.IDisposable | null>(null);\n\n  const __prevent_trigger_change_event = useRef<boolean | null>(null);\n\n  const fixedWidth = processSize(width);\n\n  const fixedHeight = processSize(height);\n\n  const style = useMemo(\n    () => ({\n      width: fixedWidth,\n      height: fixedHeight,\n    }),\n    [fixedWidth, fixedHeight],\n  );\n\n  const handleEditorWillMount = () => {\n    const finalOptions = editorWillMount(monaco);\n    return finalOptions || {};\n  };\n\n  const handleEditorDidMount = () => {\n    editorDidMount(editor.current, monaco);\n\n    const { modified } = editor.current.getModel();\n    _subscription.current = modified.onDidChangeContent((event) => {\n      if (!__prevent_trigger_change_event.current) {\n        onChange(modified.getValue(), event);\n      }\n    });\n  };\n\n  const handleEditorWillUnmount = () => {\n    editorWillUnmount(editor.current, monaco);\n  };\n\n  const initModels = () => {\n    const finalValue = value != null ? value : defaultValue;\n    const originalModelUri = originalUri?.(monaco);\n    const modifiedModelUri = modifiedUri?.(monaco);\n    let originalModel =\n      originalModelUri && monaco.editor.getModel(originalModelUri);\n    let modifiedModel =\n      modifiedModelUri && monaco.editor.getModel(modifiedModelUri);\n\n    // Cannot create two models with the same URI,\n    // if model with the given URI is already created, just update it.\n    if (originalModel) {\n      originalModel.setValue(original);\n      monaco.editor.setModelLanguage(originalModel, language);\n    } else {\n      originalModel = monaco.editor.createModel(\n        finalValue,\n        language,\n        originalModelUri,\n      );\n    }\n    if (modifiedModel) {\n      originalModel.setValue(finalValue);\n      monaco.editor.setModelLanguage(modifiedModel, language);\n    } else {\n      modifiedModel = monaco.editor.createModel(\n        finalValue,\n        language,\n        modifiedModelUri,\n      );\n    }\n\n    editor.current.setModel({\n      original: originalModel,\n      modified: modifiedModel,\n    });\n  };\n\n  useEffect(\n    () => {\n      if (containerElement.current) {\n        // Before initializing monaco editor\n        handleEditorWillMount();\n        editor.current = monaco.editor.createDiffEditor(\n          containerElement.current,\n          {\n            ...(className ? { extraEditorClassName: className } : {}),\n            ...options,\n            ...(theme ? { theme } : {}),\n          },\n          overrideServices,\n        );\n        // After initializing monaco editor\n        initModels();\n        handleEditorDidMount();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  useEffect(() => {\n    if (editor.current) {\n      editor.current.updateOptions({\n        ...(className ? { extraEditorClassName: className } : {}),\n        ...options,\n      });\n    }\n  }, [className, options]);\n\n  useEffect(() => {\n    if (editor.current) {\n      editor.current.layout();\n    }\n  }, [width, height]);\n\n  useEffect(() => {\n    if (editor.current) {\n      const { original: originalEditor, modified } = editor.current.getModel();\n      monaco.editor.setModelLanguage(originalEditor, language);\n      monaco.editor.setModelLanguage(modified, language);\n    }\n  }, [language]);\n\n  useEffect(() => {\n    if (editor.current) {\n      const { modified } = editor.current.getModel();\n      __prevent_trigger_change_event.current = true;\n      // modifiedEditor is not in the public API for diff editors\n      editor.current.getModifiedEditor().pushUndoStop();\n      // pushEditOperations says it expects a cursorComputer, but doesn't seem to need one.\n      // @ts-expect-error\n      modified.pushEditOperations(\n        [],\n        [\n          {\n            range: modified.getFullModelRange(),\n            text: value,\n          },\n        ],\n      );\n      // modifiedEditor is not in the public API for diff editors\n      editor.current.getModifiedEditor().pushUndoStop();\n      __prevent_trigger_change_event.current = false;\n    }\n  }, [value]);\n\n  useEffect(() => {\n    monaco.editor.setTheme(theme);\n  }, [theme]);\n\n  useEffect(() => {\n    if (editor.current) {\n      const { original: originalEditor } = editor.current.getModel();\n      if (original !== originalEditor.getValue()) {\n        originalEditor.setValue(original);\n      }\n    }\n  }, [original]);\n\n  useEffect(\n    () => () => {\n      if (editor.current) {\n        handleEditorWillUnmount();\n        editor.current.dispose();\n        const { original: originalEditor, modified } =\n          editor.current.getModel();\n        if (originalEditor) {\n          originalEditor.dispose();\n        }\n        if (modified) {\n          modified.dispose();\n        }\n      }\n      if (_subscription.current) {\n        _subscription.current.dispose();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  return (\n    <div\n      ref={containerElement}\n      style={style}\n      className=\"react-monaco-editor-container\"\n    />\n  );\n}\n\nMonacoDiffEditor.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  original: null,\n  value: null,\n  defaultValue: \"\",\n  language: \"javascript\",\n  theme: null,\n  options: {},\n  overrideServices: {},\n  editorWillMount: noop,\n  editorDidMount: noop,\n  editorWillUnmount: noop,\n  onChange: noop,\n  className: null,\n};\n\nMonacoDiffEditor.displayName = \"MonacoDiffEditor\";\n\nexport default MonacoDiffEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}