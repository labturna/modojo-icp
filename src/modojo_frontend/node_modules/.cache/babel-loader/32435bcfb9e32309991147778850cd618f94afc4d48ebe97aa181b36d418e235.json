{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as IDL from './idl';\nimport { Principal } from '@dfinity/principal';\nimport * as UI from './candid-core';\nconst InputConfig = {\n  parse: parsePrimitive\n};\nconst FormConfig = {\n  render: renderInput\n};\nexport const inputBox = (t, config) => {\n  return new UI.InputBox(t, Object.assign(Object.assign({}, InputConfig), config));\n};\nexport const recordForm = (fields, config) => {\n  return new UI.RecordForm(fields, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const tupleForm = (components, config) => {\n  return new UI.TupleForm(components, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const variantForm = (fields, config) => {\n  return new UI.VariantForm(fields, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const optForm = (ty, config) => {\n  return new UI.OptionForm(ty, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const vecForm = (ty, config) => {\n  return new UI.VecForm(ty, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport class Render extends IDL.Visitor {\n  visitType(t, d) {\n    const input = document.createElement('input');\n    input.classList.add('argument');\n    input.placeholder = t.display();\n    return inputBox(t, {\n      input\n    });\n  }\n  visitNull(t, d) {\n    return inputBox(t, {});\n  }\n  visitRecord(t, fields, d) {\n    let config = {};\n    if (fields.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = {\n        container\n      };\n    }\n    const form = recordForm(fields, config);\n    return inputBox(t, {\n      form\n    });\n  }\n  visitTuple(t, components, d) {\n    let config = {};\n    if (components.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = {\n        container\n      };\n    }\n    const form = tupleForm(components, config);\n    return inputBox(t, {\n      form\n    });\n  }\n  visitVariant(t, fields, d) {\n    const select = document.createElement('select');\n    for (const [key, type] of fields) {\n      const option = new Option(key);\n      select.add(option);\n    }\n    select.selectedIndex = -1;\n    select.classList.add('open');\n    const config = {\n      open: select,\n      event: 'change'\n    };\n    const form = variantForm(fields, config);\n    return inputBox(t, {\n      form\n    });\n  }\n  visitOpt(t, ty, d) {\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('open');\n    const form = optForm(ty, {\n      open: checkbox,\n      event: 'change'\n    });\n    return inputBox(t, {\n      form\n    });\n  }\n  visitVec(t, ty, d) {\n    const len = document.createElement('input');\n    len.type = 'number';\n    len.min = '0';\n    len.max = '100';\n    len.style.width = '8rem';\n    len.placeholder = 'len';\n    len.classList.add('open');\n    const container = document.createElement('div');\n    container.classList.add('popup-form');\n    const form = vecForm(ty, {\n      open: len,\n      event: 'change',\n      container\n    });\n    return inputBox(t, {\n      form\n    });\n  }\n  visitRec(t, ty, d) {\n    return renderInput(ty);\n  }\n}\nclass Parse extends IDL.Visitor {\n  visitNull(t, v) {\n    return null;\n  }\n  visitBool(t, v) {\n    if (v === 'true') {\n      return true;\n    }\n    if (v === 'false') {\n      return false;\n    }\n    throw new Error(`Cannot parse ${v} as boolean`);\n  }\n  visitText(t, v) {\n    return v;\n  }\n  visitFloat(t, v) {\n    return parseFloat(v);\n  }\n  visitFixedInt(t, v) {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  visitFixedNat(t, v) {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  visitNumber(t, v) {\n    return BigInt(v);\n  }\n  visitPrincipal(t, v) {\n    return Principal.fromText(v);\n  }\n  visitService(t, v) {\n    return Principal.fromText(v);\n  }\n  visitFunc(t, v) {\n    const x = v.split('.', 2);\n    return [Principal.fromText(x[0]), x[1]];\n  }\n}\nclass Random extends IDL.Visitor {\n  visitNull(t, v) {\n    return null;\n  }\n  visitBool(t, v) {\n    return Math.random() < 0.5;\n  }\n  visitText(t, v) {\n    return Math.random().toString(36).substring(6);\n  }\n  visitFloat(t, v) {\n    return Math.random();\n  }\n  visitInt(t, v) {\n    return BigInt(this.generateNumber(true));\n  }\n  visitNat(t, v) {\n    return BigInt(this.generateNumber(false));\n  }\n  visitFixedInt(t, v) {\n    const x = this.generateNumber(true);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  visitFixedNat(t, v) {\n    const x = this.generateNumber(false);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  generateNumber(signed) {\n    const num = Math.floor(Math.random() * 100);\n    if (signed && Math.random() < 0.5) {\n      return -num;\n    } else {\n      return num;\n    }\n  }\n}\nfunction parsePrimitive(t, config, d) {\n  if (config.random && d === '') {\n    return t.accept(new Random(), d);\n  } else {\n    return t.accept(new Parse(), d);\n  }\n}\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\nexport function renderInput(t) {\n  return t.accept(new Render(), null);\n}\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\nexport function renderValue(t, input, value) {\n  return t.accept(new RenderValue(), {\n    input,\n    value\n  });\n}\nclass RenderValue extends IDL.Visitor {\n  visitType(t, d) {\n    d.input.ui.input.value = t.valueToString(d.value);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  visitNull(t, d) {}\n  visitText(t, d) {\n    d.input.ui.input.value = d.value;\n  }\n  visitRec(t, ty, d) {\n    renderValue(ty, d.input, d.value);\n  }\n  visitOpt(t, ty, d) {\n    if (d.value.length === 0) {\n      return;\n    } else {\n      const form = d.input.ui.form;\n      const open = form.ui.open;\n      open.checked = true;\n      open.dispatchEvent(new Event(form.ui.event));\n      renderValue(ty, form.form[0], d.value[0]);\n    }\n  }\n  visitRecord(t, fields, d) {\n    const form = d.input.ui.form;\n    fields.forEach((_ref, i) => {\n      let [key, type] = _ref;\n      renderValue(type, form.form[i], d.value[key]);\n    });\n  }\n  visitTuple(t, components, d) {\n    const form = d.input.ui.form;\n    components.forEach((type, i) => {\n      renderValue(type, form.form[i], d.value[i]);\n    });\n  }\n  visitVariant(t, fields, d) {\n    const form = d.input.ui.form;\n    const selected = Object.entries(d.value)[0];\n    fields.forEach((_ref2, i) => {\n      let [key, type] = _ref2;\n      if (key === selected[0]) {\n        const open = form.ui.open;\n        open.selectedIndex = i;\n        open.dispatchEvent(new Event(form.ui.event));\n        renderValue(type, form.form[0], selected[1]);\n      }\n    });\n  }\n  visitVec(t, ty, d) {\n    const form = d.input.ui.form;\n    const len = d.value.length;\n    const open = form.ui.open;\n    open.value = len;\n    open.dispatchEvent(new Event(form.ui.event));\n    d.value.forEach((v, i) => {\n      renderValue(ty, form.form[i], v);\n    });\n  }\n}","map":{"version":3,"names":["IDL","Principal","UI","InputConfig","parse","parsePrimitive","FormConfig","render","renderInput","inputBox","t","config","InputBox","Object","assign","recordForm","fields","RecordForm","tupleForm","components","TupleForm","variantForm","VariantForm","optForm","ty","OptionForm","vecForm","VecForm","Render","Visitor","visitType","d","input","document","createElement","classList","add","placeholder","display","visitNull","visitRecord","length","container","form","visitTuple","visitVariant","select","key","type","option","Option","selectedIndex","open","event","visitOpt","checkbox","visitVec","len","min","max","style","width","visitRec","Parse","v","visitBool","Error","visitText","visitFloat","parseFloat","visitFixedInt","_bits","parseInt","BigInt","visitFixedNat","visitNumber","visitPrincipal","fromText","visitService","visitFunc","x","split","Random","Math","random","toString","substring","visitInt","generateNumber","visitNat","signed","num","floor","accept","renderValue","value","RenderValue","ui","valueToString","checked","dispatchEvent","Event","forEach","_ref","i","selected","entries","_ref2"],"sources":["/home/arslan/modojo/node_modules/@dfinity/candid/src/candid-ui.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as IDL from './idl';\nimport { Principal } from '@dfinity/principal';\nimport * as UI from './candid-core';\n\ntype InputBox = UI.InputBox;\n\nconst InputConfig: UI.UIConfig = { parse: parsePrimitive };\nconst FormConfig: UI.FormConfig = { render: renderInput };\n\nexport const inputBox = (t: IDL.Type, config: Partial<UI.UIConfig>) => {\n  return new UI.InputBox(t, { ...InputConfig, ...config });\n};\nexport const recordForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.RecordForm(fields, { ...FormConfig, ...config });\n};\nexport const tupleForm = (components: IDL.Type[], config: Partial<UI.FormConfig>) => {\n  return new UI.TupleForm(components, { ...FormConfig, ...config });\n};\nexport const variantForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.VariantForm(fields, { ...FormConfig, ...config });\n};\nexport const optForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.OptionForm(ty, { ...FormConfig, ...config });\n};\nexport const vecForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.VecForm(ty, { ...FormConfig, ...config });\n};\n\nexport class Render extends IDL.Visitor<null, InputBox> {\n  public visitType<T>(t: IDL.Type<T>, d: null): InputBox {\n    const input = document.createElement('input');\n    input.classList.add('argument');\n    input.placeholder = t.display();\n    return inputBox(t, { input });\n  }\n  public visitNull(t: IDL.NullClass, d: null): InputBox {\n    return inputBox(t, {});\n  }\n  public visitRecord(t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, d: null): InputBox {\n    let config = {};\n    if (fields.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = recordForm(fields, config);\n    return inputBox(t, { form });\n  }\n  public visitTuple<T extends any[]>(\n    t: IDL.TupleClass<T>,\n    components: IDL.Type[],\n    d: null,\n  ): InputBox {\n    let config = {};\n    if (components.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = tupleForm(components, config);\n    return inputBox(t, { form });\n  }\n  public visitVariant(t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, d: null): InputBox {\n    const select = document.createElement('select');\n    for (const [key, type] of fields) {\n      const option = new Option(key);\n      select.add(option);\n    }\n    select.selectedIndex = -1;\n    select.classList.add('open');\n    const config: Partial<UI.FormConfig> = { open: select, event: 'change' };\n    const form = variantForm(fields, config);\n    return inputBox(t, { form });\n  }\n  public visitOpt<T>(t: IDL.OptClass<T>, ty: IDL.Type<T>, d: null): InputBox {\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('open');\n    const form = optForm(ty, { open: checkbox, event: 'change' });\n    return inputBox(t, { form });\n  }\n  public visitVec<T>(t: IDL.VecClass<T>, ty: IDL.Type<T>, d: null): InputBox {\n    const len = document.createElement('input');\n    len.type = 'number';\n    len.min = '0';\n    len.max = '100';\n    len.style.width = '8rem';\n    len.placeholder = 'len';\n    len.classList.add('open');\n    const container = document.createElement('div');\n    container.classList.add('popup-form');\n    const form = vecForm(ty, { open: len, event: 'change', container });\n    return inputBox(t, { form });\n  }\n  public visitRec<T>(t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, d: null): InputBox {\n    return renderInput(ty);\n  }\n}\n\nclass Parse extends IDL.Visitor<string, any> {\n  public visitNull(t: IDL.NullClass, v: string): null {\n    return null;\n  }\n  public visitBool(t: IDL.BoolClass, v: string): boolean {\n    if (v === 'true') {\n      return true;\n    }\n    if (v === 'false') {\n      return false;\n    }\n    throw new Error(`Cannot parse ${v} as boolean`);\n  }\n  public visitText(t: IDL.TextClass, v: string): string {\n    return v;\n  }\n  public visitFloat(t: IDL.FloatClass, v: string): number {\n    return parseFloat(v);\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitNumber(t: IDL.PrimitiveType, v: string): bigint {\n    return BigInt(v);\n  }\n  public visitPrincipal(t: IDL.PrincipalClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitService(t: IDL.ServiceClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitFunc(t: IDL.FuncClass, v: string): [Principal, string] {\n    const x = v.split('.', 2);\n    return [Principal.fromText(x[0]), x[1]];\n  }\n}\n\nclass Random extends IDL.Visitor<string, any> {\n  public visitNull(t: IDL.NullClass, v: string): null {\n    return null;\n  }\n  public visitBool(t: IDL.BoolClass, v: string): boolean {\n    return Math.random() < 0.5;\n  }\n  public visitText(t: IDL.TextClass, v: string): string {\n    return Math.random().toString(36).substring(6);\n  }\n  public visitFloat(t: IDL.FloatClass, v: string): number {\n    return Math.random();\n  }\n  public visitInt(t: IDL.IntClass, v: string): bigint {\n    return BigInt(this.generateNumber(true));\n  }\n  public visitNat(t: IDL.NatClass, v: string): bigint {\n    return BigInt(this.generateNumber(false));\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    const x = this.generateNumber(true);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    const x = this.generateNumber(false);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  private generateNumber(signed: boolean): number {\n    const num = Math.floor(Math.random() * 100);\n    if (signed && Math.random() < 0.5) {\n      return -num;\n    } else {\n      return num;\n    }\n  }\n}\n\nfunction parsePrimitive(t: IDL.Type, config: UI.ParseConfig, d: string) {\n  if (config.random && d === '') {\n    return t.accept(new Random(), d);\n  } else {\n    return t.accept(new Parse(), d);\n  }\n}\n\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\nexport function renderInput(t: IDL.Type): InputBox {\n  return t.accept(new Render(), null);\n}\n\ninterface ValueConfig {\n  input: InputBox;\n  value: any;\n}\n\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\nexport function renderValue(t: IDL.Type, input: InputBox, value: any) {\n  return t.accept(new RenderValue(), { input, value });\n}\n\nclass RenderValue extends IDL.Visitor<ValueConfig, void> {\n  public visitType<T>(t: IDL.Type<T>, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = t.valueToString(d.value);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public visitNull(t: IDL.NullClass, d: ValueConfig) {}\n  public visitText(t: IDL.TextClass, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = d.value;\n  }\n  public visitRec<T>(t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, d: ValueConfig) {\n    renderValue(ty, d.input, d.value);\n  }\n  public visitOpt<T>(t: IDL.OptClass<T>, ty: IDL.Type<T>, d: ValueConfig) {\n    if (d.value.length === 0) {\n      return;\n    } else {\n      const form = d.input.ui.form!;\n      const open = form.ui.open as HTMLInputElement;\n      open.checked = true;\n      open.dispatchEvent(new Event(form.ui.event!));\n      renderValue(ty, form.form[0], d.value[0]);\n    }\n  }\n  public visitRecord(t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    fields.forEach(([key, type], i) => {\n      renderValue(type, form.form[i], d.value[key]);\n    });\n  }\n  public visitTuple<T extends any[]>(t: IDL.TupleClass<T>, components: IDL.Type[], d: ValueConfig) {\n    const form = d.input.ui.form!;\n    components.forEach((type, i) => {\n      renderValue(type, form.form[i], d.value[i]);\n    });\n  }\n  public visitVariant(t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const selected = Object.entries(d.value)[0];\n    fields.forEach(([key, type], i) => {\n      if (key === selected[0]) {\n        const open = form.ui.open as HTMLSelectElement;\n        open.selectedIndex = i;\n        open.dispatchEvent(new Event(form.ui.event!));\n        renderValue(type, form.form[0], selected[1]);\n      }\n    });\n  }\n  public visitVec<T>(t: IDL.VecClass<T>, ty: IDL.Type<T>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const len = d.value.length;\n    const open = form.ui.open as HTMLInputElement;\n    open.value = len;\n    open.dispatchEvent(new Event(form.ui.event!));\n    d.value.forEach((v: T, i: number) => {\n      renderValue(ty, form.form[i], v);\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}