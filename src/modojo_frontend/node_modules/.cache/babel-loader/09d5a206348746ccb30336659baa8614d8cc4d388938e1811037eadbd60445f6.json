{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './stickyScroll.css';\nimport { getColumnOfNodeOffset } from '../../../browser/viewParts/lines/viewLine.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { Position } from '../../../common/core/position.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { foldingCollapsedIcon, foldingExpandedIcon } from '../../folding/browser/foldingDecorations.js';\nexport class StickyScrollWidgetState {\n  constructor(startLineNumbers, endLineNumbers, lastLineRelativePosition) {\n    let showEndForLine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    this.startLineNumbers = startLineNumbers;\n    this.endLineNumbers = endLineNumbers;\n    this.lastLineRelativePosition = lastLineRelativePosition;\n    this.showEndForLine = showEndForLine;\n  }\n  equals(other) {\n    return !!other && this.lastLineRelativePosition === other.lastLineRelativePosition && this.showEndForLine === other.showEndForLine && equals(this.startLineNumbers, other.startLineNumbers) && equals(this.endLineNumbers, other.endLineNumbers);\n  }\n}\nconst _ttPolicy = createTrustedTypesPolicy('stickyScrollViewLayer', {\n  createHTML: value => value\n});\nconst STICKY_INDEX_ATTR = 'data-sticky-line-index';\nconst STICKY_IS_LINE_ATTR = 'data-sticky-is-line';\nconst STICKY_IS_LINE_NUMBER_ATTR = 'data-sticky-is-line-number';\nconst STICKY_IS_FOLDING_ICON_ATTR = 'data-sticky-is-folding-icon';\nexport class StickyScrollWidget extends Disposable {\n  constructor(_editor) {\n    super();\n    this._editor = _editor;\n    this._foldingIconStore = new DisposableStore();\n    this._rootDomNode = document.createElement('div');\n    this._lineNumbersDomNode = document.createElement('div');\n    this._linesDomNodeScrollable = document.createElement('div');\n    this._linesDomNode = document.createElement('div');\n    this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n    this._renderedStickyLines = [];\n    this._lineNumbers = [];\n    this._lastLineRelativePosition = 0;\n    this._minContentWidthInPx = 0;\n    this._isOnGlyphMargin = false;\n    this._lineNumbersDomNode.className = 'sticky-widget-line-numbers';\n    this._lineNumbersDomNode.setAttribute('role', 'none');\n    this._linesDomNode.className = 'sticky-widget-lines';\n    this._linesDomNode.setAttribute('role', 'list');\n    this._linesDomNodeScrollable.className = 'sticky-widget-lines-scrollable';\n    this._linesDomNodeScrollable.appendChild(this._linesDomNode);\n    this._rootDomNode.className = 'sticky-widget';\n    this._rootDomNode.classList.toggle('peek', _editor instanceof EmbeddedCodeEditorWidget);\n    this._rootDomNode.appendChild(this._lineNumbersDomNode);\n    this._rootDomNode.appendChild(this._linesDomNodeScrollable);\n    const updateScrollLeftPosition = () => {\n      this._linesDomNode.style.left = this._editor.getOption(115 /* EditorOption.stickyScroll */).scrollWithEditor ? `-${this._editor.getScrollLeft()}px` : '0px';\n    };\n    this._register(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(115 /* EditorOption.stickyScroll */)) {\n        updateScrollLeftPosition();\n      }\n      if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n        this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n      }\n    }));\n    this._register(this._editor.onDidScrollChange(e => {\n      if (e.scrollLeftChanged) {\n        updateScrollLeftPosition();\n      }\n      if (e.scrollWidthChanged) {\n        this._updateWidgetWidth();\n      }\n    }));\n    this._register(this._editor.onDidChangeModel(() => {\n      updateScrollLeftPosition();\n      this._updateWidgetWidth();\n    }));\n    this._register(this._foldingIconStore);\n    updateScrollLeftPosition();\n    this._register(this._editor.onDidLayoutChange(e => {\n      this._updateWidgetWidth();\n    }));\n    this._updateWidgetWidth();\n  }\n  get lineNumbers() {\n    return this._lineNumbers;\n  }\n  get lineNumberCount() {\n    return this._lineNumbers.length;\n  }\n  getRenderedStickyLine(lineNumber) {\n    return this._renderedStickyLines.find(stickyLine => stickyLine.lineNumber === lineNumber);\n  }\n  getCurrentLines() {\n    return this._lineNumbers;\n  }\n  setState(_state, foldingModel, _rebuildFromLine) {\n    if (_rebuildFromLine === undefined && (!this._previousState && !_state || this._previousState && this._previousState.equals(_state))) {\n      return;\n    }\n    const isWidgetHeightZero = this._isWidgetHeightZero(_state);\n    const state = isWidgetHeightZero ? undefined : _state;\n    const rebuildFromLine = isWidgetHeightZero ? 0 : this._findLineToRebuildWidgetFrom(_state, _rebuildFromLine);\n    this._renderRootNode(state, foldingModel, rebuildFromLine);\n    this._previousState = _state;\n  }\n  _isWidgetHeightZero(state) {\n    if (!state) {\n      return true;\n    }\n    const futureWidgetHeight = state.startLineNumbers.length * this._lineHeight + state.lastLineRelativePosition;\n    if (futureWidgetHeight > 0) {\n      this._lastLineRelativePosition = state.lastLineRelativePosition;\n      const lineNumbers = [...state.startLineNumbers];\n      if (state.showEndForLine !== null) {\n        lineNumbers[state.showEndForLine] = state.endLineNumbers[state.showEndForLine];\n      }\n      this._lineNumbers = lineNumbers;\n    } else {\n      this._lastLineRelativePosition = 0;\n      this._lineNumbers = [];\n    }\n    return futureWidgetHeight === 0;\n  }\n  _findLineToRebuildWidgetFrom(state, _rebuildFromLine) {\n    if (!state || !this._previousState) {\n      return 0;\n    }\n    if (_rebuildFromLine !== undefined) {\n      return _rebuildFromLine;\n    }\n    const previousState = this._previousState;\n    const indexOfLinesAlreadyRendered = state.startLineNumbers.findIndex(startLineNumber => !previousState.startLineNumbers.includes(startLineNumber));\n    return indexOfLinesAlreadyRendered === -1 ? 0 : indexOfLinesAlreadyRendered;\n  }\n  _updateWidgetWidth() {\n    const layoutInfo = this._editor.getLayoutInfo();\n    const lineNumbersWidth = layoutInfo.contentLeft;\n    this._lineNumbersDomNode.style.width = `${lineNumbersWidth}px`;\n    this._linesDomNodeScrollable.style.setProperty('--vscode-editorStickyScroll-scrollableWidth', `${this._editor.getScrollWidth() - layoutInfo.verticalScrollbarWidth}px`);\n    this._rootDomNode.style.width = `${layoutInfo.width - layoutInfo.verticalScrollbarWidth}px`;\n  }\n  _clearStickyLinesFromLine(clearFromLine) {\n    this._foldingIconStore.clear();\n    // Removing only the lines that need to be rerendered\n    for (let i = clearFromLine; i < this._renderedStickyLines.length; i++) {\n      const stickyLine = this._renderedStickyLines[i];\n      stickyLine.lineNumberDomNode.remove();\n      stickyLine.lineDomNode.remove();\n    }\n    // Keep the lines that need to be updated\n    this._renderedStickyLines = this._renderedStickyLines.slice(0, clearFromLine);\n    this._rootDomNode.style.display = 'none';\n  }\n  _useFoldingOpacityTransition(requireTransitions) {\n    this._lineNumbersDomNode.style.setProperty('--vscode-editorStickyScroll-foldingOpacityTransition', `opacity ${requireTransitions ? 0.5 : 0}s`);\n  }\n  _setFoldingIconsVisibility(allVisible) {\n    for (const line of this._renderedStickyLines) {\n      const foldingIcon = line.foldingIcon;\n      if (!foldingIcon) {\n        continue;\n      }\n      foldingIcon.setVisible(allVisible ? true : foldingIcon.isCollapsed);\n    }\n  }\n  async _renderRootNode(state, foldingModel, rebuildFromLine) {\n    this._clearStickyLinesFromLine(rebuildFromLine);\n    if (!state) {\n      return;\n    }\n    // For existing sticky lines update the top and z-index\n    for (const stickyLine of this._renderedStickyLines) {\n      this._updateTopAndZIndexOfStickyLine(stickyLine);\n    }\n    // For new sticky lines\n    const layoutInfo = this._editor.getLayoutInfo();\n    const linesToRender = this._lineNumbers.slice(rebuildFromLine);\n    for (const [index, line] of linesToRender.entries()) {\n      const stickyLine = this._renderChildNode(index + rebuildFromLine, line, foldingModel, layoutInfo);\n      if (!stickyLine) {\n        continue;\n      }\n      this._linesDomNode.appendChild(stickyLine.lineDomNode);\n      this._lineNumbersDomNode.appendChild(stickyLine.lineNumberDomNode);\n      this._renderedStickyLines.push(stickyLine);\n    }\n    if (foldingModel) {\n      this._setFoldingHoverListeners();\n      this._useFoldingOpacityTransition(!this._isOnGlyphMargin);\n    }\n    const widgetHeight = this._lineNumbers.length * this._lineHeight + this._lastLineRelativePosition;\n    this._rootDomNode.style.display = 'block';\n    this._lineNumbersDomNode.style.height = `${widgetHeight}px`;\n    this._linesDomNodeScrollable.style.height = `${widgetHeight}px`;\n    this._rootDomNode.style.height = `${widgetHeight}px`;\n    this._rootDomNode.style.marginLeft = '0px';\n    this._minContentWidthInPx = Math.max(...this._renderedStickyLines.map(l => l.scrollWidth)) + layoutInfo.verticalScrollbarWidth;\n    this._editor.layoutOverlayWidget(this);\n  }\n  _setFoldingHoverListeners() {\n    const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n    if (showFoldingControls !== 'mouseover') {\n      return;\n    }\n    this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_ENTER, () => {\n      this._isOnGlyphMargin = true;\n      this._setFoldingIconsVisibility(true);\n    }));\n    this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_LEAVE, () => {\n      this._isOnGlyphMargin = false;\n      this._useFoldingOpacityTransition(true);\n      this._setFoldingIconsVisibility(false);\n    }));\n  }\n  _renderChildNode(index, line, foldingModel, layoutInfo) {\n    const viewModel = this._editor._getViewModel();\n    if (!viewModel) {\n      return;\n    }\n    const viewLineNumber = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(line, 1)).lineNumber;\n    const lineRenderingData = viewModel.getViewLineRenderingData(viewLineNumber);\n    const lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n    let actualInlineDecorations;\n    try {\n      actualInlineDecorations = LineDecoration.filter(lineRenderingData.inlineDecorations, viewLineNumber, lineRenderingData.minColumn, lineRenderingData.maxColumn);\n    } catch (err) {\n      actualInlineDecorations = [];\n    }\n    const renderLineInput = new RenderLineInput(true, true, lineRenderingData.content, lineRenderingData.continuesWithWrappedLine, lineRenderingData.isBasicASCII, lineRenderingData.containsRTL, 0, lineRenderingData.tokens, actualInlineDecorations, lineRenderingData.tabSize, lineRenderingData.startVisibleColumn, 1, 1, 1, 500, 'none', true, true, null);\n    const sb = new StringBuilder(2000);\n    const renderOutput = renderViewLine(renderLineInput, sb);\n    let newLine;\n    if (_ttPolicy) {\n      newLine = _ttPolicy.createHTML(sb.build());\n    } else {\n      newLine = sb.build();\n    }\n    const lineHTMLNode = document.createElement('span');\n    lineHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n    lineHTMLNode.setAttribute(STICKY_IS_LINE_ATTR, '');\n    lineHTMLNode.setAttribute('role', 'listitem');\n    lineHTMLNode.tabIndex = 0;\n    lineHTMLNode.className = 'sticky-line-content';\n    lineHTMLNode.classList.add(`stickyLine${line}`);\n    lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n    lineHTMLNode.innerHTML = newLine;\n    const lineNumberHTMLNode = document.createElement('span');\n    lineNumberHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n    lineNumberHTMLNode.setAttribute(STICKY_IS_LINE_NUMBER_ATTR, '');\n    lineNumberHTMLNode.className = 'sticky-line-number';\n    lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n    const lineNumbersWidth = layoutInfo.contentLeft;\n    lineNumberHTMLNode.style.width = `${lineNumbersWidth}px`;\n    const innerLineNumberHTML = document.createElement('span');\n    if (lineNumberOption.renderType === 1 /* RenderLineNumbersType.On */ || lineNumberOption.renderType === 3 /* RenderLineNumbersType.Interval */ && line % 10 === 0) {\n      innerLineNumberHTML.innerText = line.toString();\n    } else if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n      innerLineNumberHTML.innerText = Math.abs(line - this._editor.getPosition().lineNumber).toString();\n    }\n    innerLineNumberHTML.className = 'sticky-line-number-inner';\n    innerLineNumberHTML.style.lineHeight = `${this._lineHeight}px`;\n    innerLineNumberHTML.style.width = `${layoutInfo.lineNumbersWidth}px`;\n    innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft}px`;\n    lineNumberHTMLNode.appendChild(innerLineNumberHTML);\n    const foldingIcon = this._renderFoldingIconForLine(foldingModel, line);\n    if (foldingIcon) {\n      lineNumberHTMLNode.appendChild(foldingIcon.domNode);\n    }\n    this._editor.applyFontInfo(lineHTMLNode);\n    this._editor.applyFontInfo(innerLineNumberHTML);\n    lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n    lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n    lineNumberHTMLNode.style.height = `${this._lineHeight}px`;\n    lineHTMLNode.style.height = `${this._lineHeight}px`;\n    const renderedLine = new RenderedStickyLine(index, line, lineHTMLNode, lineNumberHTMLNode, foldingIcon, renderOutput.characterMapping, lineHTMLNode.scrollWidth);\n    return this._updateTopAndZIndexOfStickyLine(renderedLine);\n  }\n  _updateTopAndZIndexOfStickyLine(stickyLine) {\n    var _a;\n    const index = stickyLine.index;\n    const lineHTMLNode = stickyLine.lineDomNode;\n    const lineNumberHTMLNode = stickyLine.lineNumberDomNode;\n    const isLastLine = index === this._lineNumbers.length - 1;\n    const lastLineZIndex = '0';\n    const intermediateLineZIndex = '1';\n    lineHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n    lineNumberHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n    const lastLineTop = `${index * this._lineHeight + this._lastLineRelativePosition + (((_a = stickyLine.foldingIcon) === null || _a === void 0 ? void 0 : _a.isCollapsed) ? 1 : 0)}px`;\n    const intermediateLineTop = `${index * this._lineHeight}px`;\n    lineHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n    lineNumberHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n    return stickyLine;\n  }\n  _renderFoldingIconForLine(foldingModel, line) {\n    const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n    if (!foldingModel || showFoldingControls === 'never') {\n      return;\n    }\n    const foldingRegions = foldingModel.regions;\n    const indexOfFoldingRegion = foldingRegions.findRange(line);\n    const startLineNumber = foldingRegions.getStartLineNumber(indexOfFoldingRegion);\n    const isFoldingScope = line === startLineNumber;\n    if (!isFoldingScope) {\n      return;\n    }\n    const isCollapsed = foldingRegions.isCollapsed(indexOfFoldingRegion);\n    const foldingIcon = new StickyFoldingIcon(isCollapsed, startLineNumber, foldingRegions.getEndLineNumber(indexOfFoldingRegion), this._lineHeight);\n    foldingIcon.setVisible(this._isOnGlyphMargin ? true : isCollapsed || showFoldingControls === 'always');\n    foldingIcon.domNode.setAttribute(STICKY_IS_FOLDING_ICON_ATTR, '');\n    return foldingIcon;\n  }\n  getId() {\n    return 'editor.contrib.stickyScrollWidget';\n  }\n  getDomNode() {\n    return this._rootDomNode;\n  }\n  getPosition() {\n    return {\n      preference: 2 /* OverlayWidgetPositionPreference.TOP_CENTER */,\n      stackOridinal: 10\n    };\n  }\n  getMinContentWidthInPx() {\n    return this._minContentWidthInPx;\n  }\n  focusLineWithIndex(index) {\n    if (0 <= index && index < this._renderedStickyLines.length) {\n      this._renderedStickyLines[index].lineDomNode.focus();\n    }\n  }\n  /**\n   * Given a leaf dom node, tries to find the editor position.\n   */\n  getEditorPositionFromNode(spanDomNode) {\n    if (!spanDomNode || spanDomNode.children.length > 0) {\n      // This is not a leaf node\n      return null;\n    }\n    const renderedStickyLine = this._getRenderedStickyLineFromChildDomNode(spanDomNode);\n    if (!renderedStickyLine) {\n      return null;\n    }\n    const column = getColumnOfNodeOffset(renderedStickyLine.characterMapping, spanDomNode, 0);\n    return new Position(renderedStickyLine.lineNumber, column);\n  }\n  getLineNumberFromChildDomNode(domNode) {\n    var _a, _b;\n    return (_b = (_a = this._getRenderedStickyLineFromChildDomNode(domNode)) === null || _a === void 0 ? void 0 : _a.lineNumber) !== null && _b !== void 0 ? _b : null;\n  }\n  _getRenderedStickyLineFromChildDomNode(domNode) {\n    const index = this.getLineIndexFromChildDomNode(domNode);\n    if (index === null || index < 0 || index >= this._renderedStickyLines.length) {\n      return null;\n    }\n    return this._renderedStickyLines[index];\n  }\n  /**\n   * Given a child dom node, tries to find the line number attribute that was stored in the node.\n   * @returns the attribute value or null if none is found.\n   */\n  getLineIndexFromChildDomNode(domNode) {\n    const lineIndex = this._getAttributeValue(domNode, STICKY_INDEX_ATTR);\n    return lineIndex ? parseInt(lineIndex, 10) : null;\n  }\n  /**\n   * Given a child dom node, tries to find if it is (contained in) a sticky line.\n   * @returns a boolean.\n   */\n  isInStickyLine(domNode) {\n    const isInLine = this._getAttributeValue(domNode, STICKY_IS_LINE_ATTR);\n    return isInLine !== undefined;\n  }\n  /**\n   * Given a child dom node, tries to find if this dom node is (contained in) a sticky folding icon.\n   * @returns a boolean.\n   */\n  isInFoldingIconDomNode(domNode) {\n    const isInFoldingIcon = this._getAttributeValue(domNode, STICKY_IS_FOLDING_ICON_ATTR);\n    return isInFoldingIcon !== undefined;\n  }\n  /**\n   * Given the dom node, finds if it or its parent sequence contains the given attribute.\n   * @returns the attribute value or undefined.\n   */\n  _getAttributeValue(domNode, attribute) {\n    while (domNode && domNode !== this._rootDomNode) {\n      const line = domNode.getAttribute(attribute);\n      if (line !== null) {\n        return line;\n      }\n      domNode = domNode.parentElement;\n    }\n    return;\n  }\n}\nclass RenderedStickyLine {\n  constructor(index, lineNumber, lineDomNode, lineNumberDomNode, foldingIcon, characterMapping, scrollWidth) {\n    this.index = index;\n    this.lineNumber = lineNumber;\n    this.lineDomNode = lineDomNode;\n    this.lineNumberDomNode = lineNumberDomNode;\n    this.foldingIcon = foldingIcon;\n    this.characterMapping = characterMapping;\n    this.scrollWidth = scrollWidth;\n  }\n}\nclass StickyFoldingIcon {\n  constructor(isCollapsed, foldingStartLine, foldingEndLine, dimension) {\n    this.isCollapsed = isCollapsed;\n    this.foldingStartLine = foldingStartLine;\n    this.foldingEndLine = foldingEndLine;\n    this.dimension = dimension;\n    this.domNode = document.createElement('div');\n    this.domNode.style.width = `${dimension}px`;\n    this.domNode.style.height = `${dimension}px`;\n    this.domNode.className = ThemeIcon.asClassName(isCollapsed ? foldingCollapsedIcon : foldingExpandedIcon);\n  }\n  setVisible(visible) {\n    this.domNode.style.cursor = visible ? 'pointer' : 'default';\n    this.domNode.style.opacity = visible ? '1' : '0';\n  }\n}","map":{"version":3,"names":["dom","createTrustedTypesPolicy","equals","Disposable","DisposableStore","ThemeIcon","getColumnOfNodeOffset","EmbeddedCodeEditorWidget","Position","StringBuilder","LineDecoration","RenderLineInput","renderViewLine","foldingCollapsedIcon","foldingExpandedIcon","StickyScrollWidgetState","constructor","startLineNumbers","endLineNumbers","lastLineRelativePosition","showEndForLine","arguments","length","undefined","other","_ttPolicy","createHTML","value","STICKY_INDEX_ATTR","STICKY_IS_LINE_ATTR","STICKY_IS_LINE_NUMBER_ATTR","STICKY_IS_FOLDING_ICON_ATTR","StickyScrollWidget","_editor","_foldingIconStore","_rootDomNode","document","createElement","_lineNumbersDomNode","_linesDomNodeScrollable","_linesDomNode","_lineHeight","getOption","_renderedStickyLines","_lineNumbers","_lastLineRelativePosition","_minContentWidthInPx","_isOnGlyphMargin","className","setAttribute","appendChild","classList","toggle","updateScrollLeftPosition","style","left","scrollWithEditor","getScrollLeft","_register","onDidChangeConfiguration","e","hasChanged","onDidScrollChange","scrollLeftChanged","scrollWidthChanged","_updateWidgetWidth","onDidChangeModel","onDidLayoutChange","lineNumbers","lineNumberCount","getRenderedStickyLine","lineNumber","find","stickyLine","getCurrentLines","setState","_state","foldingModel","_rebuildFromLine","_previousState","isWidgetHeightZero","_isWidgetHeightZero","state","rebuildFromLine","_findLineToRebuildWidgetFrom","_renderRootNode","futureWidgetHeight","previousState","indexOfLinesAlreadyRendered","findIndex","startLineNumber","includes","layoutInfo","getLayoutInfo","lineNumbersWidth","contentLeft","width","setProperty","getScrollWidth","verticalScrollbarWidth","_clearStickyLinesFromLine","clearFromLine","clear","i","lineNumberDomNode","remove","lineDomNode","slice","display","_useFoldingOpacityTransition","requireTransitions","_setFoldingIconsVisibility","allVisible","line","foldingIcon","setVisible","isCollapsed","_updateTopAndZIndexOfStickyLine","linesToRender","index","entries","_renderChildNode","push","_setFoldingHoverListeners","widgetHeight","height","marginLeft","Math","max","map","l","scrollWidth","layoutOverlayWidget","showFoldingControls","add","addDisposableListener","EventType","MOUSE_ENTER","MOUSE_LEAVE","viewModel","_getViewModel","viewLineNumber","coordinatesConverter","convertModelPositionToViewPosition","lineRenderingData","getViewLineRenderingData","lineNumberOption","actualInlineDecorations","filter","inlineDecorations","minColumn","maxColumn","err","renderLineInput","content","continuesWithWrappedLine","isBasicASCII","containsRTL","tokens","tabSize","startVisibleColumn","sb","renderOutput","newLine","build","lineHTMLNode","String","tabIndex","lineHeight","innerHTML","lineNumberHTMLNode","innerLineNumberHTML","renderType","innerText","toString","abs","getPosition","paddingLeft","lineNumbersLeft","_renderFoldingIconForLine","domNode","applyFontInfo","renderedLine","RenderedStickyLine","characterMapping","_a","isLastLine","lastLineZIndex","intermediateLineZIndex","zIndex","lastLineTop","intermediateLineTop","top","foldingRegions","regions","indexOfFoldingRegion","findRange","getStartLineNumber","isFoldingScope","StickyFoldingIcon","getEndLineNumber","getId","getDomNode","preference","stackOridinal","getMinContentWidthInPx","focusLineWithIndex","focus","getEditorPositionFromNode","spanDomNode","children","renderedStickyLine","_getRenderedStickyLineFromChildDomNode","column","getLineNumberFromChildDomNode","_b","getLineIndexFromChildDomNode","lineIndex","_getAttributeValue","parseInt","isInStickyLine","isInLine","isInFoldingIconDomNode","isInFoldingIcon","attribute","getAttribute","parentElement","foldingStartLine","foldingEndLine","dimension","asClassName","visible","cursor","opacity"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './stickyScroll.css';\nimport { getColumnOfNodeOffset } from '../../../browser/viewParts/lines/viewLine.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { Position } from '../../../common/core/position.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { foldingCollapsedIcon, foldingExpandedIcon } from '../../folding/browser/foldingDecorations.js';\nexport class StickyScrollWidgetState {\n    constructor(startLineNumbers, endLineNumbers, lastLineRelativePosition, showEndForLine = null) {\n        this.startLineNumbers = startLineNumbers;\n        this.endLineNumbers = endLineNumbers;\n        this.lastLineRelativePosition = lastLineRelativePosition;\n        this.showEndForLine = showEndForLine;\n    }\n    equals(other) {\n        return !!other\n            && this.lastLineRelativePosition === other.lastLineRelativePosition\n            && this.showEndForLine === other.showEndForLine\n            && equals(this.startLineNumbers, other.startLineNumbers)\n            && equals(this.endLineNumbers, other.endLineNumbers);\n    }\n}\nconst _ttPolicy = createTrustedTypesPolicy('stickyScrollViewLayer', { createHTML: value => value });\nconst STICKY_INDEX_ATTR = 'data-sticky-line-index';\nconst STICKY_IS_LINE_ATTR = 'data-sticky-is-line';\nconst STICKY_IS_LINE_NUMBER_ATTR = 'data-sticky-is-line-number';\nconst STICKY_IS_FOLDING_ICON_ATTR = 'data-sticky-is-folding-icon';\nexport class StickyScrollWidget extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._foldingIconStore = new DisposableStore();\n        this._rootDomNode = document.createElement('div');\n        this._lineNumbersDomNode = document.createElement('div');\n        this._linesDomNodeScrollable = document.createElement('div');\n        this._linesDomNode = document.createElement('div');\n        this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n        this._renderedStickyLines = [];\n        this._lineNumbers = [];\n        this._lastLineRelativePosition = 0;\n        this._minContentWidthInPx = 0;\n        this._isOnGlyphMargin = false;\n        this._lineNumbersDomNode.className = 'sticky-widget-line-numbers';\n        this._lineNumbersDomNode.setAttribute('role', 'none');\n        this._linesDomNode.className = 'sticky-widget-lines';\n        this._linesDomNode.setAttribute('role', 'list');\n        this._linesDomNodeScrollable.className = 'sticky-widget-lines-scrollable';\n        this._linesDomNodeScrollable.appendChild(this._linesDomNode);\n        this._rootDomNode.className = 'sticky-widget';\n        this._rootDomNode.classList.toggle('peek', _editor instanceof EmbeddedCodeEditorWidget);\n        this._rootDomNode.appendChild(this._lineNumbersDomNode);\n        this._rootDomNode.appendChild(this._linesDomNodeScrollable);\n        const updateScrollLeftPosition = () => {\n            this._linesDomNode.style.left = this._editor.getOption(115 /* EditorOption.stickyScroll */).scrollWithEditor ? `-${this._editor.getScrollLeft()}px` : '0px';\n        };\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(115 /* EditorOption.stickyScroll */)) {\n                updateScrollLeftPosition();\n            }\n            if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n                this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n            }\n        }));\n        this._register(this._editor.onDidScrollChange((e) => {\n            if (e.scrollLeftChanged) {\n                updateScrollLeftPosition();\n            }\n            if (e.scrollWidthChanged) {\n                this._updateWidgetWidth();\n            }\n        }));\n        this._register(this._editor.onDidChangeModel(() => {\n            updateScrollLeftPosition();\n            this._updateWidgetWidth();\n        }));\n        this._register(this._foldingIconStore);\n        updateScrollLeftPosition();\n        this._register(this._editor.onDidLayoutChange((e) => {\n            this._updateWidgetWidth();\n        }));\n        this._updateWidgetWidth();\n    }\n    get lineNumbers() {\n        return this._lineNumbers;\n    }\n    get lineNumberCount() {\n        return this._lineNumbers.length;\n    }\n    getRenderedStickyLine(lineNumber) {\n        return this._renderedStickyLines.find(stickyLine => stickyLine.lineNumber === lineNumber);\n    }\n    getCurrentLines() {\n        return this._lineNumbers;\n    }\n    setState(_state, foldingModel, _rebuildFromLine) {\n        if (_rebuildFromLine === undefined &&\n            ((!this._previousState && !_state) || (this._previousState && this._previousState.equals(_state)))) {\n            return;\n        }\n        const isWidgetHeightZero = this._isWidgetHeightZero(_state);\n        const state = isWidgetHeightZero ? undefined : _state;\n        const rebuildFromLine = isWidgetHeightZero ? 0 : this._findLineToRebuildWidgetFrom(_state, _rebuildFromLine);\n        this._renderRootNode(state, foldingModel, rebuildFromLine);\n        this._previousState = _state;\n    }\n    _isWidgetHeightZero(state) {\n        if (!state) {\n            return true;\n        }\n        const futureWidgetHeight = state.startLineNumbers.length * this._lineHeight + state.lastLineRelativePosition;\n        if (futureWidgetHeight > 0) {\n            this._lastLineRelativePosition = state.lastLineRelativePosition;\n            const lineNumbers = [...state.startLineNumbers];\n            if (state.showEndForLine !== null) {\n                lineNumbers[state.showEndForLine] = state.endLineNumbers[state.showEndForLine];\n            }\n            this._lineNumbers = lineNumbers;\n        }\n        else {\n            this._lastLineRelativePosition = 0;\n            this._lineNumbers = [];\n        }\n        return futureWidgetHeight === 0;\n    }\n    _findLineToRebuildWidgetFrom(state, _rebuildFromLine) {\n        if (!state || !this._previousState) {\n            return 0;\n        }\n        if (_rebuildFromLine !== undefined) {\n            return _rebuildFromLine;\n        }\n        const previousState = this._previousState;\n        const indexOfLinesAlreadyRendered = state.startLineNumbers.findIndex(startLineNumber => !previousState.startLineNumbers.includes(startLineNumber));\n        return (indexOfLinesAlreadyRendered === -1) ? 0 : indexOfLinesAlreadyRendered;\n    }\n    _updateWidgetWidth() {\n        const layoutInfo = this._editor.getLayoutInfo();\n        const lineNumbersWidth = layoutInfo.contentLeft;\n        this._lineNumbersDomNode.style.width = `${lineNumbersWidth}px`;\n        this._linesDomNodeScrollable.style.setProperty('--vscode-editorStickyScroll-scrollableWidth', `${this._editor.getScrollWidth() - layoutInfo.verticalScrollbarWidth}px`);\n        this._rootDomNode.style.width = `${layoutInfo.width - layoutInfo.verticalScrollbarWidth}px`;\n    }\n    _clearStickyLinesFromLine(clearFromLine) {\n        this._foldingIconStore.clear();\n        // Removing only the lines that need to be rerendered\n        for (let i = clearFromLine; i < this._renderedStickyLines.length; i++) {\n            const stickyLine = this._renderedStickyLines[i];\n            stickyLine.lineNumberDomNode.remove();\n            stickyLine.lineDomNode.remove();\n        }\n        // Keep the lines that need to be updated\n        this._renderedStickyLines = this._renderedStickyLines.slice(0, clearFromLine);\n        this._rootDomNode.style.display = 'none';\n    }\n    _useFoldingOpacityTransition(requireTransitions) {\n        this._lineNumbersDomNode.style.setProperty('--vscode-editorStickyScroll-foldingOpacityTransition', `opacity ${requireTransitions ? 0.5 : 0}s`);\n    }\n    _setFoldingIconsVisibility(allVisible) {\n        for (const line of this._renderedStickyLines) {\n            const foldingIcon = line.foldingIcon;\n            if (!foldingIcon) {\n                continue;\n            }\n            foldingIcon.setVisible(allVisible ? true : foldingIcon.isCollapsed);\n        }\n    }\n    async _renderRootNode(state, foldingModel, rebuildFromLine) {\n        this._clearStickyLinesFromLine(rebuildFromLine);\n        if (!state) {\n            return;\n        }\n        // For existing sticky lines update the top and z-index\n        for (const stickyLine of this._renderedStickyLines) {\n            this._updateTopAndZIndexOfStickyLine(stickyLine);\n        }\n        // For new sticky lines\n        const layoutInfo = this._editor.getLayoutInfo();\n        const linesToRender = this._lineNumbers.slice(rebuildFromLine);\n        for (const [index, line] of linesToRender.entries()) {\n            const stickyLine = this._renderChildNode(index + rebuildFromLine, line, foldingModel, layoutInfo);\n            if (!stickyLine) {\n                continue;\n            }\n            this._linesDomNode.appendChild(stickyLine.lineDomNode);\n            this._lineNumbersDomNode.appendChild(stickyLine.lineNumberDomNode);\n            this._renderedStickyLines.push(stickyLine);\n        }\n        if (foldingModel) {\n            this._setFoldingHoverListeners();\n            this._useFoldingOpacityTransition(!this._isOnGlyphMargin);\n        }\n        const widgetHeight = this._lineNumbers.length * this._lineHeight + this._lastLineRelativePosition;\n        this._rootDomNode.style.display = 'block';\n        this._lineNumbersDomNode.style.height = `${widgetHeight}px`;\n        this._linesDomNodeScrollable.style.height = `${widgetHeight}px`;\n        this._rootDomNode.style.height = `${widgetHeight}px`;\n        this._rootDomNode.style.marginLeft = '0px';\n        this._minContentWidthInPx = Math.max(...this._renderedStickyLines.map(l => l.scrollWidth)) + layoutInfo.verticalScrollbarWidth;\n        this._editor.layoutOverlayWidget(this);\n    }\n    _setFoldingHoverListeners() {\n        const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n        if (showFoldingControls !== 'mouseover') {\n            return;\n        }\n        this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_ENTER, () => {\n            this._isOnGlyphMargin = true;\n            this._setFoldingIconsVisibility(true);\n        }));\n        this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_LEAVE, () => {\n            this._isOnGlyphMargin = false;\n            this._useFoldingOpacityTransition(true);\n            this._setFoldingIconsVisibility(false);\n        }));\n    }\n    _renderChildNode(index, line, foldingModel, layoutInfo) {\n        const viewModel = this._editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        const viewLineNumber = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(line, 1)).lineNumber;\n        const lineRenderingData = viewModel.getViewLineRenderingData(viewLineNumber);\n        const lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n        let actualInlineDecorations;\n        try {\n            actualInlineDecorations = LineDecoration.filter(lineRenderingData.inlineDecorations, viewLineNumber, lineRenderingData.minColumn, lineRenderingData.maxColumn);\n        }\n        catch (err) {\n            actualInlineDecorations = [];\n        }\n        const renderLineInput = new RenderLineInput(true, true, lineRenderingData.content, lineRenderingData.continuesWithWrappedLine, lineRenderingData.isBasicASCII, lineRenderingData.containsRTL, 0, lineRenderingData.tokens, actualInlineDecorations, lineRenderingData.tabSize, lineRenderingData.startVisibleColumn, 1, 1, 1, 500, 'none', true, true, null);\n        const sb = new StringBuilder(2000);\n        const renderOutput = renderViewLine(renderLineInput, sb);\n        let newLine;\n        if (_ttPolicy) {\n            newLine = _ttPolicy.createHTML(sb.build());\n        }\n        else {\n            newLine = sb.build();\n        }\n        const lineHTMLNode = document.createElement('span');\n        lineHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n        lineHTMLNode.setAttribute(STICKY_IS_LINE_ATTR, '');\n        lineHTMLNode.setAttribute('role', 'listitem');\n        lineHTMLNode.tabIndex = 0;\n        lineHTMLNode.className = 'sticky-line-content';\n        lineHTMLNode.classList.add(`stickyLine${line}`);\n        lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineHTMLNode.innerHTML = newLine;\n        const lineNumberHTMLNode = document.createElement('span');\n        lineNumberHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n        lineNumberHTMLNode.setAttribute(STICKY_IS_LINE_NUMBER_ATTR, '');\n        lineNumberHTMLNode.className = 'sticky-line-number';\n        lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        const lineNumbersWidth = layoutInfo.contentLeft;\n        lineNumberHTMLNode.style.width = `${lineNumbersWidth}px`;\n        const innerLineNumberHTML = document.createElement('span');\n        if (lineNumberOption.renderType === 1 /* RenderLineNumbersType.On */ || lineNumberOption.renderType === 3 /* RenderLineNumbersType.Interval */ && line % 10 === 0) {\n            innerLineNumberHTML.innerText = line.toString();\n        }\n        else if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n            innerLineNumberHTML.innerText = Math.abs(line - this._editor.getPosition().lineNumber).toString();\n        }\n        innerLineNumberHTML.className = 'sticky-line-number-inner';\n        innerLineNumberHTML.style.lineHeight = `${this._lineHeight}px`;\n        innerLineNumberHTML.style.width = `${layoutInfo.lineNumbersWidth}px`;\n        innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft}px`;\n        lineNumberHTMLNode.appendChild(innerLineNumberHTML);\n        const foldingIcon = this._renderFoldingIconForLine(foldingModel, line);\n        if (foldingIcon) {\n            lineNumberHTMLNode.appendChild(foldingIcon.domNode);\n        }\n        this._editor.applyFontInfo(lineHTMLNode);\n        this._editor.applyFontInfo(innerLineNumberHTML);\n        lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineNumberHTMLNode.style.height = `${this._lineHeight}px`;\n        lineHTMLNode.style.height = `${this._lineHeight}px`;\n        const renderedLine = new RenderedStickyLine(index, line, lineHTMLNode, lineNumberHTMLNode, foldingIcon, renderOutput.characterMapping, lineHTMLNode.scrollWidth);\n        return this._updateTopAndZIndexOfStickyLine(renderedLine);\n    }\n    _updateTopAndZIndexOfStickyLine(stickyLine) {\n        var _a;\n        const index = stickyLine.index;\n        const lineHTMLNode = stickyLine.lineDomNode;\n        const lineNumberHTMLNode = stickyLine.lineNumberDomNode;\n        const isLastLine = index === this._lineNumbers.length - 1;\n        const lastLineZIndex = '0';\n        const intermediateLineZIndex = '1';\n        lineHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n        lineNumberHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n        const lastLineTop = `${index * this._lineHeight + this._lastLineRelativePosition + (((_a = stickyLine.foldingIcon) === null || _a === void 0 ? void 0 : _a.isCollapsed) ? 1 : 0)}px`;\n        const intermediateLineTop = `${index * this._lineHeight}px`;\n        lineHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n        lineNumberHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n        return stickyLine;\n    }\n    _renderFoldingIconForLine(foldingModel, line) {\n        const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n        if (!foldingModel || showFoldingControls === 'never') {\n            return;\n        }\n        const foldingRegions = foldingModel.regions;\n        const indexOfFoldingRegion = foldingRegions.findRange(line);\n        const startLineNumber = foldingRegions.getStartLineNumber(indexOfFoldingRegion);\n        const isFoldingScope = line === startLineNumber;\n        if (!isFoldingScope) {\n            return;\n        }\n        const isCollapsed = foldingRegions.isCollapsed(indexOfFoldingRegion);\n        const foldingIcon = new StickyFoldingIcon(isCollapsed, startLineNumber, foldingRegions.getEndLineNumber(indexOfFoldingRegion), this._lineHeight);\n        foldingIcon.setVisible(this._isOnGlyphMargin ? true : (isCollapsed || showFoldingControls === 'always'));\n        foldingIcon.domNode.setAttribute(STICKY_IS_FOLDING_ICON_ATTR, '');\n        return foldingIcon;\n    }\n    getId() {\n        return 'editor.contrib.stickyScrollWidget';\n    }\n    getDomNode() {\n        return this._rootDomNode;\n    }\n    getPosition() {\n        return {\n            preference: 2 /* OverlayWidgetPositionPreference.TOP_CENTER */,\n            stackOridinal: 10,\n        };\n    }\n    getMinContentWidthInPx() {\n        return this._minContentWidthInPx;\n    }\n    focusLineWithIndex(index) {\n        if (0 <= index && index < this._renderedStickyLines.length) {\n            this._renderedStickyLines[index].lineDomNode.focus();\n        }\n    }\n    /**\n     * Given a leaf dom node, tries to find the editor position.\n     */\n    getEditorPositionFromNode(spanDomNode) {\n        if (!spanDomNode || spanDomNode.children.length > 0) {\n            // This is not a leaf node\n            return null;\n        }\n        const renderedStickyLine = this._getRenderedStickyLineFromChildDomNode(spanDomNode);\n        if (!renderedStickyLine) {\n            return null;\n        }\n        const column = getColumnOfNodeOffset(renderedStickyLine.characterMapping, spanDomNode, 0);\n        return new Position(renderedStickyLine.lineNumber, column);\n    }\n    getLineNumberFromChildDomNode(domNode) {\n        var _a, _b;\n        return (_b = (_a = this._getRenderedStickyLineFromChildDomNode(domNode)) === null || _a === void 0 ? void 0 : _a.lineNumber) !== null && _b !== void 0 ? _b : null;\n    }\n    _getRenderedStickyLineFromChildDomNode(domNode) {\n        const index = this.getLineIndexFromChildDomNode(domNode);\n        if (index === null || index < 0 || index >= this._renderedStickyLines.length) {\n            return null;\n        }\n        return this._renderedStickyLines[index];\n    }\n    /**\n     * Given a child dom node, tries to find the line number attribute that was stored in the node.\n     * @returns the attribute value or null if none is found.\n     */\n    getLineIndexFromChildDomNode(domNode) {\n        const lineIndex = this._getAttributeValue(domNode, STICKY_INDEX_ATTR);\n        return lineIndex ? parseInt(lineIndex, 10) : null;\n    }\n    /**\n     * Given a child dom node, tries to find if it is (contained in) a sticky line.\n     * @returns a boolean.\n     */\n    isInStickyLine(domNode) {\n        const isInLine = this._getAttributeValue(domNode, STICKY_IS_LINE_ATTR);\n        return isInLine !== undefined;\n    }\n    /**\n     * Given a child dom node, tries to find if this dom node is (contained in) a sticky folding icon.\n     * @returns a boolean.\n     */\n    isInFoldingIconDomNode(domNode) {\n        const isInFoldingIcon = this._getAttributeValue(domNode, STICKY_IS_FOLDING_ICON_ATTR);\n        return isInFoldingIcon !== undefined;\n    }\n    /**\n     * Given the dom node, finds if it or its parent sequence contains the given attribute.\n     * @returns the attribute value or undefined.\n     */\n    _getAttributeValue(domNode, attribute) {\n        while (domNode && domNode !== this._rootDomNode) {\n            const line = domNode.getAttribute(attribute);\n            if (line !== null) {\n                return line;\n            }\n            domNode = domNode.parentElement;\n        }\n        return;\n    }\n}\nclass RenderedStickyLine {\n    constructor(index, lineNumber, lineDomNode, lineNumberDomNode, foldingIcon, characterMapping, scrollWidth) {\n        this.index = index;\n        this.lineNumber = lineNumber;\n        this.lineDomNode = lineDomNode;\n        this.lineNumberDomNode = lineNumberDomNode;\n        this.foldingIcon = foldingIcon;\n        this.characterMapping = characterMapping;\n        this.scrollWidth = scrollWidth;\n    }\n}\nclass StickyFoldingIcon {\n    constructor(isCollapsed, foldingStartLine, foldingEndLine, dimension) {\n        this.isCollapsed = isCollapsed;\n        this.foldingStartLine = foldingStartLine;\n        this.foldingEndLine = foldingEndLine;\n        this.dimension = dimension;\n        this.domNode = document.createElement('div');\n        this.domNode.style.width = `${dimension}px`;\n        this.domNode.style.height = `${dimension}px`;\n        this.domNode.className = ThemeIcon.asClassName(isCollapsed ? foldingCollapsedIcon : foldingExpandedIcon);\n    }\n    setVisible(visible) {\n        this.domNode.style.cursor = visible ? 'pointer' : 'default';\n        this.domNode.style.opacity = visible ? '1' : '0';\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}