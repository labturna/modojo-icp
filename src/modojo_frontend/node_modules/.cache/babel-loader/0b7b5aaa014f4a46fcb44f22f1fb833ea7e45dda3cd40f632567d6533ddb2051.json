{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nclass SimplePasteAndDropProvider {\n  async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n    const edit = await this.getEdit(dataTransfer, token);\n    if (!edit) {\n      return undefined;\n    }\n    return {\n      dispose() {},\n      edits: [{\n        insertText: edit.insertText,\n        title: edit.title,\n        kind: edit.kind,\n        handledMimeType: edit.handledMimeType,\n        yieldTo: edit.yieldTo\n      }]\n    };\n  }\n  async provideDocumentDropEdits(_model, _position, dataTransfer, token) {\n    const edit = await this.getEdit(dataTransfer, token);\n    return edit ? [{\n      insertText: edit.insertText,\n      title: edit.title,\n      kind: edit.kind,\n      handledMimeType: edit.handledMimeType,\n      yieldTo: edit.yieldTo\n    }] : undefined;\n  }\n}\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n  constructor() {\n    super(...arguments);\n    this.kind = DefaultTextPasteOrDropEditProvider.kind;\n    this.dropMimeTypes = [Mimes.text];\n    this.pasteMimeTypes = [Mimes.text];\n  }\n  async getEdit(dataTransfer, _token) {\n    const textEntry = dataTransfer.get(Mimes.text);\n    if (!textEntry) {\n      return;\n    }\n    // Suppress if there's also a uriList entry.\n    // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n    if (dataTransfer.has(Mimes.uriList)) {\n      return;\n    }\n    const insertText = await textEntry.asString();\n    return {\n      handledMimeType: Mimes.text,\n      title: localize('text.label', \"Insert Plain Text\"),\n      insertText,\n      kind: this.kind\n    };\n  }\n}\nDefaultTextPasteOrDropEditProvider.id = 'text';\nDefaultTextPasteOrDropEditProvider.kind = new HierarchicalKind('text.plain');\nclass PathProvider extends SimplePasteAndDropProvider {\n  constructor() {\n    super(...arguments);\n    this.kind = new HierarchicalKind('uri.absolute');\n    this.dropMimeTypes = [Mimes.uriList];\n    this.pasteMimeTypes = [Mimes.uriList];\n  }\n  async getEdit(dataTransfer, token) {\n    const entries = await extractUriList(dataTransfer);\n    if (!entries.length || token.isCancellationRequested) {\n      return;\n    }\n    let uriCount = 0;\n    const insertText = entries.map(_ref => {\n      let {\n        uri,\n        originalText\n      } = _ref;\n      if (uri.scheme === Schemas.file) {\n        return uri.fsPath;\n      } else {\n        uriCount++;\n        return originalText;\n      }\n    }).join(' ');\n    let label;\n    if (uriCount > 0) {\n      // Dropping at least one generic uri (such as https) so use most generic label\n      label = entries.length > 1 ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\") : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n    } else {\n      // All the paths are file paths\n      label = entries.length > 1 ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\") : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n    }\n    return {\n      handledMimeType: Mimes.uriList,\n      insertText,\n      title: label,\n      kind: this.kind\n    };\n  }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n  constructor(_workspaceContextService) {\n    super();\n    this._workspaceContextService = _workspaceContextService;\n    this.kind = new HierarchicalKind('uri.relative');\n    this.dropMimeTypes = [Mimes.uriList];\n    this.pasteMimeTypes = [Mimes.uriList];\n  }\n  async getEdit(dataTransfer, token) {\n    const entries = await extractUriList(dataTransfer);\n    if (!entries.length || token.isCancellationRequested) {\n      return;\n    }\n    const relativeUris = coalesce(entries.map(_ref2 => {\n      let {\n        uri\n      } = _ref2;\n      const root = this._workspaceContextService.getWorkspaceFolder(uri);\n      return root ? relativePath(root.uri, uri) : undefined;\n    }));\n    if (!relativeUris.length) {\n      return;\n    }\n    return {\n      handledMimeType: Mimes.uriList,\n      insertText: relativeUris.join(' '),\n      title: entries.length > 1 ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\") : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n      kind: this.kind\n    };\n  }\n};\nRelativePathProvider = __decorate([__param(0, IWorkspaceContextService)], RelativePathProvider);\nclass PasteHtmlProvider {\n  constructor() {\n    this.kind = new HierarchicalKind('html');\n    this.pasteMimeTypes = ['text/html'];\n    this._yieldTo = [{\n      mimeType: Mimes.text\n    }];\n  }\n  async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n    var _a;\n    if (context.triggerKind !== DocumentPasteTriggerKind.PasteAs && !((_a = context.only) === null || _a === void 0 ? void 0 : _a.contains(this.kind))) {\n      return;\n    }\n    const entry = dataTransfer.get('text/html');\n    const htmlText = await (entry === null || entry === void 0 ? void 0 : entry.asString());\n    if (!htmlText || token.isCancellationRequested) {\n      return;\n    }\n    return {\n      dispose() {},\n      edits: [{\n        insertText: htmlText,\n        yieldTo: this._yieldTo,\n        title: localize('pasteHtmlLabel', 'Insert HTML'),\n        kind: this.kind\n      }]\n    };\n  }\n}\nasync function extractUriList(dataTransfer) {\n  const urlListEntry = dataTransfer.get(Mimes.uriList);\n  if (!urlListEntry) {\n    return [];\n  }\n  const strUriList = await urlListEntry.asString();\n  const entries = [];\n  for (const entry of UriList.parse(strUriList)) {\n    try {\n      entries.push({\n        uri: URI.parse(entry),\n        originalText: entry\n      });\n    } catch (_a) {\n      // noop\n    }\n  }\n  return entries;\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n  constructor(languageFeaturesService, workspaceContextService) {\n    super();\n    this._register(languageFeaturesService.documentDropEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n    this._register(languageFeaturesService.documentDropEditProvider.register('*', new PathProvider()));\n    this._register(languageFeaturesService.documentDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n  }\n};\nDefaultDropProvidersFeature = __decorate([__param(0, ILanguageFeaturesService), __param(1, IWorkspaceContextService)], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n  constructor(languageFeaturesService, workspaceContextService) {\n    super();\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PasteHtmlProvider()));\n  }\n};\nDefaultPasteProvidersFeature = __decorate([__param(0, ILanguageFeaturesService), __param(1, IWorkspaceContextService)], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","coalesce","UriList","HierarchicalKind","Disposable","Mimes","Schemas","relativePath","URI","DocumentPasteTriggerKind","ILanguageFeaturesService","localize","IWorkspaceContextService","SimplePasteAndDropProvider","provideDocumentPasteEdits","_model","_ranges","dataTransfer","context","token","edit","getEdit","undefined","dispose","edits","insertText","title","kind","handledMimeType","yieldTo","provideDocumentDropEdits","_position","DefaultTextPasteOrDropEditProvider","constructor","dropMimeTypes","text","pasteMimeTypes","_token","textEntry","get","has","uriList","asString","id","PathProvider","entries","extractUriList","isCancellationRequested","uriCount","map","_ref","uri","originalText","scheme","file","fsPath","join","label","RelativePathProvider","_workspaceContextService","relativeUris","_ref2","root","getWorkspaceFolder","PasteHtmlProvider","_yieldTo","mimeType","_a","triggerKind","PasteAs","only","contains","entry","htmlText","urlListEntry","strUriList","parse","push","DefaultDropProvidersFeature","languageFeaturesService","workspaceContextService","_register","documentDropEditProvider","register","DefaultPasteProvidersFeature","documentPasteEditProvider"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nclass SimplePasteAndDropProvider {\n    async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        if (!edit) {\n            return undefined;\n        }\n        return {\n            dispose() { },\n            edits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }]\n        };\n    }\n    async provideDocumentDropEdits(_model, _position, dataTransfer, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        return edit ? [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }] : undefined;\n    }\n}\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.kind = DefaultTextPasteOrDropEditProvider.kind;\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    async getEdit(dataTransfer, _token) {\n        const textEntry = dataTransfer.get(Mimes.text);\n        if (!textEntry) {\n            return;\n        }\n        // Suppress if there's also a uriList entry.\n        // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n        if (dataTransfer.has(Mimes.uriList)) {\n            return;\n        }\n        const insertText = await textEntry.asString();\n        return {\n            handledMimeType: Mimes.text,\n            title: localize('text.label', \"Insert Plain Text\"),\n            insertText,\n            kind: this.kind,\n        };\n    }\n}\nDefaultTextPasteOrDropEditProvider.id = 'text';\nDefaultTextPasteOrDropEditProvider.kind = new HierarchicalKind('text.plain');\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.kind = new HierarchicalKind('uri.absolute');\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        let uriCount = 0;\n        const insertText = entries\n            .map(({ uri, originalText }) => {\n            if (uri.scheme === Schemas.file) {\n                return uri.fsPath;\n            }\n            else {\n                uriCount++;\n                return originalText;\n            }\n        })\n            .join(' ');\n        let label;\n        if (uriCount > 0) {\n            // Dropping at least one generic uri (such as https) so use most generic label\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n        }\n        else {\n            // All the paths are file paths\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText,\n            title: label,\n            kind: this.kind,\n        };\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.kind = new HierarchicalKind('uri.relative');\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        const relativeUris = coalesce(entries.map(({ uri }) => {\n            const root = this._workspaceContextService.getWorkspaceFolder(uri);\n            return root ? relativePath(root.uri, uri) : undefined;\n        }));\n        if (!relativeUris.length) {\n            return;\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText: relativeUris.join(' '),\n            title: entries.length > 1\n                ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n            kind: this.kind,\n        };\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nclass PasteHtmlProvider {\n    constructor() {\n        this.kind = new HierarchicalKind('html');\n        this.pasteMimeTypes = ['text/html'];\n        this._yieldTo = [{ mimeType: Mimes.text }];\n    }\n    async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n        var _a;\n        if (context.triggerKind !== DocumentPasteTriggerKind.PasteAs && !((_a = context.only) === null || _a === void 0 ? void 0 : _a.contains(this.kind))) {\n            return;\n        }\n        const entry = dataTransfer.get('text/html');\n        const htmlText = await (entry === null || entry === void 0 ? void 0 : entry.asString());\n        if (!htmlText || token.isCancellationRequested) {\n            return;\n        }\n        return {\n            dispose() { },\n            edits: [{\n                    insertText: htmlText,\n                    yieldTo: this._yieldTo,\n                    title: localize('pasteHtmlLabel', 'Insert HTML'),\n                    kind: this.kind,\n                }],\n        };\n    }\n}\nasync function extractUriList(dataTransfer) {\n    const urlListEntry = dataTransfer.get(Mimes.uriList);\n    if (!urlListEntry) {\n        return [];\n    }\n    const strUriList = await urlListEntry.asString();\n    const entries = [];\n    for (const entry of UriList.parse(strUriList)) {\n        try {\n            entries.push({ uri: URI.parse(entry), originalText: entry });\n        }\n        catch (_a) {\n            // noop\n        }\n    }\n    return entries;\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PasteHtmlProvider()));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}