{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet isPseudo = typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0;\nconst DEFAULT_TAG = 'i-default';\nfunction _format(message, args) {\n  let result;\n  if (args.length === 0) {\n    result = message;\n  } else {\n    result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n      const index = rest[0];\n      const arg = args[index];\n      let result = match;\n      if (typeof arg === 'string') {\n        result = arg;\n      } else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n        result = String(arg);\n      }\n      return result;\n    });\n  }\n  if (isPseudo) {\n    // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n    result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n  }\n  return result;\n}\nfunction findLanguageForModule(config, name) {\n  let result = config[name];\n  if (result) {\n    return result;\n  }\n  result = config['*'];\n  if (result) {\n    return result;\n  }\n  return null;\n}\nfunction endWithSlash(path) {\n  if (path.charAt(path.length - 1) === '/') {\n    return path;\n  }\n  return path + '/';\n}\nasync function getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n  const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n  const res = await fetch(url);\n  if (res.ok) {\n    const messages = await res.json();\n    return messages;\n  }\n  throw new Error(`${res.status} - ${res.statusText}`);\n}\nfunction createScopedLocalize(scope) {\n  return function (idx, defaultValue) {\n    const restArgs = Array.prototype.slice.call(arguments, 2);\n    return _format(scope[idx], restArgs);\n  };\n}\nfunction createScopedLocalize2(scope) {\n  return function (idx, defaultValue) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return {\n      value: _format(scope[idx], args),\n      original: _format(defaultValue, args)\n    };\n  };\n}\n/**\n * @skipMangle\n */\nexport function localize(data, message) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n  return _format(message, args);\n}\n/**\n * @skipMangle\n */\nexport function localize2(data, message) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n  const original = _format(message, args);\n  return {\n    value: original,\n    original\n  };\n}\n/**\n * @skipMangle\n */\nexport function getConfiguredDefaultLocale(_) {\n  // This returns undefined because this implementation isn't used and is overwritten by the loader\n  // when loaded.\n  return undefined;\n}\n/**\n * @skipMangle\n */\nexport function setPseudoTranslation(value) {\n  isPseudo = value;\n}\n/**\n * Invoked in a built product at run-time\n * @skipMangle\n */\nexport function create(key, data) {\n  var _a;\n  return {\n    localize: createScopedLocalize(data[key]),\n    localize2: createScopedLocalize2(data[key]),\n    getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null && _a !== void 0 ? _a : _ => undefined\n  };\n}\n/**\n * Invoked by the loader at run-time\n * @skipMangle\n */\nexport function load(name, req, load, config) {\n  var _a;\n  const pluginConfig = (_a = config['vs/nls']) !== null && _a !== void 0 ? _a : {};\n  if (!name || name.length === 0) {\n    // TODO: We need to give back the mangled names here\n    return load({\n      localize: localize,\n      localize2: localize2,\n      getConfiguredDefaultLocale: () => {\n        var _a;\n        return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*'];\n      }\n    });\n  }\n  const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n  const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n  let suffix = '.nls';\n  if (!useDefaultLanguage) {\n    suffix = suffix + '.' + language;\n  }\n  const messagesLoaded = messages => {\n    if (Array.isArray(messages)) {\n      messages.localize = createScopedLocalize(messages);\n      messages.localize2 = createScopedLocalize2(messages);\n    } else {\n      messages.localize = createScopedLocalize(messages[name]);\n      messages.localize2 = createScopedLocalize2(messages[name]);\n    }\n    messages.getConfiguredDefaultLocale = () => {\n      var _a;\n      return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*'];\n    };\n    load(messages);\n  };\n  if (typeof pluginConfig.loadBundle === 'function') {\n    pluginConfig.loadBundle(name, language, (err, messages) => {\n      // We have an error. Load the English default strings to not fail\n      if (err) {\n        req([name + '.nls'], messagesLoaded);\n      } else {\n        messagesLoaded(messages);\n      }\n    });\n  } else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n    (async () => {\n      var _a;\n      try {\n        const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n        return messagesLoaded(messages);\n      } catch (err) {\n        // Language is already as generic as it gets, so require default messages\n        if (!language.includes('-')) {\n          console.error(err);\n          return req([name + '.nls'], messagesLoaded);\n        }\n        try {\n          // Since there is a dash, the language configured is a specific sub-language of the same generic language.\n          // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n          // Swiss German (de-CH), so try to load the generic German (de) messages instead.\n          const genericLanguage = language.split('-')[0];\n          const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n          // We got some messages, so we configure the configuration to use the generic language for this session.\n          (_a = pluginConfig.availableLanguages) !== null && _a !== void 0 ? _a : pluginConfig.availableLanguages = {};\n          pluginConfig.availableLanguages['*'] = genericLanguage;\n          return messagesLoaded(messages);\n        } catch (err) {\n          console.error(err);\n          return req([name + '.nls'], messagesLoaded);\n        }\n      }\n    })();\n  } else {\n    req([name + suffix], messagesLoaded, err => {\n      if (suffix === '.nls') {\n        console.error('Failed trying to load default language strings', err);\n        return;\n      }\n      console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n      req([name + '.nls'], messagesLoaded);\n    });\n  }\n}","map":{"version":3,"names":["isPseudo","document","location","hash","indexOf","DEFAULT_TAG","_format","message","args","result","length","replace","match","rest","index","arg","String","findLanguageForModule","config","name","endWithSlash","path","charAt","getMessagesFromTranslationsService","translationServiceUrl","language","url","res","fetch","ok","messages","json","Error","status","statusText","createScopedLocalize","scope","idx","defaultValue","restArgs","Array","prototype","slice","call","arguments","createScopedLocalize2","_len","_key","value","original","localize","data","_len2","_key2","localize2","_len3","_key3","getConfiguredDefaultLocale","_","undefined","setPseudoTranslation","create","key","_a","load","req","pluginConfig","availableLanguages","useDefaultLanguage","suffix","messagesLoaded","isArray","loadBundle","err","includes","console","error","genericLanguage","split"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/nls.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nconst DEFAULT_TAG = 'i-default';\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nfunction findLanguageForModule(config, name) {\n    let result = config[name];\n    if (result) {\n        return result;\n    }\n    result = config['*'];\n    if (result) {\n        return result;\n    }\n    return null;\n}\nfunction endWithSlash(path) {\n    if (path.charAt(path.length - 1) === '/') {\n        return path;\n    }\n    return path + '/';\n}\nasync function getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n    const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n    const res = await fetch(url);\n    if (res.ok) {\n        const messages = await res.json();\n        return messages;\n    }\n    throw new Error(`${res.status} - ${res.statusText}`);\n}\nfunction createScopedLocalize(scope) {\n    return function (idx, defaultValue) {\n        const restArgs = Array.prototype.slice.call(arguments, 2);\n        return _format(scope[idx], restArgs);\n    };\n}\nfunction createScopedLocalize2(scope) {\n    return (idx, defaultValue, ...args) => ({\n        value: _format(scope[idx], args),\n        original: _format(defaultValue, args)\n    });\n}\n/**\n * @skipMangle\n */\nexport function localize(data, message, ...args) {\n    return _format(message, args);\n}\n/**\n * @skipMangle\n */\nexport function localize2(data, message, ...args) {\n    const original = _format(message, args);\n    return {\n        value: original,\n        original\n    };\n}\n/**\n * @skipMangle\n */\nexport function getConfiguredDefaultLocale(_) {\n    // This returns undefined because this implementation isn't used and is overwritten by the loader\n    // when loaded.\n    return undefined;\n}\n/**\n * @skipMangle\n */\nexport function setPseudoTranslation(value) {\n    isPseudo = value;\n}\n/**\n * Invoked in a built product at run-time\n * @skipMangle\n */\nexport function create(key, data) {\n    var _a;\n    return {\n        localize: createScopedLocalize(data[key]),\n        localize2: createScopedLocalize2(data[key]),\n        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null && _a !== void 0 ? _a : ((_) => undefined)\n    };\n}\n/**\n * Invoked by the loader at run-time\n * @skipMangle\n */\nexport function load(name, req, load, config) {\n    var _a;\n    const pluginConfig = (_a = config['vs/nls']) !== null && _a !== void 0 ? _a : {};\n    if (!name || name.length === 0) {\n        // TODO: We need to give back the mangled names here\n        return load({\n            localize: localize,\n            localize2: localize2,\n            getConfiguredDefaultLocale: () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; }\n        });\n    }\n    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n    const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n    let suffix = '.nls';\n    if (!useDefaultLanguage) {\n        suffix = suffix + '.' + language;\n    }\n    const messagesLoaded = (messages) => {\n        if (Array.isArray(messages)) {\n            messages.localize = createScopedLocalize(messages);\n            messages.localize2 = createScopedLocalize2(messages);\n        }\n        else {\n            messages.localize = createScopedLocalize(messages[name]);\n            messages.localize2 = createScopedLocalize2(messages[name]);\n        }\n        messages.getConfiguredDefaultLocale = () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; };\n        load(messages);\n    };\n    if (typeof pluginConfig.loadBundle === 'function') {\n        pluginConfig.loadBundle(name, language, (err, messages) => {\n            // We have an error. Load the English default strings to not fail\n            if (err) {\n                req([name + '.nls'], messagesLoaded);\n            }\n            else {\n                messagesLoaded(messages);\n            }\n        });\n    }\n    else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n        (async () => {\n            var _a;\n            try {\n                const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n                return messagesLoaded(messages);\n            }\n            catch (err) {\n                // Language is already as generic as it gets, so require default messages\n                if (!language.includes('-')) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n                try {\n                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.\n                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.\n                    const genericLanguage = language.split('-')[0];\n                    const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n                    // We got some messages, so we configure the configuration to use the generic language for this session.\n                    (_a = pluginConfig.availableLanguages) !== null && _a !== void 0 ? _a : (pluginConfig.availableLanguages = {});\n                    pluginConfig.availableLanguages['*'] = genericLanguage;\n                    return messagesLoaded(messages);\n                }\n                catch (err) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n            }\n        })();\n    }\n    else {\n        req([name + suffix], messagesLoaded, (err) => {\n            if (suffix === '.nls') {\n                console.error('Failed trying to load default language strings', err);\n                return;\n            }\n            console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n            req([name + '.nls'], messagesLoaded);\n        });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}