{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MultiplexLogger } from './log.js';\nexport class LogService extends Disposable {\n  constructor(primaryLogger) {\n    let otherLoggers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    super();\n    this.logger = new MultiplexLogger([primaryLogger, ...otherLoggers]);\n    this._register(primaryLogger.onDidChangeLogLevel(level => this.setLevel(level)));\n  }\n  get onDidChangeLogLevel() {\n    return this.logger.onDidChangeLogLevel;\n  }\n  setLevel(level) {\n    this.logger.setLevel(level);\n  }\n  getLevel() {\n    return this.logger.getLevel();\n  }\n  trace(message) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    this.logger.trace(message, ...args);\n  }\n  debug(message) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    this.logger.debug(message, ...args);\n  }\n  info(message) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    this.logger.info(message, ...args);\n  }\n  warn(message) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n    this.logger.warn(message, ...args);\n  }\n  error(message) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n    this.logger.error(message, ...args);\n  }\n}","map":{"version":3,"names":["Disposable","MultiplexLogger","LogService","constructor","primaryLogger","otherLoggers","arguments","length","undefined","logger","_register","onDidChangeLogLevel","level","setLevel","getLevel","trace","message","_len","args","Array","_key","debug","_len2","_key2","info","_len3","_key3","warn","_len4","_key4","error","_len5","_key5"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/platform/log/common/logService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MultiplexLogger } from './log.js';\nexport class LogService extends Disposable {\n    constructor(primaryLogger, otherLoggers = []) {\n        super();\n        this.logger = new MultiplexLogger([primaryLogger, ...otherLoggers]);\n        this._register(primaryLogger.onDidChangeLogLevel(level => this.setLevel(level)));\n    }\n    get onDidChangeLogLevel() {\n        return this.logger.onDidChangeLogLevel;\n    }\n    setLevel(level) {\n        this.logger.setLevel(level);\n    }\n    getLevel() {\n        return this.logger.getLevel();\n    }\n    trace(message, ...args) {\n        this.logger.trace(message, ...args);\n    }\n    debug(message, ...args) {\n        this.logger.debug(message, ...args);\n    }\n    info(message, ...args) {\n        this.logger.info(message, ...args);\n    }\n    warn(message, ...args) {\n        this.logger.warn(message, ...args);\n    }\n    error(message, ...args) {\n        this.logger.error(message, ...args);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}