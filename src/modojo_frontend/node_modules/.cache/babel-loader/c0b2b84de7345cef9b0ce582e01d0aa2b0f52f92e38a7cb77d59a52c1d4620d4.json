{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar QuickPickItemElementRenderer_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../list/browser/listService.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { memoize } from '../../../base/common/decorators.js';\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { quickInputButtonToAction } from './quickInputUtils.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { getCodiconAriaLabel, matchesFuzzyIconAware, parseLabelWithIcons } from '../../../base/common/iconLabels.js';\nimport { compareAnything } from '../../../base/common/comparers.js';\nimport { ltrim } from '../../../base/common/strings.js';\nimport { RenderIndentGuides } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { ThrottledDelayer } from '../../../base/common/async.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { QuickPickFocus } from '../common/quickInput.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nconst $ = dom.$;\nclass BaseQuickPickItemElement {\n  constructor(index, hasCheckbox, mainItem) {\n    this.index = index;\n    this.hasCheckbox = hasCheckbox;\n    this._hidden = false;\n    this._init = new Lazy(() => {\n      var _a;\n      const saneLabel = (_a = mainItem.label) !== null && _a !== void 0 ? _a : '';\n      const saneSortLabel = parseLabelWithIcons(saneLabel).text.trim();\n      const saneAriaLabel = mainItem.ariaLabel || [saneLabel, this.saneDescription, this.saneDetail].map(s => getCodiconAriaLabel(s)).filter(s => !!s).join(', ');\n      return {\n        saneLabel,\n        saneSortLabel,\n        saneAriaLabel\n      };\n    });\n    this._saneDescription = mainItem.description;\n    this._saneTooltip = mainItem.tooltip;\n  }\n  // #region Lazy Getters\n  get saneLabel() {\n    return this._init.value.saneLabel;\n  }\n  get saneSortLabel() {\n    return this._init.value.saneSortLabel;\n  }\n  get saneAriaLabel() {\n    return this._init.value.saneAriaLabel;\n  }\n  get element() {\n    return this._element;\n  }\n  set element(value) {\n    this._element = value;\n  }\n  get hidden() {\n    return this._hidden;\n  }\n  set hidden(value) {\n    this._hidden = value;\n  }\n  get saneDescription() {\n    return this._saneDescription;\n  }\n  set saneDescription(value) {\n    this._saneDescription = value;\n  }\n  get saneDetail() {\n    return this._saneDetail;\n  }\n  set saneDetail(value) {\n    this._saneDetail = value;\n  }\n  get saneTooltip() {\n    return this._saneTooltip;\n  }\n  set saneTooltip(value) {\n    this._saneTooltip = value;\n  }\n  get labelHighlights() {\n    return this._labelHighlights;\n  }\n  set labelHighlights(value) {\n    this._labelHighlights = value;\n  }\n  get descriptionHighlights() {\n    return this._descriptionHighlights;\n  }\n  set descriptionHighlights(value) {\n    this._descriptionHighlights = value;\n  }\n  get detailHighlights() {\n    return this._detailHighlights;\n  }\n  set detailHighlights(value) {\n    this._detailHighlights = value;\n  }\n}\nclass QuickPickItemElement extends BaseQuickPickItemElement {\n  constructor(index, hasCheckbox, fireButtonTriggered, _onChecked, item, _separator) {\n    var _a, _b, _c;\n    super(index, hasCheckbox, item);\n    this.fireButtonTriggered = fireButtonTriggered;\n    this._onChecked = _onChecked;\n    this.item = item;\n    this._separator = _separator;\n    this._checked = false;\n    this.onChecked = hasCheckbox ? Event.map(Event.filter(this._onChecked.event, e => e.element === this), e => e.checked) : Event.None;\n    this._saneDetail = item.detail;\n    this._labelHighlights = (_a = item.highlights) === null || _a === void 0 ? void 0 : _a.label;\n    this._descriptionHighlights = (_b = item.highlights) === null || _b === void 0 ? void 0 : _b.description;\n    this._detailHighlights = (_c = item.highlights) === null || _c === void 0 ? void 0 : _c.detail;\n  }\n  get separator() {\n    return this._separator;\n  }\n  set separator(value) {\n    this._separator = value;\n  }\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value !== this._checked) {\n      this._checked = value;\n      this._onChecked.fire({\n        element: this,\n        checked: value\n      });\n    }\n  }\n  get checkboxDisabled() {\n    return !!this.item.disabled;\n  }\n}\nvar QuickPickSeparatorFocusReason;\n(function (QuickPickSeparatorFocusReason) {\n  /**\n   * No item is hovered or active\n   */\n  QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"NONE\"] = 0] = \"NONE\";\n  /**\n   * Some item within this section is hovered\n   */\n  QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"MOUSE_HOVER\"] = 1] = \"MOUSE_HOVER\";\n  /**\n   * Some item within this section is active\n   */\n  QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"ACTIVE_ITEM\"] = 2] = \"ACTIVE_ITEM\";\n})(QuickPickSeparatorFocusReason || (QuickPickSeparatorFocusReason = {}));\nclass QuickPickSeparatorElement extends BaseQuickPickItemElement {\n  constructor(index, fireSeparatorButtonTriggered, separator) {\n    super(index, false, separator);\n    this.fireSeparatorButtonTriggered = fireSeparatorButtonTriggered;\n    this.separator = separator;\n    this.children = new Array();\n    /**\n     * If this item is >0, it means that there is some item in the list that is either:\n     * * hovered over\n     * * active\n     */\n    this.focusInsideSeparator = QuickPickSeparatorFocusReason.NONE;\n  }\n}\nclass QuickInputItemDelegate {\n  getHeight(element) {\n    if (element instanceof QuickPickSeparatorElement) {\n      return 30;\n    }\n    return element.saneDetail ? 44 : 22;\n  }\n  getTemplateId(element) {\n    if (element instanceof QuickPickItemElement) {\n      return QuickPickItemElementRenderer.ID;\n    } else {\n      return QuickPickSeparatorElementRenderer.ID;\n    }\n  }\n}\nclass QuickInputAccessibilityProvider {\n  getWidgetAriaLabel() {\n    return localize('quickInput', \"Quick Input\");\n  }\n  getAriaLabel(element) {\n    var _a;\n    return ((_a = element.separator) === null || _a === void 0 ? void 0 : _a.label) ? `${element.saneAriaLabel}, ${element.separator.label}` : element.saneAriaLabel;\n  }\n  getWidgetRole() {\n    return 'listbox';\n  }\n  getRole(element) {\n    return element.hasCheckbox ? 'checkbox' : 'option';\n  }\n  isChecked(element) {\n    if (!element.hasCheckbox || !(element instanceof QuickPickItemElement)) {\n      return undefined;\n    }\n    return {\n      get value() {\n        return element.checked;\n      },\n      onDidChange: e => element.onChecked(() => e())\n    };\n  }\n}\nclass BaseQuickInputListRenderer {\n  constructor(hoverDelegate) {\n    this.hoverDelegate = hoverDelegate;\n  }\n  // TODO: only do the common stuff here and have a subclass handle their specific stuff\n  renderTemplate(container) {\n    const data = Object.create(null);\n    data.toDisposeElement = new DisposableStore();\n    data.toDisposeTemplate = new DisposableStore();\n    data.entry = dom.append(container, $('.quick-input-list-entry'));\n    // Checkbox\n    const label = dom.append(data.entry, $('label.quick-input-list-label'));\n    data.toDisposeTemplate.add(dom.addStandardDisposableListener(label, dom.EventType.CLICK, e => {\n      if (!data.checkbox.offsetParent) {\n        // If checkbox not visible:\n        e.preventDefault(); // Prevent toggle of checkbox when it is immediately shown afterwards. #91740\n      }\n    }));\n    data.checkbox = dom.append(label, $('input.quick-input-list-checkbox'));\n    data.checkbox.type = 'checkbox';\n    // Rows\n    const rows = dom.append(label, $('.quick-input-list-rows'));\n    const row1 = dom.append(rows, $('.quick-input-list-row'));\n    const row2 = dom.append(rows, $('.quick-input-list-row'));\n    // Label\n    data.label = new IconLabel(row1, {\n      supportHighlights: true,\n      supportDescriptionHighlights: true,\n      supportIcons: true,\n      hoverDelegate: this.hoverDelegate\n    });\n    data.toDisposeTemplate.add(data.label);\n    data.icon = dom.prepend(data.label.element, $('.quick-input-list-icon'));\n    // Keybinding\n    const keybindingContainer = dom.append(row1, $('.quick-input-list-entry-keybinding'));\n    data.keybinding = new KeybindingLabel(keybindingContainer, OS);\n    data.toDisposeTemplate.add(data.keybinding);\n    // Detail\n    const detailContainer = dom.append(row2, $('.quick-input-list-label-meta'));\n    data.detail = new IconLabel(detailContainer, {\n      supportHighlights: true,\n      supportIcons: true,\n      hoverDelegate: this.hoverDelegate\n    });\n    data.toDisposeTemplate.add(data.detail);\n    // Separator\n    data.separator = dom.append(data.entry, $('.quick-input-list-separator'));\n    // Actions\n    data.actionBar = new ActionBar(data.entry, this.hoverDelegate ? {\n      hoverDelegate: this.hoverDelegate\n    } : undefined);\n    data.actionBar.domNode.classList.add('quick-input-list-entry-action-bar');\n    data.toDisposeTemplate.add(data.actionBar);\n    return data;\n  }\n  disposeTemplate(data) {\n    data.toDisposeElement.dispose();\n    data.toDisposeTemplate.dispose();\n  }\n  disposeElement(_element, _index, data) {\n    data.toDisposeElement.clear();\n    data.actionBar.clear();\n  }\n}\nlet QuickPickItemElementRenderer = QuickPickItemElementRenderer_1 = class QuickPickItemElementRenderer extends BaseQuickInputListRenderer {\n  constructor(hoverDelegate, themeService) {\n    super(hoverDelegate);\n    this.themeService = themeService;\n    // Follow what we do in the separator renderer\n    this._itemsWithSeparatorsFrequency = new Map();\n  }\n  get templateId() {\n    return QuickPickItemElementRenderer_1.ID;\n  }\n  renderTemplate(container) {\n    const data = super.renderTemplate(container);\n    data.toDisposeTemplate.add(dom.addStandardDisposableListener(data.checkbox, dom.EventType.CHANGE, e => {\n      data.element.checked = data.checkbox.checked;\n    }));\n    return data;\n  }\n  renderElement(node, index, data) {\n    var _a, _b, _c;\n    const element = node.element;\n    data.element = element;\n    element.element = (_a = data.entry) !== null && _a !== void 0 ? _a : undefined;\n    const mainItem = element.item;\n    data.checkbox.checked = element.checked;\n    data.toDisposeElement.add(element.onChecked(checked => data.checkbox.checked = checked));\n    data.checkbox.disabled = element.checkboxDisabled;\n    const {\n      labelHighlights,\n      descriptionHighlights,\n      detailHighlights\n    } = element;\n    // Icon\n    if (mainItem.iconPath) {\n      const icon = isDark(this.themeService.getColorTheme().type) ? mainItem.iconPath.dark : (_b = mainItem.iconPath.light) !== null && _b !== void 0 ? _b : mainItem.iconPath.dark;\n      const iconUrl = URI.revive(icon);\n      data.icon.className = 'quick-input-list-icon';\n      data.icon.style.backgroundImage = dom.asCSSUrl(iconUrl);\n    } else {\n      data.icon.style.backgroundImage = '';\n      data.icon.className = mainItem.iconClass ? `quick-input-list-icon ${mainItem.iconClass}` : '';\n    }\n    // Label\n    let descriptionTitle;\n    // if we have a tooltip, that will be the hover,\n    // with the saneDescription as fallback if it\n    // is defined\n    if (!element.saneTooltip && element.saneDescription) {\n      descriptionTitle = {\n        markdown: {\n          value: element.saneDescription,\n          supportThemeIcons: true\n        },\n        markdownNotSupportedFallback: element.saneDescription\n      };\n    }\n    const options = {\n      matches: labelHighlights || [],\n      // If we have a tooltip, we want that to be shown and not any other hover\n      descriptionTitle,\n      descriptionMatches: descriptionHighlights || [],\n      labelEscapeNewLines: true\n    };\n    options.extraClasses = mainItem.iconClasses;\n    options.italic = mainItem.italic;\n    options.strikethrough = mainItem.strikethrough;\n    data.entry.classList.remove('quick-input-list-separator-as-item');\n    data.label.setLabel(element.saneLabel, element.saneDescription, options);\n    // Keybinding\n    data.keybinding.set(mainItem.keybinding);\n    // Detail\n    if (element.saneDetail) {\n      let title;\n      // If we have a tooltip, we want that to be shown and not any other hover\n      if (!element.saneTooltip) {\n        title = {\n          markdown: {\n            value: element.saneDetail,\n            supportThemeIcons: true\n          },\n          markdownNotSupportedFallback: element.saneDetail\n        };\n      }\n      data.detail.element.style.display = '';\n      data.detail.setLabel(element.saneDetail, undefined, {\n        matches: detailHighlights,\n        title,\n        labelEscapeNewLines: true\n      });\n    } else {\n      data.detail.element.style.display = 'none';\n    }\n    // Separator\n    if ((_c = element.separator) === null || _c === void 0 ? void 0 : _c.label) {\n      data.separator.textContent = element.separator.label;\n      data.separator.style.display = '';\n      this.addItemWithSeparator(element);\n    } else {\n      data.separator.style.display = 'none';\n    }\n    data.entry.classList.toggle('quick-input-list-separator-border', !!element.separator);\n    // Actions\n    const buttons = mainItem.buttons;\n    if (buttons && buttons.length) {\n      data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireButtonTriggered({\n        button,\n        item: element.item\n      }))), {\n        icon: true,\n        label: false\n      });\n      data.entry.classList.add('has-actions');\n    } else {\n      data.entry.classList.remove('has-actions');\n    }\n  }\n  disposeElement(element, _index, data) {\n    this.removeItemWithSeparator(element.element);\n    super.disposeElement(element, _index, data);\n  }\n  isItemWithSeparatorVisible(item) {\n    return this._itemsWithSeparatorsFrequency.has(item);\n  }\n  addItemWithSeparator(item) {\n    this._itemsWithSeparatorsFrequency.set(item, (this._itemsWithSeparatorsFrequency.get(item) || 0) + 1);\n  }\n  removeItemWithSeparator(item) {\n    const frequency = this._itemsWithSeparatorsFrequency.get(item) || 0;\n    if (frequency > 1) {\n      this._itemsWithSeparatorsFrequency.set(item, frequency - 1);\n    } else {\n      this._itemsWithSeparatorsFrequency.delete(item);\n    }\n  }\n};\nQuickPickItemElementRenderer.ID = 'quickpickitem';\nQuickPickItemElementRenderer = QuickPickItemElementRenderer_1 = __decorate([__param(1, IThemeService)], QuickPickItemElementRenderer);\nclass QuickPickSeparatorElementRenderer extends BaseQuickInputListRenderer {\n  constructor() {\n    super(...arguments);\n    // This is a frequency map because sticky scroll re-uses the same renderer to render a second\n    // instance of the same separator.\n    this._visibleSeparatorsFrequency = new Map();\n  }\n  get templateId() {\n    return QuickPickSeparatorElementRenderer.ID;\n  }\n  get visibleSeparators() {\n    return [...this._visibleSeparatorsFrequency.keys()];\n  }\n  isSeparatorVisible(separator) {\n    return this._visibleSeparatorsFrequency.has(separator);\n  }\n  renderElement(node, index, data) {\n    var _a;\n    const element = node.element;\n    data.element = element;\n    element.element = (_a = data.entry) !== null && _a !== void 0 ? _a : undefined;\n    element.element.classList.toggle('focus-inside', !!element.focusInsideSeparator);\n    const mainItem = element.separator;\n    const {\n      labelHighlights,\n      descriptionHighlights,\n      detailHighlights\n    } = element;\n    // Icon\n    data.icon.style.backgroundImage = '';\n    data.icon.className = '';\n    // Label\n    let descriptionTitle;\n    // if we have a tooltip, that will be the hover,\n    // with the saneDescription as fallback if it\n    // is defined\n    if (!element.saneTooltip && element.saneDescription) {\n      descriptionTitle = {\n        markdown: {\n          value: element.saneDescription,\n          supportThemeIcons: true\n        },\n        markdownNotSupportedFallback: element.saneDescription\n      };\n    }\n    const options = {\n      matches: labelHighlights || [],\n      // If we have a tooltip, we want that to be shown and not any other hover\n      descriptionTitle,\n      descriptionMatches: descriptionHighlights || [],\n      labelEscapeNewLines: true\n    };\n    data.entry.classList.add('quick-input-list-separator-as-item');\n    data.label.setLabel(element.saneLabel, element.saneDescription, options);\n    // Detail\n    if (element.saneDetail) {\n      let title;\n      // If we have a tooltip, we want that to be shown and not any other hover\n      if (!element.saneTooltip) {\n        title = {\n          markdown: {\n            value: element.saneDetail,\n            supportThemeIcons: true\n          },\n          markdownNotSupportedFallback: element.saneDetail\n        };\n      }\n      data.detail.element.style.display = '';\n      data.detail.setLabel(element.saneDetail, undefined, {\n        matches: detailHighlights,\n        title,\n        labelEscapeNewLines: true\n      });\n    } else {\n      data.detail.element.style.display = 'none';\n    }\n    // Separator\n    data.separator.style.display = 'none';\n    data.entry.classList.add('quick-input-list-separator-border');\n    // Actions\n    const buttons = mainItem.buttons;\n    if (buttons && buttons.length) {\n      data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireSeparatorButtonTriggered({\n        button,\n        separator: element.separator\n      }))), {\n        icon: true,\n        label: false\n      });\n      data.entry.classList.add('has-actions');\n    } else {\n      data.entry.classList.remove('has-actions');\n    }\n    this.addSeparator(element);\n  }\n  disposeElement(element, _index, data) {\n    var _a;\n    this.removeSeparator(element.element);\n    if (!this.isSeparatorVisible(element.element)) {\n      (_a = element.element.element) === null || _a === void 0 ? void 0 : _a.classList.remove('focus-inside');\n    }\n    super.disposeElement(element, _index, data);\n  }\n  addSeparator(separator) {\n    this._visibleSeparatorsFrequency.set(separator, (this._visibleSeparatorsFrequency.get(separator) || 0) + 1);\n  }\n  removeSeparator(separator) {\n    const frequency = this._visibleSeparatorsFrequency.get(separator) || 0;\n    if (frequency > 1) {\n      this._visibleSeparatorsFrequency.set(separator, frequency - 1);\n    } else {\n      this._visibleSeparatorsFrequency.delete(separator);\n    }\n  }\n}\nQuickPickSeparatorElementRenderer.ID = 'quickpickseparator';\nlet QuickInputTree = class QuickInputTree extends Disposable {\n  constructor(parent, hoverDelegate, linkOpenerDelegate, id, instantiationService, accessibilityService) {\n    super();\n    this.parent = parent;\n    this.hoverDelegate = hoverDelegate;\n    this.linkOpenerDelegate = linkOpenerDelegate;\n    this.accessibilityService = accessibilityService;\n    this._onKeyDown = new Emitter();\n    this._onLeave = new Emitter();\n    /**\n     * Event that is fired when the tree would no longer have focus.\n    */\n    this.onLeave = this._onLeave.event;\n    this._onChangedAllVisibleChecked = new Emitter();\n    this.onChangedAllVisibleChecked = this._onChangedAllVisibleChecked.event;\n    this._onChangedCheckedCount = new Emitter();\n    this.onChangedCheckedCount = this._onChangedCheckedCount.event;\n    this._onChangedVisibleCount = new Emitter();\n    this.onChangedVisibleCount = this._onChangedVisibleCount.event;\n    this._onChangedCheckedElements = new Emitter();\n    this.onChangedCheckedElements = this._onChangedCheckedElements.event;\n    this._onButtonTriggered = new Emitter();\n    this.onButtonTriggered = this._onButtonTriggered.event;\n    this._onSeparatorButtonTriggered = new Emitter();\n    this.onSeparatorButtonTriggered = this._onSeparatorButtonTriggered.event;\n    this._elementChecked = new Emitter();\n    this._inputElements = new Array();\n    this._elementTree = new Array();\n    this._itemElements = new Array();\n    // Elements that apply to the current set of elements\n    this._elementDisposable = this._register(new DisposableStore());\n    // This is used to prevent setting the checked state of a single element from firing the checked events\n    // so that we can batch them together. This can probably be improved by handling events differently,\n    // but this works for now. An observable would probably be ideal for this.\n    this._shouldFireCheckedEvents = true;\n    this._matchOnDescription = false;\n    this._matchOnDetail = false;\n    this._matchOnLabel = true;\n    this._matchOnLabelMode = 'fuzzy';\n    this._sortByLabel = true;\n    this._shouldLoop = true;\n    this._container = dom.append(this.parent, $('.quick-input-list'));\n    this._separatorRenderer = new QuickPickSeparatorElementRenderer(hoverDelegate);\n    this._itemRenderer = instantiationService.createInstance(QuickPickItemElementRenderer, hoverDelegate);\n    this._tree = this._register(instantiationService.createInstance(WorkbenchObjectTree, 'QuickInput', this._container, new QuickInputItemDelegate(), [this._itemRenderer, this._separatorRenderer], {\n      accessibilityProvider: new QuickInputAccessibilityProvider(),\n      setRowLineHeight: false,\n      multipleSelectionSupport: false,\n      hideTwistiesOfChildlessElements: true,\n      renderIndentGuides: RenderIndentGuides.None,\n      findWidgetEnabled: false,\n      indent: 0,\n      horizontalScrolling: false,\n      allowNonCollapsibleParents: true,\n      alwaysConsumeMouseWheel: true\n    }));\n    this._tree.getHTMLElement().id = id;\n    this._registerListeners();\n  }\n  //#region public getters/setters\n  get onDidChangeFocus() {\n    return Event.map(this._tree.onDidChangeFocus, e => e.elements.filter(e => e instanceof QuickPickItemElement).map(e => e.item));\n  }\n  get onDidChangeSelection() {\n    return Event.map(this._tree.onDidChangeSelection, e => ({\n      items: e.elements.filter(e => e instanceof QuickPickItemElement).map(e => e.item),\n      event: e.browserEvent\n    }));\n  }\n  get scrollTop() {\n    return this._tree.scrollTop;\n  }\n  set scrollTop(scrollTop) {\n    this._tree.scrollTop = scrollTop;\n  }\n  get ariaLabel() {\n    return this._tree.ariaLabel;\n  }\n  set ariaLabel(label) {\n    this._tree.ariaLabel = label !== null && label !== void 0 ? label : '';\n  }\n  set enabled(value) {\n    this._tree.getHTMLElement().style.pointerEvents = value ? '' : 'none';\n  }\n  get matchOnDescription() {\n    return this._matchOnDescription;\n  }\n  set matchOnDescription(value) {\n    this._matchOnDescription = value;\n  }\n  get matchOnDetail() {\n    return this._matchOnDetail;\n  }\n  set matchOnDetail(value) {\n    this._matchOnDetail = value;\n  }\n  get matchOnLabel() {\n    return this._matchOnLabel;\n  }\n  set matchOnLabel(value) {\n    this._matchOnLabel = value;\n  }\n  get matchOnLabelMode() {\n    return this._matchOnLabelMode;\n  }\n  set matchOnLabelMode(value) {\n    this._matchOnLabelMode = value;\n  }\n  get sortByLabel() {\n    return this._sortByLabel;\n  }\n  set sortByLabel(value) {\n    this._sortByLabel = value;\n  }\n  get shouldLoop() {\n    return this._shouldLoop;\n  }\n  set shouldLoop(value) {\n    this._shouldLoop = value;\n  }\n  //#endregion\n  //#region register listeners\n  _registerListeners() {\n    this._registerOnKeyDown();\n    this._registerOnContainerClick();\n    this._registerOnMouseMiddleClick();\n    this._registerOnElementChecked();\n    this._registerOnContextMenu();\n    this._registerHoverListeners();\n    this._registerSelectionChangeListener();\n    this._registerSeparatorActionShowingListeners();\n  }\n  _registerOnKeyDown() {\n    // TODO: Should this be added at a higher level?\n    this._register(this._tree.onKeyDown(e => {\n      const event = new StandardKeyboardEvent(e);\n      switch (event.keyCode) {\n        case 10 /* KeyCode.Space */:\n          this.toggleCheckbox();\n          break;\n      }\n      this._onKeyDown.fire(event);\n    }));\n  }\n  _registerOnContainerClick() {\n    this._register(dom.addDisposableListener(this._container, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space' on checkbox.\n        this._onLeave.fire();\n      }\n    }));\n  }\n  _registerOnMouseMiddleClick() {\n    this._register(dom.addDisposableListener(this._container, dom.EventType.AUXCLICK, e => {\n      if (e.button === 1) {\n        this._onLeave.fire();\n      }\n    }));\n  }\n  _registerOnElementChecked() {\n    this._register(this._elementChecked.event(_ => this._fireCheckedEvents()));\n  }\n  _registerOnContextMenu() {\n    this._register(this._tree.onContextMenu(e => {\n      if (e.element) {\n        e.browserEvent.preventDefault();\n        // we want to treat a context menu event as\n        // a gesture to open the item at the index\n        // since we do not have any context menu\n        // this enables for example macOS to Ctrl-\n        // click on an item to open it.\n        this._tree.setSelection([e.element]);\n      }\n    }));\n  }\n  _registerHoverListeners() {\n    const delayer = this._register(new ThrottledDelayer(this.hoverDelegate.delay));\n    this._register(this._tree.onMouseOver(async e => {\n      var _a;\n      // If we hover over an anchor element, we don't want to show the hover because\n      // the anchor may have a tooltip that we want to show instead.\n      if (dom.isHTMLAnchorElement(e.browserEvent.target)) {\n        delayer.cancel();\n        return;\n      }\n      if (\n      // anchors are an exception as called out above so we skip them here\n      !dom.isHTMLAnchorElement(e.browserEvent.relatedTarget) &&\n      // check if the mouse is still over the same element\n      dom.isAncestor(e.browserEvent.relatedTarget, (_a = e.element) === null || _a === void 0 ? void 0 : _a.element)) {\n        return;\n      }\n      try {\n        await delayer.trigger(async () => {\n          if (e.element instanceof QuickPickItemElement) {\n            this.showHover(e.element);\n          }\n        });\n      } catch (e) {\n        // Ignore cancellation errors due to mouse out\n        if (!isCancellationError(e)) {\n          throw e;\n        }\n      }\n    }));\n    this._register(this._tree.onMouseOut(e => {\n      var _a;\n      // onMouseOut triggers every time a new element has been moused over\n      // even if it's on the same list item. We only want one event, so we\n      // check if the mouse is still over the same element.\n      if (dom.isAncestor(e.browserEvent.relatedTarget, (_a = e.element) === null || _a === void 0 ? void 0 : _a.element)) {\n        return;\n      }\n      delayer.cancel();\n    }));\n  }\n  /**\n   * Register's focus change and mouse events so that we can track when items inside of a\n   * separator's section are focused or hovered so that we can display the separator's actions\n   */\n  _registerSeparatorActionShowingListeners() {\n    this._register(this._tree.onDidChangeFocus(e => {\n      const parent = e.elements[0] ? this._tree.getParentElement(e.elements[0])\n      // treat null as focus lost and when we have no separators\n      : null;\n      for (const separator of this._separatorRenderer.visibleSeparators) {\n        const value = separator === parent;\n        // get bitness of ACTIVE_ITEM and check if it changed\n        const currentActive = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.ACTIVE_ITEM);\n        if (currentActive !== value) {\n          if (value) {\n            separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n          } else {\n            separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n          }\n          this._tree.rerender(separator);\n        }\n      }\n    }));\n    this._register(this._tree.onMouseOver(e => {\n      const parent = e.element ? this._tree.getParentElement(e.element) : null;\n      for (const separator of this._separatorRenderer.visibleSeparators) {\n        if (separator !== parent) {\n          continue;\n        }\n        const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n        if (!currentMouse) {\n          separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.MOUSE_HOVER;\n          this._tree.rerender(separator);\n        }\n      }\n    }));\n    this._register(this._tree.onMouseOut(e => {\n      const parent = e.element ? this._tree.getParentElement(e.element) : null;\n      for (const separator of this._separatorRenderer.visibleSeparators) {\n        if (separator !== parent) {\n          continue;\n        }\n        const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n        if (currentMouse) {\n          separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.MOUSE_HOVER;\n          this._tree.rerender(separator);\n        }\n      }\n    }));\n  }\n  _registerSelectionChangeListener() {\n    // When the user selects a separator, the separator will move to the top and focus will be\n    // set to the first element after the separator.\n    this._register(this._tree.onDidChangeSelection(e => {\n      const elementsWithoutSeparators = e.elements.filter(e => e instanceof QuickPickItemElement);\n      if (elementsWithoutSeparators.length !== e.elements.length) {\n        if (e.elements.length === 1 && e.elements[0] instanceof QuickPickSeparatorElement) {\n          this._tree.setFocus([e.elements[0].children[0]]);\n          this._tree.reveal(e.elements[0], 0);\n        }\n        this._tree.setSelection(elementsWithoutSeparators);\n      }\n    }));\n  }\n  //#endregion\n  //#region public methods\n  getAllVisibleChecked() {\n    return this._allVisibleChecked(this._itemElements, false);\n  }\n  getCheckedCount() {\n    return this._itemElements.filter(element => element.checked).length;\n  }\n  getVisibleCount() {\n    return this._itemElements.filter(e => !e.hidden).length;\n  }\n  setAllVisibleChecked(checked) {\n    try {\n      this._shouldFireCheckedEvents = false;\n      this._itemElements.forEach(element => {\n        if (!element.hidden && !element.checkboxDisabled) {\n          // Would fire an event if we didn't have the flag set\n          element.checked = checked;\n        }\n      });\n    } finally {\n      this._shouldFireCheckedEvents = true;\n      this._fireCheckedEvents();\n    }\n  }\n  setElements(inputElements) {\n    this._elementDisposable.clear();\n    this._inputElements = inputElements;\n    const hasCheckbox = this.parent.classList.contains('show-checkboxes');\n    let currentSeparatorElement;\n    this._itemElements = new Array();\n    this._elementTree = inputElements.reduce((result, item, index) => {\n      let element;\n      if (item.type === 'separator') {\n        if (!item.buttons) {\n          // This separator will be rendered as a part of the list item\n          return result;\n        }\n        currentSeparatorElement = new QuickPickSeparatorElement(index, event => this.fireSeparatorButtonTriggered(event), item);\n        element = currentSeparatorElement;\n      } else {\n        const previous = index > 0 ? inputElements[index - 1] : undefined;\n        let separator;\n        if (previous && previous.type === 'separator' && !previous.buttons) {\n          // Found an inline separator so we clear out the current separator element\n          currentSeparatorElement = undefined;\n          separator = previous;\n        }\n        const qpi = new QuickPickItemElement(index, hasCheckbox, event => this.fireButtonTriggered(event), this._elementChecked, item, separator);\n        this._itemElements.push(qpi);\n        if (currentSeparatorElement) {\n          currentSeparatorElement.children.push(qpi);\n          return result;\n        }\n        element = qpi;\n      }\n      result.push(element);\n      return result;\n    }, new Array());\n    const elements = new Array();\n    let visibleCount = 0;\n    for (const element of this._elementTree) {\n      if (element instanceof QuickPickSeparatorElement) {\n        elements.push({\n          element,\n          collapsible: false,\n          collapsed: false,\n          children: element.children.map(e => ({\n            element: e,\n            collapsible: false,\n            collapsed: false\n          }))\n        });\n        visibleCount += element.children.length + 1; // +1 for the separator itself;\n      } else {\n        elements.push({\n          element,\n          collapsible: false,\n          collapsed: false\n        });\n        visibleCount++;\n      }\n    }\n    this._tree.setChildren(null, elements);\n    this._onChangedVisibleCount.fire(visibleCount);\n    // Accessibility hack, unfortunately on next tick\n    // https://github.com/microsoft/vscode/issues/211976\n    if (this.accessibilityService.isScreenReaderOptimized()) {\n      setTimeout(() => {\n        const focusedElement = this._tree.getHTMLElement().querySelector(`.monaco-list-row.focused`);\n        const parent = focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.parentNode;\n        if (focusedElement && parent) {\n          const nextSibling = focusedElement.nextSibling;\n          parent.removeChild(focusedElement);\n          parent.insertBefore(focusedElement, nextSibling);\n        }\n      }, 0);\n    }\n  }\n  setFocusedElements(items) {\n    const elements = items.map(item => this._itemElements.find(e => e.item === item)).filter(e => !!e);\n    this._tree.setFocus(elements);\n    if (items.length > 0) {\n      const focused = this._tree.getFocus()[0];\n      if (focused) {\n        this._tree.reveal(focused);\n      }\n    }\n  }\n  getActiveDescendant() {\n    return this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n  }\n  setSelectedElements(items) {\n    const elements = items.map(item => this._itemElements.find(e => e.item === item)).filter(e => !!e);\n    this._tree.setSelection(elements);\n  }\n  getCheckedElements() {\n    return this._itemElements.filter(e => e.checked).map(e => e.item);\n  }\n  setCheckedElements(items) {\n    try {\n      this._shouldFireCheckedEvents = false;\n      const checked = new Set();\n      for (const item of items) {\n        checked.add(item);\n      }\n      for (const element of this._itemElements) {\n        // Would fire an event if we didn't have the flag set\n        element.checked = checked.has(element.item);\n      }\n    } finally {\n      this._shouldFireCheckedEvents = true;\n      this._fireCheckedEvents();\n    }\n  }\n  focus(what) {\n    var _a;\n    if (!this._itemElements.length) {\n      return;\n    }\n    if (what === QuickPickFocus.Second && this._itemElements.length < 2) {\n      what = QuickPickFocus.First;\n    }\n    switch (what) {\n      case QuickPickFocus.First:\n        this._tree.scrollTop = 0;\n        this._tree.focusFirst(undefined, e => e.element instanceof QuickPickItemElement);\n        break;\n      case QuickPickFocus.Second:\n        this._tree.scrollTop = 0;\n        this._tree.setFocus([this._itemElements[1]]);\n        break;\n      case QuickPickFocus.Last:\n        this._tree.scrollTop = this._tree.scrollHeight;\n        this._tree.setFocus([this._itemElements[this._itemElements.length - 1]]);\n        break;\n      case QuickPickFocus.Next:\n        {\n          const prevFocus = this._tree.getFocus();\n          this._tree.focusNext(undefined, this._shouldLoop, undefined, e => {\n            if (!(e.element instanceof QuickPickItemElement)) {\n              return false;\n            }\n            this._tree.reveal(e.element);\n            return true;\n          });\n          const currentFocus = this._tree.getFocus();\n          if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[this._itemElements.length - 1]) {\n            this._onLeave.fire();\n          }\n          break;\n        }\n      case QuickPickFocus.Previous:\n        {\n          const prevFocus = this._tree.getFocus();\n          this._tree.focusPrevious(undefined, this._shouldLoop, undefined, e => {\n            if (!(e.element instanceof QuickPickItemElement)) {\n              return false;\n            }\n            const parent = this._tree.getParentElement(e.element);\n            if (parent === null || parent.children[0] !== e.element) {\n              this._tree.reveal(e.element);\n            } else {\n              // Only if we are the first child of a separator do we reveal the separator\n              this._tree.reveal(parent);\n            }\n            return true;\n          });\n          const currentFocus = this._tree.getFocus();\n          if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[0]) {\n            this._onLeave.fire();\n          }\n          break;\n        }\n      case QuickPickFocus.NextPage:\n        this._tree.focusNextPage(undefined, e => {\n          if (!(e.element instanceof QuickPickItemElement)) {\n            return false;\n          }\n          this._tree.reveal(e.element);\n          return true;\n        });\n        break;\n      case QuickPickFocus.PreviousPage:\n        this._tree.focusPreviousPage(undefined, e => {\n          if (!(e.element instanceof QuickPickItemElement)) {\n            return false;\n          }\n          const parent = this._tree.getParentElement(e.element);\n          if (parent === null || parent.children[0] !== e.element) {\n            this._tree.reveal(e.element);\n          } else {\n            this._tree.reveal(parent);\n          }\n          return true;\n        });\n        break;\n      case QuickPickFocus.NextSeparator:\n        {\n          let foundSeparatorAsItem = false;\n          const before = this._tree.getFocus()[0];\n          this._tree.focusNext(undefined, true, undefined, e => {\n            if (foundSeparatorAsItem) {\n              // This should be the index right after the separator so it\n              // is the item we want to focus.\n              return true;\n            }\n            if (e.element instanceof QuickPickSeparatorElement) {\n              foundSeparatorAsItem = true;\n              // If the separator is visible, then we should just reveal its first child so it's not as jarring.\n              if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                this._tree.reveal(e.element.children[0]);\n              } else {\n                // If the separator is not visible, then we should\n                // push it up to the top of the list.\n                this._tree.reveal(e.element, 0);\n              }\n            } else if (e.element instanceof QuickPickItemElement) {\n              if (e.element.separator) {\n                if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                  this._tree.reveal(e.element);\n                } else {\n                  this._tree.reveal(e.element, 0);\n                }\n                return true;\n              } else if (e.element === this._elementTree[0]) {\n                // We should stop at the first item in the list if it's a regular item.\n                this._tree.reveal(e.element, 0);\n                return true;\n              }\n            }\n            return false;\n          });\n          const after = this._tree.getFocus()[0];\n          if (before === after) {\n            // If we didn't move, then we should just move to the end\n            // of the list.\n            this._tree.scrollTop = this._tree.scrollHeight;\n            this._tree.setFocus([this._itemElements[this._itemElements.length - 1]]);\n          }\n          break;\n        }\n      case QuickPickFocus.PreviousSeparator:\n        {\n          let focusElement;\n          // If we are already sitting on an inline separator, then we\n          // have already found the _current_ separator and need to\n          // move to the previous one.\n          let foundSeparator = !!((_a = this._tree.getFocus()[0]) === null || _a === void 0 ? void 0 : _a.separator);\n          this._tree.focusPrevious(undefined, true, undefined, e => {\n            if (e.element instanceof QuickPickSeparatorElement) {\n              if (foundSeparator) {\n                if (!focusElement) {\n                  if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                    this._tree.reveal(e.element);\n                  } else {\n                    this._tree.reveal(e.element, 0);\n                  }\n                  focusElement = e.element.children[0];\n                }\n              } else {\n                foundSeparator = true;\n              }\n            } else if (e.element instanceof QuickPickItemElement) {\n              if (!focusElement) {\n                if (e.element.separator) {\n                  if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                    this._tree.reveal(e.element);\n                  } else {\n                    this._tree.reveal(e.element, 0);\n                  }\n                  focusElement = e.element;\n                } else if (e.element === this._elementTree[0]) {\n                  // We should stop at the first item in the list if it's a regular item.\n                  this._tree.reveal(e.element, 0);\n                  return true;\n                }\n              }\n            }\n            return false;\n          });\n          if (focusElement) {\n            this._tree.setFocus([focusElement]);\n          }\n          break;\n        }\n    }\n  }\n  clearFocus() {\n    this._tree.setFocus([]);\n  }\n  domFocus() {\n    this._tree.domFocus();\n  }\n  layout(maxHeight) {\n    this._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n    // Make sure height aligns with list item heights\n    Math.floor(maxHeight / 44) * 44\n    // Add some extra height so that it's clear there's more to scroll\n    + 6}px` : '';\n    this._tree.layout();\n  }\n  filter(query) {\n    if (!(this._sortByLabel || this._matchOnLabel || this._matchOnDescription || this._matchOnDetail)) {\n      this._tree.layout();\n      return false;\n    }\n    const queryWithWhitespace = query;\n    query = query.trim();\n    // Reset filtering\n    if (!query || !(this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\n      this._itemElements.forEach(element => {\n        element.labelHighlights = undefined;\n        element.descriptionHighlights = undefined;\n        element.detailHighlights = undefined;\n        element.hidden = false;\n        const previous = element.index && this._inputElements[element.index - 1];\n        if (element.item) {\n          element.separator = previous && previous.type === 'separator' && !previous.buttons ? previous : undefined;\n        }\n      });\n    }\n    // Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\n    else {\n      let currentSeparator;\n      this._elementTree.forEach(element => {\n        var _a, _b, _c, _d;\n        let labelHighlights;\n        if (this.matchOnLabelMode === 'fuzzy') {\n          labelHighlights = this.matchOnLabel ? (_a = matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneLabel))) !== null && _a !== void 0 ? _a : undefined : undefined;\n        } else {\n          labelHighlights = this.matchOnLabel ? (_b = matchesContiguousIconAware(queryWithWhitespace, parseLabelWithIcons(element.saneLabel))) !== null && _b !== void 0 ? _b : undefined : undefined;\n        }\n        const descriptionHighlights = this.matchOnDescription ? (_c = matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDescription || ''))) !== null && _c !== void 0 ? _c : undefined : undefined;\n        const detailHighlights = this.matchOnDetail ? (_d = matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDetail || ''))) !== null && _d !== void 0 ? _d : undefined : undefined;\n        if (labelHighlights || descriptionHighlights || detailHighlights) {\n          element.labelHighlights = labelHighlights;\n          element.descriptionHighlights = descriptionHighlights;\n          element.detailHighlights = detailHighlights;\n          element.hidden = false;\n        } else {\n          element.labelHighlights = undefined;\n          element.descriptionHighlights = undefined;\n          element.detailHighlights = undefined;\n          element.hidden = element.item ? !element.item.alwaysShow : true;\n        }\n        // Ensure separators are filtered out first before deciding if we need to bring them back\n        if (element.item) {\n          element.separator = undefined;\n        } else if (element.separator) {\n          element.hidden = true;\n        }\n        // we can show the separator unless the list gets sorted by match\n        if (!this.sortByLabel) {\n          const previous = element.index && this._inputElements[element.index - 1];\n          currentSeparator = previous && previous.type === 'separator' ? previous : currentSeparator;\n          if (currentSeparator && !element.hidden) {\n            element.separator = currentSeparator;\n            currentSeparator = undefined;\n          }\n        }\n      });\n    }\n    const shownElements = this._elementTree.filter(element => !element.hidden);\n    // Sort by value\n    if (this.sortByLabel && query) {\n      const normalizedSearchValue = query.toLowerCase();\n      shownElements.sort((a, b) => {\n        return compareEntries(a, b, normalizedSearchValue);\n      });\n    }\n    let currentSeparator;\n    const finalElements = shownElements.reduce((result, element, index) => {\n      if (element instanceof QuickPickItemElement) {\n        if (currentSeparator) {\n          currentSeparator.children.push(element);\n        } else {\n          result.push(element);\n        }\n      } else if (element instanceof QuickPickSeparatorElement) {\n        element.children = [];\n        currentSeparator = element;\n        result.push(element);\n      }\n      return result;\n    }, new Array());\n    const elements = new Array();\n    for (const element of finalElements) {\n      if (element instanceof QuickPickSeparatorElement) {\n        elements.push({\n          element,\n          collapsible: false,\n          collapsed: false,\n          children: element.children.map(e => ({\n            element: e,\n            collapsible: false,\n            collapsed: false\n          }))\n        });\n      } else {\n        elements.push({\n          element,\n          collapsible: false,\n          collapsed: false\n        });\n      }\n    }\n    this._tree.setChildren(null, elements);\n    this._tree.layout();\n    this._onChangedAllVisibleChecked.fire(this.getAllVisibleChecked());\n    this._onChangedVisibleCount.fire(shownElements.length);\n    return true;\n  }\n  toggleCheckbox() {\n    try {\n      this._shouldFireCheckedEvents = false;\n      const elements = this._tree.getFocus().filter(e => e instanceof QuickPickItemElement);\n      const allChecked = this._allVisibleChecked(elements);\n      for (const element of elements) {\n        if (!element.checkboxDisabled) {\n          // Would fire an event if we didn't have the flag set\n          element.checked = !allChecked;\n        }\n      }\n    } finally {\n      this._shouldFireCheckedEvents = true;\n      this._fireCheckedEvents();\n    }\n  }\n  display(display) {\n    this._container.style.display = display ? '' : 'none';\n  }\n  isDisplayed() {\n    return this._container.style.display !== 'none';\n  }\n  style(styles) {\n    this._tree.style(styles);\n  }\n  toggleHover() {\n    const focused = this._tree.getFocus()[0];\n    if (!(focused === null || focused === void 0 ? void 0 : focused.saneTooltip) || !(focused instanceof QuickPickItemElement)) {\n      return;\n    }\n    // if there's a hover already, hide it (toggle off)\n    if (this._lastHover && !this._lastHover.isDisposed) {\n      this._lastHover.dispose();\n      return;\n    }\n    // If there is no hover, show it (toggle on)\n    this.showHover(focused);\n    const store = new DisposableStore();\n    store.add(this._tree.onDidChangeFocus(e => {\n      if (e.elements[0] instanceof QuickPickItemElement) {\n        this.showHover(e.elements[0]);\n      }\n    }));\n    if (this._lastHover) {\n      store.add(this._lastHover);\n    }\n    this._elementDisposable.add(store);\n  }\n  //#endregion\n  //#region private methods\n  _allVisibleChecked(elements) {\n    let whenNoneVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    for (let i = 0, n = elements.length; i < n; i++) {\n      const element = elements[i];\n      if (!element.hidden) {\n        if (!element.checked) {\n          return false;\n        } else {\n          whenNoneVisible = true;\n        }\n      }\n    }\n    return whenNoneVisible;\n  }\n  _fireCheckedEvents() {\n    if (!this._shouldFireCheckedEvents) {\n      return;\n    }\n    this._onChangedAllVisibleChecked.fire(this.getAllVisibleChecked());\n    this._onChangedCheckedCount.fire(this.getCheckedCount());\n    this._onChangedCheckedElements.fire(this.getCheckedElements());\n  }\n  fireButtonTriggered(event) {\n    this._onButtonTriggered.fire(event);\n  }\n  fireSeparatorButtonTriggered(event) {\n    this._onSeparatorButtonTriggered.fire(event);\n  }\n  /**\n   * Disposes of the hover and shows a new one for the given index if it has a tooltip.\n   * @param element The element to show the hover for\n   */\n  showHover(element) {\n    var _a, _b, _c;\n    if (this._lastHover && !this._lastHover.isDisposed) {\n      (_b = (_a = this.hoverDelegate).onDidHideHover) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_c = this._lastHover) === null || _c === void 0 ? void 0 : _c.dispose();\n    }\n    if (!element.element || !element.saneTooltip) {\n      return;\n    }\n    this._lastHover = this.hoverDelegate.showHover({\n      content: element.saneTooltip,\n      target: element.element,\n      linkHandler: url => {\n        this.linkOpenerDelegate(url);\n      },\n      appearance: {\n        showPointer: true\n      },\n      container: this._container,\n      position: {\n        hoverPosition: 1 /* HoverPosition.RIGHT */\n      }\n    }, false);\n  }\n};\n__decorate([memoize], QuickInputTree.prototype, \"onDidChangeFocus\", null);\n__decorate([memoize], QuickInputTree.prototype, \"onDidChangeSelection\", null);\nQuickInputTree = __decorate([__param(4, IInstantiationService), __param(5, IAccessibilityService)], QuickInputTree);\nexport { QuickInputTree };\nfunction matchesContiguousIconAware(query, target) {\n  const {\n    text,\n    iconOffsets\n  } = target;\n  // Return early if there are no icon markers in the word to match against\n  if (!iconOffsets || iconOffsets.length === 0) {\n    return matchesContiguous(query, text);\n  }\n  // Trim the word to match against because it could have leading\n  // whitespace now if the word started with an icon\n  const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n  const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n  // match on value without icon\n  const matches = matchesContiguous(query, wordToMatchAgainstWithoutIconsTrimmed);\n  // Map matches back to offsets with icon and trimming\n  if (matches) {\n    for (const match of matches) {\n      const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n      match.start += iconOffset;\n      match.end += iconOffset;\n    }\n  }\n  return matches;\n}\nfunction matchesContiguous(word, wordToMatchAgainst) {\n  const matchIndex = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n  if (matchIndex !== -1) {\n    return [{\n      start: matchIndex,\n      end: matchIndex + word.length\n    }];\n  }\n  return null;\n}\nfunction compareEntries(elementA, elementB, lookFor) {\n  const labelHighlightsA = elementA.labelHighlights || [];\n  const labelHighlightsB = elementB.labelHighlights || [];\n  if (labelHighlightsA.length && !labelHighlightsB.length) {\n    return -1;\n  }\n  if (!labelHighlightsA.length && labelHighlightsB.length) {\n    return 1;\n  }\n  if (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\n    return 0;\n  }\n  return compareAnything(elementA.saneSortLabel, elementB.saneSortLabel, lookFor);\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","QuickPickItemElementRenderer_1","dom","Emitter","Event","localize","IInstantiationService","WorkbenchObjectTree","IThemeService","Disposable","DisposableStore","StandardKeyboardEvent","OS","memoize","IconLabel","KeybindingLabel","ActionBar","isDark","URI","quickInputButtonToAction","Lazy","getCodiconAriaLabel","matchesFuzzyIconAware","parseLabelWithIcons","compareAnything","ltrim","RenderIndentGuides","ThrottledDelayer","isCancellationError","QuickPickFocus","IAccessibilityService","$","BaseQuickPickItemElement","constructor","index","hasCheckbox","mainItem","_hidden","_init","_a","saneLabel","label","saneSortLabel","text","trim","saneAriaLabel","ariaLabel","saneDescription","saneDetail","map","s","filter","join","_saneDescription","description","_saneTooltip","tooltip","value","element","_element","hidden","_saneDetail","saneTooltip","labelHighlights","_labelHighlights","descriptionHighlights","_descriptionHighlights","detailHighlights","_detailHighlights","QuickPickItemElement","fireButtonTriggered","_onChecked","item","_separator","_b","_c","_checked","onChecked","event","e","checked","None","detail","highlights","separator","fire","checkboxDisabled","disabled","QuickPickSeparatorFocusReason","QuickPickSeparatorElement","fireSeparatorButtonTriggered","children","Array","focusInsideSeparator","NONE","QuickInputItemDelegate","getHeight","getTemplateId","QuickPickItemElementRenderer","ID","QuickPickSeparatorElementRenderer","QuickInputAccessibilityProvider","getWidgetAriaLabel","getAriaLabel","getWidgetRole","getRole","isChecked","undefined","onDidChange","BaseQuickInputListRenderer","hoverDelegate","renderTemplate","container","data","create","toDisposeElement","toDisposeTemplate","entry","append","add","addStandardDisposableListener","EventType","CLICK","checkbox","offsetParent","preventDefault","type","rows","row1","row2","supportHighlights","supportDescriptionHighlights","supportIcons","icon","prepend","keybindingContainer","keybinding","detailContainer","actionBar","domNode","classList","disposeTemplate","dispose","disposeElement","_index","clear","themeService","_itemsWithSeparatorsFrequency","Map","templateId","CHANGE","renderElement","node","iconPath","getColorTheme","dark","light","iconUrl","revive","className","style","backgroundImage","asCSSUrl","iconClass","descriptionTitle","markdown","supportThemeIcons","markdownNotSupportedFallback","options","matches","descriptionMatches","labelEscapeNewLines","extraClasses","iconClasses","italic","strikethrough","remove","setLabel","set","title","display","textContent","addItemWithSeparator","toggle","buttons","push","button","removeItemWithSeparator","isItemWithSeparatorVisible","has","get","frequency","delete","_visibleSeparatorsFrequency","visibleSeparators","keys","isSeparatorVisible","addSeparator","removeSeparator","QuickInputTree","parent","linkOpenerDelegate","id","instantiationService","accessibilityService","_onKeyDown","_onLeave","onLeave","_onChangedAllVisibleChecked","onChangedAllVisibleChecked","_onChangedCheckedCount","onChangedCheckedCount","_onChangedVisibleCount","onChangedVisibleCount","_onChangedCheckedElements","onChangedCheckedElements","_onButtonTriggered","onButtonTriggered","_onSeparatorButtonTriggered","onSeparatorButtonTriggered","_elementChecked","_inputElements","_elementTree","_itemElements","_elementDisposable","_register","_shouldFireCheckedEvents","_matchOnDescription","_matchOnDetail","_matchOnLabel","_matchOnLabelMode","_sortByLabel","_shouldLoop","_container","_separatorRenderer","_itemRenderer","createInstance","_tree","accessibilityProvider","setRowLineHeight","multipleSelectionSupport","hideTwistiesOfChildlessElements","renderIndentGuides","findWidgetEnabled","indent","horizontalScrolling","allowNonCollapsibleParents","alwaysConsumeMouseWheel","getHTMLElement","_registerListeners","onDidChangeFocus","elements","onDidChangeSelection","items","browserEvent","scrollTop","enabled","pointerEvents","matchOnDescription","matchOnDetail","matchOnLabel","matchOnLabelMode","sortByLabel","shouldLoop","_registerOnKeyDown","_registerOnContainerClick","_registerOnMouseMiddleClick","_registerOnElementChecked","_registerOnContextMenu","_registerHoverListeners","_registerSelectionChangeListener","_registerSeparatorActionShowingListeners","onKeyDown","keyCode","toggleCheckbox","addDisposableListener","x","y","AUXCLICK","_","_fireCheckedEvents","onContextMenu","setSelection","delayer","delay","onMouseOver","isHTMLAnchorElement","cancel","relatedTarget","isAncestor","trigger","showHover","onMouseOut","getParentElement","currentActive","ACTIVE_ITEM","rerender","currentMouse","MOUSE_HOVER","elementsWithoutSeparators","setFocus","reveal","getAllVisibleChecked","_allVisibleChecked","getCheckedCount","getVisibleCount","setAllVisibleChecked","forEach","setElements","inputElements","contains","currentSeparatorElement","reduce","result","previous","qpi","visibleCount","collapsible","collapsed","setChildren","isScreenReaderOptimized","setTimeout","focusedElement","querySelector","parentNode","nextSibling","removeChild","insertBefore","setFocusedElements","find","focused","getFocus","getActiveDescendant","getAttribute","setSelectedElements","getCheckedElements","setCheckedElements","Set","focus","what","Second","First","focusFirst","Last","scrollHeight","Next","prevFocus","focusNext","currentFocus","Previous","focusPrevious","NextPage","focusNextPage","PreviousPage","focusPreviousPage","NextSeparator","foundSeparatorAsItem","before","after","PreviousSeparator","focusElement","foundSeparator","clearFocus","domFocus","layout","maxHeight","Math","floor","query","queryWithWhitespace","currentSeparator","_d","matchesContiguousIconAware","alwaysShow","shownElements","normalizedSearchValue","toLowerCase","sort","a","b","compareEntries","finalElements","allChecked","isDisplayed","styles","toggleHover","_lastHover","isDisposed","store","whenNoneVisible","n","onDidHideHover","call","content","linkHandler","url","appearance","showPointer","position","hoverPosition","prototype","iconOffsets","matchesContiguous","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","match","iconOffset","start","end","word","wordToMatchAgainst","matchIndex","indexOf","elementA","elementB","lookFor","labelHighlightsA","labelHighlightsB"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar QuickPickItemElementRenderer_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../list/browser/listService.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { memoize } from '../../../base/common/decorators.js';\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { quickInputButtonToAction } from './quickInputUtils.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { getCodiconAriaLabel, matchesFuzzyIconAware, parseLabelWithIcons } from '../../../base/common/iconLabels.js';\nimport { compareAnything } from '../../../base/common/comparers.js';\nimport { ltrim } from '../../../base/common/strings.js';\nimport { RenderIndentGuides } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { ThrottledDelayer } from '../../../base/common/async.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { QuickPickFocus } from '../common/quickInput.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nconst $ = dom.$;\nclass BaseQuickPickItemElement {\n    constructor(index, hasCheckbox, mainItem) {\n        this.index = index;\n        this.hasCheckbox = hasCheckbox;\n        this._hidden = false;\n        this._init = new Lazy(() => {\n            var _a;\n            const saneLabel = (_a = mainItem.label) !== null && _a !== void 0 ? _a : '';\n            const saneSortLabel = parseLabelWithIcons(saneLabel).text.trim();\n            const saneAriaLabel = mainItem.ariaLabel || [saneLabel, this.saneDescription, this.saneDetail]\n                .map(s => getCodiconAriaLabel(s))\n                .filter(s => !!s)\n                .join(', ');\n            return {\n                saneLabel,\n                saneSortLabel,\n                saneAriaLabel\n            };\n        });\n        this._saneDescription = mainItem.description;\n        this._saneTooltip = mainItem.tooltip;\n    }\n    // #region Lazy Getters\n    get saneLabel() {\n        return this._init.value.saneLabel;\n    }\n    get saneSortLabel() {\n        return this._init.value.saneSortLabel;\n    }\n    get saneAriaLabel() {\n        return this._init.value.saneAriaLabel;\n    }\n    get element() {\n        return this._element;\n    }\n    set element(value) {\n        this._element = value;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n    }\n    get saneDescription() {\n        return this._saneDescription;\n    }\n    set saneDescription(value) {\n        this._saneDescription = value;\n    }\n    get saneDetail() {\n        return this._saneDetail;\n    }\n    set saneDetail(value) {\n        this._saneDetail = value;\n    }\n    get saneTooltip() {\n        return this._saneTooltip;\n    }\n    set saneTooltip(value) {\n        this._saneTooltip = value;\n    }\n    get labelHighlights() {\n        return this._labelHighlights;\n    }\n    set labelHighlights(value) {\n        this._labelHighlights = value;\n    }\n    get descriptionHighlights() {\n        return this._descriptionHighlights;\n    }\n    set descriptionHighlights(value) {\n        this._descriptionHighlights = value;\n    }\n    get detailHighlights() {\n        return this._detailHighlights;\n    }\n    set detailHighlights(value) {\n        this._detailHighlights = value;\n    }\n}\nclass QuickPickItemElement extends BaseQuickPickItemElement {\n    constructor(index, hasCheckbox, fireButtonTriggered, _onChecked, item, _separator) {\n        var _a, _b, _c;\n        super(index, hasCheckbox, item);\n        this.fireButtonTriggered = fireButtonTriggered;\n        this._onChecked = _onChecked;\n        this.item = item;\n        this._separator = _separator;\n        this._checked = false;\n        this.onChecked = hasCheckbox\n            ? Event.map(Event.filter(this._onChecked.event, e => e.element === this), e => e.checked)\n            : Event.None;\n        this._saneDetail = item.detail;\n        this._labelHighlights = (_a = item.highlights) === null || _a === void 0 ? void 0 : _a.label;\n        this._descriptionHighlights = (_b = item.highlights) === null || _b === void 0 ? void 0 : _b.description;\n        this._detailHighlights = (_c = item.highlights) === null || _c === void 0 ? void 0 : _c.detail;\n    }\n    get separator() {\n        return this._separator;\n    }\n    set separator(value) {\n        this._separator = value;\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._onChecked.fire({ element: this, checked: value });\n        }\n    }\n    get checkboxDisabled() {\n        return !!this.item.disabled;\n    }\n}\nvar QuickPickSeparatorFocusReason;\n(function (QuickPickSeparatorFocusReason) {\n    /**\n     * No item is hovered or active\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * Some item within this section is hovered\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"MOUSE_HOVER\"] = 1] = \"MOUSE_HOVER\";\n    /**\n     * Some item within this section is active\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"ACTIVE_ITEM\"] = 2] = \"ACTIVE_ITEM\";\n})(QuickPickSeparatorFocusReason || (QuickPickSeparatorFocusReason = {}));\nclass QuickPickSeparatorElement extends BaseQuickPickItemElement {\n    constructor(index, fireSeparatorButtonTriggered, separator) {\n        super(index, false, separator);\n        this.fireSeparatorButtonTriggered = fireSeparatorButtonTriggered;\n        this.separator = separator;\n        this.children = new Array();\n        /**\n         * If this item is >0, it means that there is some item in the list that is either:\n         * * hovered over\n         * * active\n         */\n        this.focusInsideSeparator = QuickPickSeparatorFocusReason.NONE;\n    }\n}\nclass QuickInputItemDelegate {\n    getHeight(element) {\n        if (element instanceof QuickPickSeparatorElement) {\n            return 30;\n        }\n        return element.saneDetail ? 44 : 22;\n    }\n    getTemplateId(element) {\n        if (element instanceof QuickPickItemElement) {\n            return QuickPickItemElementRenderer.ID;\n        }\n        else {\n            return QuickPickSeparatorElementRenderer.ID;\n        }\n    }\n}\nclass QuickInputAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return localize('quickInput', \"Quick Input\");\n    }\n    getAriaLabel(element) {\n        var _a;\n        return ((_a = element.separator) === null || _a === void 0 ? void 0 : _a.label)\n            ? `${element.saneAriaLabel}, ${element.separator.label}`\n            : element.saneAriaLabel;\n    }\n    getWidgetRole() {\n        return 'listbox';\n    }\n    getRole(element) {\n        return element.hasCheckbox ? 'checkbox' : 'option';\n    }\n    isChecked(element) {\n        if (!element.hasCheckbox || !(element instanceof QuickPickItemElement)) {\n            return undefined;\n        }\n        return {\n            get value() { return element.checked; },\n            onDidChange: e => element.onChecked(() => e()),\n        };\n    }\n}\nclass BaseQuickInputListRenderer {\n    constructor(hoverDelegate) {\n        this.hoverDelegate = hoverDelegate;\n    }\n    // TODO: only do the common stuff here and have a subclass handle their specific stuff\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.toDisposeElement = new DisposableStore();\n        data.toDisposeTemplate = new DisposableStore();\n        data.entry = dom.append(container, $('.quick-input-list-entry'));\n        // Checkbox\n        const label = dom.append(data.entry, $('label.quick-input-list-label'));\n        data.toDisposeTemplate.add(dom.addStandardDisposableListener(label, dom.EventType.CLICK, e => {\n            if (!data.checkbox.offsetParent) { // If checkbox not visible:\n                e.preventDefault(); // Prevent toggle of checkbox when it is immediately shown afterwards. #91740\n            }\n        }));\n        data.checkbox = dom.append(label, $('input.quick-input-list-checkbox'));\n        data.checkbox.type = 'checkbox';\n        // Rows\n        const rows = dom.append(label, $('.quick-input-list-rows'));\n        const row1 = dom.append(rows, $('.quick-input-list-row'));\n        const row2 = dom.append(rows, $('.quick-input-list-row'));\n        // Label\n        data.label = new IconLabel(row1, { supportHighlights: true, supportDescriptionHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n        data.toDisposeTemplate.add(data.label);\n        data.icon = dom.prepend(data.label.element, $('.quick-input-list-icon'));\n        // Keybinding\n        const keybindingContainer = dom.append(row1, $('.quick-input-list-entry-keybinding'));\n        data.keybinding = new KeybindingLabel(keybindingContainer, OS);\n        data.toDisposeTemplate.add(data.keybinding);\n        // Detail\n        const detailContainer = dom.append(row2, $('.quick-input-list-label-meta'));\n        data.detail = new IconLabel(detailContainer, { supportHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n        data.toDisposeTemplate.add(data.detail);\n        // Separator\n        data.separator = dom.append(data.entry, $('.quick-input-list-separator'));\n        // Actions\n        data.actionBar = new ActionBar(data.entry, this.hoverDelegate ? { hoverDelegate: this.hoverDelegate } : undefined);\n        data.actionBar.domNode.classList.add('quick-input-list-entry-action-bar');\n        data.toDisposeTemplate.add(data.actionBar);\n        return data;\n    }\n    disposeTemplate(data) {\n        data.toDisposeElement.dispose();\n        data.toDisposeTemplate.dispose();\n    }\n    disposeElement(_element, _index, data) {\n        data.toDisposeElement.clear();\n        data.actionBar.clear();\n    }\n}\nlet QuickPickItemElementRenderer = QuickPickItemElementRenderer_1 = class QuickPickItemElementRenderer extends BaseQuickInputListRenderer {\n    constructor(hoverDelegate, themeService) {\n        super(hoverDelegate);\n        this.themeService = themeService;\n        // Follow what we do in the separator renderer\n        this._itemsWithSeparatorsFrequency = new Map();\n    }\n    get templateId() {\n        return QuickPickItemElementRenderer_1.ID;\n    }\n    renderTemplate(container) {\n        const data = super.renderTemplate(container);\n        data.toDisposeTemplate.add(dom.addStandardDisposableListener(data.checkbox, dom.EventType.CHANGE, e => {\n            data.element.checked = data.checkbox.checked;\n        }));\n        return data;\n    }\n    renderElement(node, index, data) {\n        var _a, _b, _c;\n        const element = node.element;\n        data.element = element;\n        element.element = (_a = data.entry) !== null && _a !== void 0 ? _a : undefined;\n        const mainItem = element.item;\n        data.checkbox.checked = element.checked;\n        data.toDisposeElement.add(element.onChecked(checked => data.checkbox.checked = checked));\n        data.checkbox.disabled = element.checkboxDisabled;\n        const { labelHighlights, descriptionHighlights, detailHighlights } = element;\n        // Icon\n        if (mainItem.iconPath) {\n            const icon = isDark(this.themeService.getColorTheme().type) ? mainItem.iconPath.dark : ((_b = mainItem.iconPath.light) !== null && _b !== void 0 ? _b : mainItem.iconPath.dark);\n            const iconUrl = URI.revive(icon);\n            data.icon.className = 'quick-input-list-icon';\n            data.icon.style.backgroundImage = dom.asCSSUrl(iconUrl);\n        }\n        else {\n            data.icon.style.backgroundImage = '';\n            data.icon.className = mainItem.iconClass ? `quick-input-list-icon ${mainItem.iconClass}` : '';\n        }\n        // Label\n        let descriptionTitle;\n        // if we have a tooltip, that will be the hover,\n        // with the saneDescription as fallback if it\n        // is defined\n        if (!element.saneTooltip && element.saneDescription) {\n            descriptionTitle = {\n                markdown: {\n                    value: element.saneDescription,\n                    supportThemeIcons: true\n                },\n                markdownNotSupportedFallback: element.saneDescription\n            };\n        }\n        const options = {\n            matches: labelHighlights || [],\n            // If we have a tooltip, we want that to be shown and not any other hover\n            descriptionTitle,\n            descriptionMatches: descriptionHighlights || [],\n            labelEscapeNewLines: true\n        };\n        options.extraClasses = mainItem.iconClasses;\n        options.italic = mainItem.italic;\n        options.strikethrough = mainItem.strikethrough;\n        data.entry.classList.remove('quick-input-list-separator-as-item');\n        data.label.setLabel(element.saneLabel, element.saneDescription, options);\n        // Keybinding\n        data.keybinding.set(mainItem.keybinding);\n        // Detail\n        if (element.saneDetail) {\n            let title;\n            // If we have a tooltip, we want that to be shown and not any other hover\n            if (!element.saneTooltip) {\n                title = {\n                    markdown: {\n                        value: element.saneDetail,\n                        supportThemeIcons: true\n                    },\n                    markdownNotSupportedFallback: element.saneDetail\n                };\n            }\n            data.detail.element.style.display = '';\n            data.detail.setLabel(element.saneDetail, undefined, {\n                matches: detailHighlights,\n                title,\n                labelEscapeNewLines: true\n            });\n        }\n        else {\n            data.detail.element.style.display = 'none';\n        }\n        // Separator\n        if ((_c = element.separator) === null || _c === void 0 ? void 0 : _c.label) {\n            data.separator.textContent = element.separator.label;\n            data.separator.style.display = '';\n            this.addItemWithSeparator(element);\n        }\n        else {\n            data.separator.style.display = 'none';\n        }\n        data.entry.classList.toggle('quick-input-list-separator-border', !!element.separator);\n        // Actions\n        const buttons = mainItem.buttons;\n        if (buttons && buttons.length) {\n            data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireButtonTriggered({ button, item: element.item }))), { icon: true, label: false });\n            data.entry.classList.add('has-actions');\n        }\n        else {\n            data.entry.classList.remove('has-actions');\n        }\n    }\n    disposeElement(element, _index, data) {\n        this.removeItemWithSeparator(element.element);\n        super.disposeElement(element, _index, data);\n    }\n    isItemWithSeparatorVisible(item) {\n        return this._itemsWithSeparatorsFrequency.has(item);\n    }\n    addItemWithSeparator(item) {\n        this._itemsWithSeparatorsFrequency.set(item, (this._itemsWithSeparatorsFrequency.get(item) || 0) + 1);\n    }\n    removeItemWithSeparator(item) {\n        const frequency = this._itemsWithSeparatorsFrequency.get(item) || 0;\n        if (frequency > 1) {\n            this._itemsWithSeparatorsFrequency.set(item, frequency - 1);\n        }\n        else {\n            this._itemsWithSeparatorsFrequency.delete(item);\n        }\n    }\n};\nQuickPickItemElementRenderer.ID = 'quickpickitem';\nQuickPickItemElementRenderer = QuickPickItemElementRenderer_1 = __decorate([\n    __param(1, IThemeService)\n], QuickPickItemElementRenderer);\nclass QuickPickSeparatorElementRenderer extends BaseQuickInputListRenderer {\n    constructor() {\n        super(...arguments);\n        // This is a frequency map because sticky scroll re-uses the same renderer to render a second\n        // instance of the same separator.\n        this._visibleSeparatorsFrequency = new Map();\n    }\n    get templateId() {\n        return QuickPickSeparatorElementRenderer.ID;\n    }\n    get visibleSeparators() {\n        return [...this._visibleSeparatorsFrequency.keys()];\n    }\n    isSeparatorVisible(separator) {\n        return this._visibleSeparatorsFrequency.has(separator);\n    }\n    renderElement(node, index, data) {\n        var _a;\n        const element = node.element;\n        data.element = element;\n        element.element = (_a = data.entry) !== null && _a !== void 0 ? _a : undefined;\n        element.element.classList.toggle('focus-inside', !!element.focusInsideSeparator);\n        const mainItem = element.separator;\n        const { labelHighlights, descriptionHighlights, detailHighlights } = element;\n        // Icon\n        data.icon.style.backgroundImage = '';\n        data.icon.className = '';\n        // Label\n        let descriptionTitle;\n        // if we have a tooltip, that will be the hover,\n        // with the saneDescription as fallback if it\n        // is defined\n        if (!element.saneTooltip && element.saneDescription) {\n            descriptionTitle = {\n                markdown: {\n                    value: element.saneDescription,\n                    supportThemeIcons: true\n                },\n                markdownNotSupportedFallback: element.saneDescription\n            };\n        }\n        const options = {\n            matches: labelHighlights || [],\n            // If we have a tooltip, we want that to be shown and not any other hover\n            descriptionTitle,\n            descriptionMatches: descriptionHighlights || [],\n            labelEscapeNewLines: true\n        };\n        data.entry.classList.add('quick-input-list-separator-as-item');\n        data.label.setLabel(element.saneLabel, element.saneDescription, options);\n        // Detail\n        if (element.saneDetail) {\n            let title;\n            // If we have a tooltip, we want that to be shown and not any other hover\n            if (!element.saneTooltip) {\n                title = {\n                    markdown: {\n                        value: element.saneDetail,\n                        supportThemeIcons: true\n                    },\n                    markdownNotSupportedFallback: element.saneDetail\n                };\n            }\n            data.detail.element.style.display = '';\n            data.detail.setLabel(element.saneDetail, undefined, {\n                matches: detailHighlights,\n                title,\n                labelEscapeNewLines: true\n            });\n        }\n        else {\n            data.detail.element.style.display = 'none';\n        }\n        // Separator\n        data.separator.style.display = 'none';\n        data.entry.classList.add('quick-input-list-separator-border');\n        // Actions\n        const buttons = mainItem.buttons;\n        if (buttons && buttons.length) {\n            data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireSeparatorButtonTriggered({ button, separator: element.separator }))), { icon: true, label: false });\n            data.entry.classList.add('has-actions');\n        }\n        else {\n            data.entry.classList.remove('has-actions');\n        }\n        this.addSeparator(element);\n    }\n    disposeElement(element, _index, data) {\n        var _a;\n        this.removeSeparator(element.element);\n        if (!this.isSeparatorVisible(element.element)) {\n            (_a = element.element.element) === null || _a === void 0 ? void 0 : _a.classList.remove('focus-inside');\n        }\n        super.disposeElement(element, _index, data);\n    }\n    addSeparator(separator) {\n        this._visibleSeparatorsFrequency.set(separator, (this._visibleSeparatorsFrequency.get(separator) || 0) + 1);\n    }\n    removeSeparator(separator) {\n        const frequency = this._visibleSeparatorsFrequency.get(separator) || 0;\n        if (frequency > 1) {\n            this._visibleSeparatorsFrequency.set(separator, frequency - 1);\n        }\n        else {\n            this._visibleSeparatorsFrequency.delete(separator);\n        }\n    }\n}\nQuickPickSeparatorElementRenderer.ID = 'quickpickseparator';\nlet QuickInputTree = class QuickInputTree extends Disposable {\n    constructor(parent, hoverDelegate, linkOpenerDelegate, id, instantiationService, accessibilityService) {\n        super();\n        this.parent = parent;\n        this.hoverDelegate = hoverDelegate;\n        this.linkOpenerDelegate = linkOpenerDelegate;\n        this.accessibilityService = accessibilityService;\n        this._onKeyDown = new Emitter();\n        this._onLeave = new Emitter();\n        /**\n         * Event that is fired when the tree would no longer have focus.\n        */\n        this.onLeave = this._onLeave.event;\n        this._onChangedAllVisibleChecked = new Emitter();\n        this.onChangedAllVisibleChecked = this._onChangedAllVisibleChecked.event;\n        this._onChangedCheckedCount = new Emitter();\n        this.onChangedCheckedCount = this._onChangedCheckedCount.event;\n        this._onChangedVisibleCount = new Emitter();\n        this.onChangedVisibleCount = this._onChangedVisibleCount.event;\n        this._onChangedCheckedElements = new Emitter();\n        this.onChangedCheckedElements = this._onChangedCheckedElements.event;\n        this._onButtonTriggered = new Emitter();\n        this.onButtonTriggered = this._onButtonTriggered.event;\n        this._onSeparatorButtonTriggered = new Emitter();\n        this.onSeparatorButtonTriggered = this._onSeparatorButtonTriggered.event;\n        this._elementChecked = new Emitter();\n        this._inputElements = new Array();\n        this._elementTree = new Array();\n        this._itemElements = new Array();\n        // Elements that apply to the current set of elements\n        this._elementDisposable = this._register(new DisposableStore());\n        // This is used to prevent setting the checked state of a single element from firing the checked events\n        // so that we can batch them together. This can probably be improved by handling events differently,\n        // but this works for now. An observable would probably be ideal for this.\n        this._shouldFireCheckedEvents = true;\n        this._matchOnDescription = false;\n        this._matchOnDetail = false;\n        this._matchOnLabel = true;\n        this._matchOnLabelMode = 'fuzzy';\n        this._sortByLabel = true;\n        this._shouldLoop = true;\n        this._container = dom.append(this.parent, $('.quick-input-list'));\n        this._separatorRenderer = new QuickPickSeparatorElementRenderer(hoverDelegate);\n        this._itemRenderer = instantiationService.createInstance(QuickPickItemElementRenderer, hoverDelegate);\n        this._tree = this._register(instantiationService.createInstance((WorkbenchObjectTree), 'QuickInput', this._container, new QuickInputItemDelegate(), [this._itemRenderer, this._separatorRenderer], {\n            accessibilityProvider: new QuickInputAccessibilityProvider(),\n            setRowLineHeight: false,\n            multipleSelectionSupport: false,\n            hideTwistiesOfChildlessElements: true,\n            renderIndentGuides: RenderIndentGuides.None,\n            findWidgetEnabled: false,\n            indent: 0,\n            horizontalScrolling: false,\n            allowNonCollapsibleParents: true,\n            alwaysConsumeMouseWheel: true\n        }));\n        this._tree.getHTMLElement().id = id;\n        this._registerListeners();\n    }\n    //#region public getters/setters\n    get onDidChangeFocus() {\n        return Event.map(this._tree.onDidChangeFocus, e => e.elements.filter((e) => e instanceof QuickPickItemElement).map(e => e.item));\n    }\n    get onDidChangeSelection() {\n        return Event.map(this._tree.onDidChangeSelection, e => ({\n            items: e.elements.filter((e) => e instanceof QuickPickItemElement).map(e => e.item),\n            event: e.browserEvent\n        }));\n    }\n    get scrollTop() {\n        return this._tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this._tree.scrollTop = scrollTop;\n    }\n    get ariaLabel() {\n        return this._tree.ariaLabel;\n    }\n    set ariaLabel(label) {\n        this._tree.ariaLabel = label !== null && label !== void 0 ? label : '';\n    }\n    set enabled(value) {\n        this._tree.getHTMLElement().style.pointerEvents = value ? '' : 'none';\n    }\n    get matchOnDescription() {\n        return this._matchOnDescription;\n    }\n    set matchOnDescription(value) {\n        this._matchOnDescription = value;\n    }\n    get matchOnDetail() {\n        return this._matchOnDetail;\n    }\n    set matchOnDetail(value) {\n        this._matchOnDetail = value;\n    }\n    get matchOnLabel() {\n        return this._matchOnLabel;\n    }\n    set matchOnLabel(value) {\n        this._matchOnLabel = value;\n    }\n    get matchOnLabelMode() {\n        return this._matchOnLabelMode;\n    }\n    set matchOnLabelMode(value) {\n        this._matchOnLabelMode = value;\n    }\n    get sortByLabel() {\n        return this._sortByLabel;\n    }\n    set sortByLabel(value) {\n        this._sortByLabel = value;\n    }\n    get shouldLoop() {\n        return this._shouldLoop;\n    }\n    set shouldLoop(value) {\n        this._shouldLoop = value;\n    }\n    //#endregion\n    //#region register listeners\n    _registerListeners() {\n        this._registerOnKeyDown();\n        this._registerOnContainerClick();\n        this._registerOnMouseMiddleClick();\n        this._registerOnElementChecked();\n        this._registerOnContextMenu();\n        this._registerHoverListeners();\n        this._registerSelectionChangeListener();\n        this._registerSeparatorActionShowingListeners();\n    }\n    _registerOnKeyDown() {\n        // TODO: Should this be added at a higher level?\n        this._register(this._tree.onKeyDown(e => {\n            const event = new StandardKeyboardEvent(e);\n            switch (event.keyCode) {\n                case 10 /* KeyCode.Space */:\n                    this.toggleCheckbox();\n                    break;\n            }\n            this._onKeyDown.fire(event);\n        }));\n    }\n    _registerOnContainerClick() {\n        this._register(dom.addDisposableListener(this._container, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space' on checkbox.\n                this._onLeave.fire();\n            }\n        }));\n    }\n    _registerOnMouseMiddleClick() {\n        this._register(dom.addDisposableListener(this._container, dom.EventType.AUXCLICK, e => {\n            if (e.button === 1) {\n                this._onLeave.fire();\n            }\n        }));\n    }\n    _registerOnElementChecked() {\n        this._register(this._elementChecked.event(_ => this._fireCheckedEvents()));\n    }\n    _registerOnContextMenu() {\n        this._register(this._tree.onContextMenu(e => {\n            if (e.element) {\n                e.browserEvent.preventDefault();\n                // we want to treat a context menu event as\n                // a gesture to open the item at the index\n                // since we do not have any context menu\n                // this enables for example macOS to Ctrl-\n                // click on an item to open it.\n                this._tree.setSelection([e.element]);\n            }\n        }));\n    }\n    _registerHoverListeners() {\n        const delayer = this._register(new ThrottledDelayer(this.hoverDelegate.delay));\n        this._register(this._tree.onMouseOver(async (e) => {\n            var _a;\n            // If we hover over an anchor element, we don't want to show the hover because\n            // the anchor may have a tooltip that we want to show instead.\n            if (dom.isHTMLAnchorElement(e.browserEvent.target)) {\n                delayer.cancel();\n                return;\n            }\n            if (\n            // anchors are an exception as called out above so we skip them here\n            !(dom.isHTMLAnchorElement(e.browserEvent.relatedTarget)) &&\n                // check if the mouse is still over the same element\n                dom.isAncestor(e.browserEvent.relatedTarget, (_a = e.element) === null || _a === void 0 ? void 0 : _a.element)) {\n                return;\n            }\n            try {\n                await delayer.trigger(async () => {\n                    if (e.element instanceof QuickPickItemElement) {\n                        this.showHover(e.element);\n                    }\n                });\n            }\n            catch (e) {\n                // Ignore cancellation errors due to mouse out\n                if (!isCancellationError(e)) {\n                    throw e;\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOut(e => {\n            var _a;\n            // onMouseOut triggers every time a new element has been moused over\n            // even if it's on the same list item. We only want one event, so we\n            // check if the mouse is still over the same element.\n            if (dom.isAncestor(e.browserEvent.relatedTarget, (_a = e.element) === null || _a === void 0 ? void 0 : _a.element)) {\n                return;\n            }\n            delayer.cancel();\n        }));\n    }\n    /**\n     * Register's focus change and mouse events so that we can track when items inside of a\n     * separator's section are focused or hovered so that we can display the separator's actions\n     */\n    _registerSeparatorActionShowingListeners() {\n        this._register(this._tree.onDidChangeFocus(e => {\n            const parent = e.elements[0]\n                ? this._tree.getParentElement(e.elements[0])\n                // treat null as focus lost and when we have no separators\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                const value = separator === parent;\n                // get bitness of ACTIVE_ITEM and check if it changed\n                const currentActive = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.ACTIVE_ITEM);\n                if (currentActive !== value) {\n                    if (value) {\n                        separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n                    }\n                    else {\n                        separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n                    }\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOver(e => {\n            const parent = e.element\n                ? this._tree.getParentElement(e.element)\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                if (separator !== parent) {\n                    continue;\n                }\n                const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n                if (!currentMouse) {\n                    separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.MOUSE_HOVER;\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOut(e => {\n            const parent = e.element\n                ? this._tree.getParentElement(e.element)\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                if (separator !== parent) {\n                    continue;\n                }\n                const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n                if (currentMouse) {\n                    separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.MOUSE_HOVER;\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n    }\n    _registerSelectionChangeListener() {\n        // When the user selects a separator, the separator will move to the top and focus will be\n        // set to the first element after the separator.\n        this._register(this._tree.onDidChangeSelection(e => {\n            const elementsWithoutSeparators = e.elements.filter((e) => e instanceof QuickPickItemElement);\n            if (elementsWithoutSeparators.length !== e.elements.length) {\n                if (e.elements.length === 1 && e.elements[0] instanceof QuickPickSeparatorElement) {\n                    this._tree.setFocus([e.elements[0].children[0]]);\n                    this._tree.reveal(e.elements[0], 0);\n                }\n                this._tree.setSelection(elementsWithoutSeparators);\n            }\n        }));\n    }\n    //#endregion\n    //#region public methods\n    getAllVisibleChecked() {\n        return this._allVisibleChecked(this._itemElements, false);\n    }\n    getCheckedCount() {\n        return this._itemElements.filter(element => element.checked).length;\n    }\n    getVisibleCount() {\n        return this._itemElements.filter(e => !e.hidden).length;\n    }\n    setAllVisibleChecked(checked) {\n        try {\n            this._shouldFireCheckedEvents = false;\n            this._itemElements.forEach(element => {\n                if (!element.hidden && !element.checkboxDisabled) {\n                    // Would fire an event if we didn't have the flag set\n                    element.checked = checked;\n                }\n            });\n        }\n        finally {\n            this._shouldFireCheckedEvents = true;\n            this._fireCheckedEvents();\n        }\n    }\n    setElements(inputElements) {\n        this._elementDisposable.clear();\n        this._inputElements = inputElements;\n        const hasCheckbox = this.parent.classList.contains('show-checkboxes');\n        let currentSeparatorElement;\n        this._itemElements = new Array();\n        this._elementTree = inputElements.reduce((result, item, index) => {\n            let element;\n            if (item.type === 'separator') {\n                if (!item.buttons) {\n                    // This separator will be rendered as a part of the list item\n                    return result;\n                }\n                currentSeparatorElement = new QuickPickSeparatorElement(index, (event) => this.fireSeparatorButtonTriggered(event), item);\n                element = currentSeparatorElement;\n            }\n            else {\n                const previous = index > 0 ? inputElements[index - 1] : undefined;\n                let separator;\n                if (previous && previous.type === 'separator' && !previous.buttons) {\n                    // Found an inline separator so we clear out the current separator element\n                    currentSeparatorElement = undefined;\n                    separator = previous;\n                }\n                const qpi = new QuickPickItemElement(index, hasCheckbox, (event) => this.fireButtonTriggered(event), this._elementChecked, item, separator);\n                this._itemElements.push(qpi);\n                if (currentSeparatorElement) {\n                    currentSeparatorElement.children.push(qpi);\n                    return result;\n                }\n                element = qpi;\n            }\n            result.push(element);\n            return result;\n        }, new Array());\n        const elements = new Array();\n        let visibleCount = 0;\n        for (const element of this._elementTree) {\n            if (element instanceof QuickPickSeparatorElement) {\n                elements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                    children: element.children.map(e => ({\n                        element: e,\n                        collapsible: false,\n                        collapsed: false,\n                    })),\n                });\n                visibleCount += element.children.length + 1; // +1 for the separator itself;\n            }\n            else {\n                elements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                });\n                visibleCount++;\n            }\n        }\n        this._tree.setChildren(null, elements);\n        this._onChangedVisibleCount.fire(visibleCount);\n        // Accessibility hack, unfortunately on next tick\n        // https://github.com/microsoft/vscode/issues/211976\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            setTimeout(() => {\n                const focusedElement = this._tree.getHTMLElement().querySelector(`.monaco-list-row.focused`);\n                const parent = focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.parentNode;\n                if (focusedElement && parent) {\n                    const nextSibling = focusedElement.nextSibling;\n                    parent.removeChild(focusedElement);\n                    parent.insertBefore(focusedElement, nextSibling);\n                }\n            }, 0);\n        }\n    }\n    setFocusedElements(items) {\n        const elements = items.map(item => this._itemElements.find(e => e.item === item))\n            .filter((e) => !!e);\n        this._tree.setFocus(elements);\n        if (items.length > 0) {\n            const focused = this._tree.getFocus()[0];\n            if (focused) {\n                this._tree.reveal(focused);\n            }\n        }\n    }\n    getActiveDescendant() {\n        return this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n    }\n    setSelectedElements(items) {\n        const elements = items.map(item => this._itemElements.find(e => e.item === item))\n            .filter((e) => !!e);\n        this._tree.setSelection(elements);\n    }\n    getCheckedElements() {\n        return this._itemElements.filter(e => e.checked)\n            .map(e => e.item);\n    }\n    setCheckedElements(items) {\n        try {\n            this._shouldFireCheckedEvents = false;\n            const checked = new Set();\n            for (const item of items) {\n                checked.add(item);\n            }\n            for (const element of this._itemElements) {\n                // Would fire an event if we didn't have the flag set\n                element.checked = checked.has(element.item);\n            }\n        }\n        finally {\n            this._shouldFireCheckedEvents = true;\n            this._fireCheckedEvents();\n        }\n    }\n    focus(what) {\n        var _a;\n        if (!this._itemElements.length) {\n            return;\n        }\n        if (what === QuickPickFocus.Second && this._itemElements.length < 2) {\n            what = QuickPickFocus.First;\n        }\n        switch (what) {\n            case QuickPickFocus.First:\n                this._tree.scrollTop = 0;\n                this._tree.focusFirst(undefined, (e) => e.element instanceof QuickPickItemElement);\n                break;\n            case QuickPickFocus.Second:\n                this._tree.scrollTop = 0;\n                this._tree.setFocus([this._itemElements[1]]);\n                break;\n            case QuickPickFocus.Last:\n                this._tree.scrollTop = this._tree.scrollHeight;\n                this._tree.setFocus([this._itemElements[this._itemElements.length - 1]]);\n                break;\n            case QuickPickFocus.Next: {\n                const prevFocus = this._tree.getFocus();\n                this._tree.focusNext(undefined, this._shouldLoop, undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    this._tree.reveal(e.element);\n                    return true;\n                });\n                const currentFocus = this._tree.getFocus();\n                if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[this._itemElements.length - 1]) {\n                    this._onLeave.fire();\n                }\n                break;\n            }\n            case QuickPickFocus.Previous: {\n                const prevFocus = this._tree.getFocus();\n                this._tree.focusPrevious(undefined, this._shouldLoop, undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    const parent = this._tree.getParentElement(e.element);\n                    if (parent === null || parent.children[0] !== e.element) {\n                        this._tree.reveal(e.element);\n                    }\n                    else {\n                        // Only if we are the first child of a separator do we reveal the separator\n                        this._tree.reveal(parent);\n                    }\n                    return true;\n                });\n                const currentFocus = this._tree.getFocus();\n                if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[0]) {\n                    this._onLeave.fire();\n                }\n                break;\n            }\n            case QuickPickFocus.NextPage:\n                this._tree.focusNextPage(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    this._tree.reveal(e.element);\n                    return true;\n                });\n                break;\n            case QuickPickFocus.PreviousPage:\n                this._tree.focusPreviousPage(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    const parent = this._tree.getParentElement(e.element);\n                    if (parent === null || parent.children[0] !== e.element) {\n                        this._tree.reveal(e.element);\n                    }\n                    else {\n                        this._tree.reveal(parent);\n                    }\n                    return true;\n                });\n                break;\n            case QuickPickFocus.NextSeparator: {\n                let foundSeparatorAsItem = false;\n                const before = this._tree.getFocus()[0];\n                this._tree.focusNext(undefined, true, undefined, (e) => {\n                    if (foundSeparatorAsItem) {\n                        // This should be the index right after the separator so it\n                        // is the item we want to focus.\n                        return true;\n                    }\n                    if (e.element instanceof QuickPickSeparatorElement) {\n                        foundSeparatorAsItem = true;\n                        // If the separator is visible, then we should just reveal its first child so it's not as jarring.\n                        if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                            this._tree.reveal(e.element.children[0]);\n                        }\n                        else {\n                            // If the separator is not visible, then we should\n                            // push it up to the top of the list.\n                            this._tree.reveal(e.element, 0);\n                        }\n                    }\n                    else if (e.element instanceof QuickPickItemElement) {\n                        if (e.element.separator) {\n                            if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                                this._tree.reveal(e.element);\n                            }\n                            else {\n                                this._tree.reveal(e.element, 0);\n                            }\n                            return true;\n                        }\n                        else if (e.element === this._elementTree[0]) {\n                            // We should stop at the first item in the list if it's a regular item.\n                            this._tree.reveal(e.element, 0);\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                const after = this._tree.getFocus()[0];\n                if (before === after) {\n                    // If we didn't move, then we should just move to the end\n                    // of the list.\n                    this._tree.scrollTop = this._tree.scrollHeight;\n                    this._tree.setFocus([this._itemElements[this._itemElements.length - 1]]);\n                }\n                break;\n            }\n            case QuickPickFocus.PreviousSeparator: {\n                let focusElement;\n                // If we are already sitting on an inline separator, then we\n                // have already found the _current_ separator and need to\n                // move to the previous one.\n                let foundSeparator = !!((_a = this._tree.getFocus()[0]) === null || _a === void 0 ? void 0 : _a.separator);\n                this._tree.focusPrevious(undefined, true, undefined, (e) => {\n                    if (e.element instanceof QuickPickSeparatorElement) {\n                        if (foundSeparator) {\n                            if (!focusElement) {\n                                if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                                    this._tree.reveal(e.element);\n                                }\n                                else {\n                                    this._tree.reveal(e.element, 0);\n                                }\n                                focusElement = e.element.children[0];\n                            }\n                        }\n                        else {\n                            foundSeparator = true;\n                        }\n                    }\n                    else if (e.element instanceof QuickPickItemElement) {\n                        if (!focusElement) {\n                            if (e.element.separator) {\n                                if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                                    this._tree.reveal(e.element);\n                                }\n                                else {\n                                    this._tree.reveal(e.element, 0);\n                                }\n                                focusElement = e.element;\n                            }\n                            else if (e.element === this._elementTree[0]) {\n                                // We should stop at the first item in the list if it's a regular item.\n                                this._tree.reveal(e.element, 0);\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                });\n                if (focusElement) {\n                    this._tree.setFocus([focusElement]);\n                }\n                break;\n            }\n        }\n    }\n    clearFocus() {\n        this._tree.setFocus([]);\n    }\n    domFocus() {\n        this._tree.domFocus();\n    }\n    layout(maxHeight) {\n        this._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n        // Make sure height aligns with list item heights\n        Math.floor(maxHeight / 44) * 44\n            // Add some extra height so that it's clear there's more to scroll\n            + 6}px` : '';\n        this._tree.layout();\n    }\n    filter(query) {\n        if (!(this._sortByLabel || this._matchOnLabel || this._matchOnDescription || this._matchOnDetail)) {\n            this._tree.layout();\n            return false;\n        }\n        const queryWithWhitespace = query;\n        query = query.trim();\n        // Reset filtering\n        if (!query || !(this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\n            this._itemElements.forEach(element => {\n                element.labelHighlights = undefined;\n                element.descriptionHighlights = undefined;\n                element.detailHighlights = undefined;\n                element.hidden = false;\n                const previous = element.index && this._inputElements[element.index - 1];\n                if (element.item) {\n                    element.separator = previous && previous.type === 'separator' && !previous.buttons ? previous : undefined;\n                }\n            });\n        }\n        // Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\n        else {\n            let currentSeparator;\n            this._elementTree.forEach(element => {\n                var _a, _b, _c, _d;\n                let labelHighlights;\n                if (this.matchOnLabelMode === 'fuzzy') {\n                    labelHighlights = this.matchOnLabel ? (_a = matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneLabel))) !== null && _a !== void 0 ? _a : undefined : undefined;\n                }\n                else {\n                    labelHighlights = this.matchOnLabel ? (_b = matchesContiguousIconAware(queryWithWhitespace, parseLabelWithIcons(element.saneLabel))) !== null && _b !== void 0 ? _b : undefined : undefined;\n                }\n                const descriptionHighlights = this.matchOnDescription ? (_c = matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDescription || ''))) !== null && _c !== void 0 ? _c : undefined : undefined;\n                const detailHighlights = this.matchOnDetail ? (_d = matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDetail || ''))) !== null && _d !== void 0 ? _d : undefined : undefined;\n                if (labelHighlights || descriptionHighlights || detailHighlights) {\n                    element.labelHighlights = labelHighlights;\n                    element.descriptionHighlights = descriptionHighlights;\n                    element.detailHighlights = detailHighlights;\n                    element.hidden = false;\n                }\n                else {\n                    element.labelHighlights = undefined;\n                    element.descriptionHighlights = undefined;\n                    element.detailHighlights = undefined;\n                    element.hidden = element.item ? !element.item.alwaysShow : true;\n                }\n                // Ensure separators are filtered out first before deciding if we need to bring them back\n                if (element.item) {\n                    element.separator = undefined;\n                }\n                else if (element.separator) {\n                    element.hidden = true;\n                }\n                // we can show the separator unless the list gets sorted by match\n                if (!this.sortByLabel) {\n                    const previous = element.index && this._inputElements[element.index - 1];\n                    currentSeparator = previous && previous.type === 'separator' ? previous : currentSeparator;\n                    if (currentSeparator && !element.hidden) {\n                        element.separator = currentSeparator;\n                        currentSeparator = undefined;\n                    }\n                }\n            });\n        }\n        const shownElements = this._elementTree.filter(element => !element.hidden);\n        // Sort by value\n        if (this.sortByLabel && query) {\n            const normalizedSearchValue = query.toLowerCase();\n            shownElements.sort((a, b) => {\n                return compareEntries(a, b, normalizedSearchValue);\n            });\n        }\n        let currentSeparator;\n        const finalElements = shownElements.reduce((result, element, index) => {\n            if (element instanceof QuickPickItemElement) {\n                if (currentSeparator) {\n                    currentSeparator.children.push(element);\n                }\n                else {\n                    result.push(element);\n                }\n            }\n            else if (element instanceof QuickPickSeparatorElement) {\n                element.children = [];\n                currentSeparator = element;\n                result.push(element);\n            }\n            return result;\n        }, new Array());\n        const elements = new Array();\n        for (const element of finalElements) {\n            if (element instanceof QuickPickSeparatorElement) {\n                elements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                    children: element.children.map(e => ({\n                        element: e,\n                        collapsible: false,\n                        collapsed: false,\n                    })),\n                });\n            }\n            else {\n                elements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                });\n            }\n        }\n        this._tree.setChildren(null, elements);\n        this._tree.layout();\n        this._onChangedAllVisibleChecked.fire(this.getAllVisibleChecked());\n        this._onChangedVisibleCount.fire(shownElements.length);\n        return true;\n    }\n    toggleCheckbox() {\n        try {\n            this._shouldFireCheckedEvents = false;\n            const elements = this._tree.getFocus().filter((e) => e instanceof QuickPickItemElement);\n            const allChecked = this._allVisibleChecked(elements);\n            for (const element of elements) {\n                if (!element.checkboxDisabled) {\n                    // Would fire an event if we didn't have the flag set\n                    element.checked = !allChecked;\n                }\n            }\n        }\n        finally {\n            this._shouldFireCheckedEvents = true;\n            this._fireCheckedEvents();\n        }\n    }\n    display(display) {\n        this._container.style.display = display ? '' : 'none';\n    }\n    isDisplayed() {\n        return this._container.style.display !== 'none';\n    }\n    style(styles) {\n        this._tree.style(styles);\n    }\n    toggleHover() {\n        const focused = this._tree.getFocus()[0];\n        if (!(focused === null || focused === void 0 ? void 0 : focused.saneTooltip) || !(focused instanceof QuickPickItemElement)) {\n            return;\n        }\n        // if there's a hover already, hide it (toggle off)\n        if (this._lastHover && !this._lastHover.isDisposed) {\n            this._lastHover.dispose();\n            return;\n        }\n        // If there is no hover, show it (toggle on)\n        this.showHover(focused);\n        const store = new DisposableStore();\n        store.add(this._tree.onDidChangeFocus(e => {\n            if (e.elements[0] instanceof QuickPickItemElement) {\n                this.showHover(e.elements[0]);\n            }\n        }));\n        if (this._lastHover) {\n            store.add(this._lastHover);\n        }\n        this._elementDisposable.add(store);\n    }\n    //#endregion\n    //#region private methods\n    _allVisibleChecked(elements, whenNoneVisible = true) {\n        for (let i = 0, n = elements.length; i < n; i++) {\n            const element = elements[i];\n            if (!element.hidden) {\n                if (!element.checked) {\n                    return false;\n                }\n                else {\n                    whenNoneVisible = true;\n                }\n            }\n        }\n        return whenNoneVisible;\n    }\n    _fireCheckedEvents() {\n        if (!this._shouldFireCheckedEvents) {\n            return;\n        }\n        this._onChangedAllVisibleChecked.fire(this.getAllVisibleChecked());\n        this._onChangedCheckedCount.fire(this.getCheckedCount());\n        this._onChangedCheckedElements.fire(this.getCheckedElements());\n    }\n    fireButtonTriggered(event) {\n        this._onButtonTriggered.fire(event);\n    }\n    fireSeparatorButtonTriggered(event) {\n        this._onSeparatorButtonTriggered.fire(event);\n    }\n    /**\n     * Disposes of the hover and shows a new one for the given index if it has a tooltip.\n     * @param element The element to show the hover for\n     */\n    showHover(element) {\n        var _a, _b, _c;\n        if (this._lastHover && !this._lastHover.isDisposed) {\n            (_b = (_a = this.hoverDelegate).onDidHideHover) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_c = this._lastHover) === null || _c === void 0 ? void 0 : _c.dispose();\n        }\n        if (!element.element || !element.saneTooltip) {\n            return;\n        }\n        this._lastHover = this.hoverDelegate.showHover({\n            content: element.saneTooltip,\n            target: element.element,\n            linkHandler: (url) => {\n                this.linkOpenerDelegate(url);\n            },\n            appearance: {\n                showPointer: true,\n            },\n            container: this._container,\n            position: {\n                hoverPosition: 1 /* HoverPosition.RIGHT */\n            }\n        }, false);\n    }\n};\n__decorate([\n    memoize\n], QuickInputTree.prototype, \"onDidChangeFocus\", null);\n__decorate([\n    memoize\n], QuickInputTree.prototype, \"onDidChangeSelection\", null);\nQuickInputTree = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IAccessibilityService)\n], QuickInputTree);\nexport { QuickInputTree };\nfunction matchesContiguousIconAware(query, target) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesContiguous(query, text);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesContiguous(query, wordToMatchAgainstWithoutIconsTrimmed);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\nfunction matchesContiguous(word, wordToMatchAgainst) {\n    const matchIndex = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n    if (matchIndex !== -1) {\n        return [{ start: matchIndex, end: matchIndex + word.length }];\n    }\n    return null;\n}\nfunction compareEntries(elementA, elementB, lookFor) {\n    const labelHighlightsA = elementA.labelHighlights || [];\n    const labelHighlightsB = elementB.labelHighlights || [];\n    if (labelHighlightsA.length && !labelHighlightsB.length) {\n        return -1;\n    }\n    if (!labelHighlightsA.length && labelHighlightsB.length) {\n        return 1;\n    }\n    if (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\n        return 0;\n    }\n    return compareAnything(elementA.saneSortLabel, elementB.saneSortLabel, lookFor);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}