{"ast":null,"code":"/*!\n * parse-github-url <https://github.com/jonschlinkert/parse-github-url>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar url = require('url');\nvar cache = {};\nmodule.exports = function parseGithubUrl(str) {\n  return cache[str] || (cache[str] = parse(str));\n};\nfunction parse(str) {\n  if (typeof str !== 'string' || !str.length) {\n    return null;\n  }\n  if (str.indexOf('git@gist') !== -1 || str.indexOf('//gist') !== -1) {\n    return null;\n  }\n\n  // parse the URL\n  var obj = url.parse(str);\n  if (typeof obj.path !== 'string' || !obj.path.length || typeof obj.pathname !== 'string' || !obj.pathname.length) {\n    return null;\n  }\n  if (!obj.host && /^git@/.test(str) === true) {\n    // return the correct host for git@ URLs\n    obj.host = url.parse('http://' + str).host;\n  }\n  obj.path = trimSlash(obj.path);\n  obj.pathname = trimSlash(obj.pathname);\n  obj.filepath = null;\n  if (obj.path.indexOf('repos') === 0) {\n    obj.path = obj.path.slice(6);\n  }\n  var seg = obj.path.split('/').filter(Boolean);\n  var hasBlob = seg[2] === 'blob';\n  if (hasBlob && !isChecksum(seg[3])) {\n    obj.branch = seg[3];\n    if (seg.length > 4) {\n      obj.filepath = seg.slice(4).join('/');\n    }\n  }\n  var blob = str.indexOf('blob');\n  if (blob !== -1) {\n    obj.blob = str.slice(blob + 5);\n  }\n  var tree = str.indexOf('tree');\n  if (tree !== -1) {\n    var idx = tree + 5;\n    var branch = str.slice(idx);\n    var slash = branch.indexOf('/');\n    if (slash !== -1) {\n      branch = branch.slice(0, slash);\n    }\n    obj.branch = branch;\n  }\n  obj.owner = owner(seg[0]);\n  obj.name = name(seg[1]);\n  if (seg.length > 1 && obj.owner && obj.name) {\n    obj.repo = obj.owner + '/' + obj.name;\n  } else {\n    var href = obj.href.split(':');\n    if (href.length === 2 && obj.href.indexOf('//') === -1) {\n      obj.repo = obj.repo || href[href.length - 1];\n      var repoSegments = obj.repo.split('/');\n      obj.owner = repoSegments[0];\n      obj.name = repoSegments[1];\n    } else {\n      var match = obj.href.match(/\\/([^\\/]*)$/);\n      obj.owner = match ? match[1] : null;\n      obj.repo = null;\n    }\n    if (obj.repo && (!obj.owner || !obj.name)) {\n      var segs = obj.repo.split('/');\n      if (segs.length === 2) {\n        obj.owner = segs[0];\n        obj.name = segs[1];\n      }\n    }\n  }\n  if (!obj.branch) {\n    obj.branch = seg[2] || getBranch(obj.path, obj);\n    if (seg.length > 3) {\n      obj.filepath = seg.slice(3).join('/');\n    }\n  }\n  obj.host = obj.host || 'github.com';\n  obj.owner = obj.owner || null;\n  obj.name = obj.name || null;\n  obj.repository = obj.repo;\n  return obj;\n}\nfunction isChecksum(str) {\n  return /^[a-f0-9]{40}$/i.test(str);\n}\nfunction getBranch(str, obj) {\n  var segs = str.split('#');\n  var branch;\n  if (segs.length > 1) {\n    branch = segs[segs.length - 1];\n  }\n  if (!branch && obj.hash && obj.hash.charAt(0) === '#') {\n    branch = obj.hash.slice(1);\n  }\n  return branch || 'master';\n}\nfunction trimSlash(path) {\n  return path.charAt(0) === '/' ? path.slice(1) : path;\n}\nfunction name(str) {\n  return str ? str.replace(/^\\W+|\\.git$/g, '') : null;\n}\nfunction owner(str) {\n  if (!str) return null;\n  var idx = str.indexOf(':');\n  if (idx > -1) {\n    return str.slice(idx + 1);\n  }\n  return str;\n}","map":{"version":3,"names":["url","require","cache","module","exports","parseGithubUrl","str","parse","length","indexOf","obj","path","pathname","host","test","trimSlash","filepath","slice","seg","split","filter","Boolean","hasBlob","isChecksum","branch","join","blob","tree","idx","slash","owner","name","repo","href","repoSegments","match","segs","getBranch","repository","hash","charAt","replace"],"sources":["/home/arslan/modojo/node_modules/isomorphic-parse-github-url/index.js"],"sourcesContent":["/*!\n * parse-github-url <https://github.com/jonschlinkert/parse-github-url>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar url = require('url');\nvar cache = {};\n\nmodule.exports = function parseGithubUrl(str) {\n  return cache[str] || (cache[str] = parse(str));\n};\n\nfunction parse(str) {\n  if (typeof str !== 'string' || !str.length) {\n    return null;\n  }\n\n  if (str.indexOf('git@gist') !== -1 || str.indexOf('//gist') !== -1) {\n    return null;\n  }\n\n  // parse the URL\n  var obj = url.parse(str);\n  if (typeof obj.path !== 'string' || !obj.path.length || typeof obj.pathname !== 'string' || !obj.pathname.length) {\n    return null;\n  }\n\n  if (!obj.host && /^git@/.test(str) === true) {\n    // return the correct host for git@ URLs\n    obj.host = url.parse('http://' + str).host;\n  }\n\n  obj.path = trimSlash(obj.path);\n  obj.pathname = trimSlash(obj.pathname);\n  obj.filepath = null;\n\n  if (obj.path.indexOf('repos') === 0) {\n    obj.path = obj.path.slice(6);\n  }\n\n  var seg = obj.path.split('/').filter(Boolean);\n  var hasBlob = seg[2] === 'blob';\n  if (hasBlob && !isChecksum(seg[3])) {\n    obj.branch = seg[3];\n    if (seg.length > 4) {\n      obj.filepath = seg.slice(4).join('/');\n    }\n  }\n\n  var blob = str.indexOf('blob');\n  if (blob !== -1) {\n    obj.blob = str.slice(blob + 5);\n  }\n\n  var tree = str.indexOf('tree');\n  if (tree !== -1) {\n    var idx = tree + 5;\n    var branch = str.slice(idx);\n    var slash = branch.indexOf('/');\n    if (slash !== -1) {\n      branch = branch.slice(0, slash);\n    }\n    obj.branch = branch;\n  }\n\n  obj.owner = owner(seg[0]);\n  obj.name = name(seg[1]);\n\n  if (seg.length > 1 && obj.owner && obj.name) {\n    obj.repo = obj.owner + '/' + obj.name;\n  } else {\n    var href = obj.href.split(':');\n    if (href.length === 2 && obj.href.indexOf('//') === -1) {\n      obj.repo = obj.repo || href[href.length - 1];\n      var repoSegments = obj.repo.split('/');\n      obj.owner = repoSegments[0];\n      obj.name = repoSegments[1];\n\n    } else {\n      var match = obj.href.match(/\\/([^\\/]*)$/);\n      obj.owner = match ? match[1] : null;\n      obj.repo = null;\n    }\n\n    if (obj.repo && (!obj.owner || !obj.name)) {\n      var segs = obj.repo.split('/');\n      if (segs.length === 2) {\n        obj.owner = segs[0];\n        obj.name = segs[1];\n      }\n    }\n  }\n\n  if (!obj.branch) {\n    obj.branch = seg[2] || getBranch(obj.path, obj);\n    if (seg.length > 3) {\n      obj.filepath = seg.slice(3).join('/');\n    }\n  }\n\n  obj.host = obj.host || 'github.com';\n  obj.owner = obj.owner || null;\n  obj.name = obj.name || null;\n  obj.repository = obj.repo;\n  return obj;\n}\n\nfunction isChecksum(str) {\n  return /^[a-f0-9]{40}$/i.test(str);\n}\n\nfunction getBranch(str, obj) {\n  var segs = str.split('#');\n  var branch;\n  if (segs.length > 1) {\n    branch = segs[segs.length - 1];\n  }\n  if (!branch && obj.hash && obj.hash.charAt(0) === '#') {\n    branch = obj.hash.slice(1);\n  }\n  return branch || 'master';\n}\n\nfunction trimSlash(path) {\n  return path.charAt(0) === '/' ? path.slice(1) : path;\n}\n\nfunction name(str) {\n  return str ? str.replace(/^\\W+|\\.git$/g, '') : null;\n}\n\nfunction owner(str) {\n  if (!str) return null;\n  var idx = str.indexOf(':');\n  if (idx > -1) {\n    return str.slice(idx + 1);\n  }\n  return str;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}