{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar ContentHoverController_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { InlayHintsHover } from '../../inlayHints/browser/inlayHintsHover.js';\nimport { ContentHoverWidget } from './contentHoverWidget.js';\nimport { ContentHoverComputer } from './contentHoverComputer.js';\nimport { ContentHoverVisibleData, HoverResult } from './contentHoverTypes.js';\nimport { EditorHoverStatusBar } from './contentHoverStatusBar.js';\nimport { Emitter } from '../../../../base/common/event.js';\nlet ContentHoverController = ContentHoverController_1 = class ContentHoverController extends Disposable {\n  constructor(_editor, _instantiationService, _keybindingService) {\n    super();\n    this._editor = _editor;\n    this._instantiationService = _instantiationService;\n    this._keybindingService = _keybindingService;\n    this._currentResult = null;\n    this._onContentsChanged = this._register(new Emitter());\n    this.onContentsChanged = this._onContentsChanged.event;\n    this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n    // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n    this._participants = [];\n    for (const participant of HoverParticipantRegistry.getAll()) {\n      const participantInstance = this._instantiationService.createInstance(participant, this._editor);\n      if (participantInstance instanceof MarkdownHoverParticipant && !(participantInstance instanceof InlayHintsHover)) {\n        this._markdownHoverParticipant = participantInstance;\n      }\n      this._participants.push(participantInstance);\n    }\n    this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n    this._computer = new ContentHoverComputer(this._editor, this._participants);\n    this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n    this._register(this._hoverOperation.onResult(result => {\n      if (!this._computer.anchor) {\n        // invalid state, ignore result\n        return;\n      }\n      const messages = result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value;\n      this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n    }));\n    this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', e => {\n      if (e.equals(9 /* KeyCode.Escape */)) {\n        this.hide();\n      }\n    }));\n    this._register(TokenizationRegistry.onDidChange(() => {\n      if (this._widget.position && this._currentResult) {\n        this._setCurrentResult(this._currentResult); // render again\n      }\n    }));\n  }\n  /**\n   * Returns true if the hover shows now or will show.\n   */\n  _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n    if (!this._widget.position || !this._currentResult) {\n      // The hover is not visible\n      if (anchor) {\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n      }\n      return false;\n    }\n    // The hover is currently visible\n    const isHoverSticky = this._editor.getOption(60 /* EditorOption.hover */).sticky;\n    const isGettingCloser = isHoverSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy);\n    if (isGettingCloser) {\n      // The mouse is getting closer to the hover, so we will keep the hover untouched\n      // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n      if (anchor) {\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n      }\n      return true;\n    }\n    if (!anchor) {\n      this._setCurrentResult(null);\n      return false;\n    }\n    if (anchor && this._currentResult.anchor.equals(anchor)) {\n      // The widget is currently showing results for the exact same anchor, so no update is needed\n      return true;\n    }\n    if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n      // The new anchor is not compatible with the previous anchor\n      this._setCurrentResult(null);\n      this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n      return true;\n    }\n    // We aren't getting any closer to the hover, so we will filter existing results\n    // and keep those which also apply to the new anchor.\n    this._setCurrentResult(this._currentResult.filter(anchor));\n    this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n    return true;\n  }\n  _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n    if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n      // We have to start a hover operation at the exact same anchor as before, so no work is needed\n      return;\n    }\n    this._hoverOperation.cancel();\n    this._computer.anchor = anchor;\n    this._computer.shouldFocus = focus;\n    this._computer.source = source;\n    this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n    this._hoverOperation.start(mode);\n  }\n  _setCurrentResult(hoverResult) {\n    if (this._currentResult === hoverResult) {\n      // avoid updating the DOM to avoid resetting the user selection\n      return;\n    }\n    if (hoverResult && hoverResult.messages.length === 0) {\n      hoverResult = null;\n    }\n    this._currentResult = hoverResult;\n    if (this._currentResult) {\n      this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n    } else {\n      this._widget.hide();\n    }\n  }\n  _addLoadingMessage(result) {\n    if (this._computer.anchor) {\n      for (const participant of this._participants) {\n        if (participant.createLoadingMessage) {\n          const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n          if (loadingMessage) {\n            return result.slice(0).concat([loadingMessage]);\n          }\n        }\n      }\n    }\n    return result;\n  }\n  _withResult(hoverResult) {\n    if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n      // The hover is visible with a previous complete result.\n      if (!hoverResult.isComplete) {\n        // Instead of rendering the new partial result, we wait for the result to be complete.\n        return;\n      }\n      if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n        // The hover would now hide normally, so we'll keep the previous messages\n        return;\n      }\n    }\n    this._setCurrentResult(hoverResult);\n  }\n  _renderMessages(anchor, messages) {\n    const {\n      showAtPosition,\n      showAtSecondaryPosition,\n      highlightRange\n    } = ContentHoverController_1.computeHoverRanges(this._editor, anchor.range, messages);\n    const disposables = new DisposableStore();\n    const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n    const fragment = document.createDocumentFragment();\n    let colorPicker = null;\n    const context = {\n      fragment,\n      statusBar,\n      setColorPicker: widget => colorPicker = widget,\n      onContentsChanged: () => this._doOnContentsChanged(),\n      setMinimumDimensions: dimensions => this._widget.setMinimumDimensions(dimensions),\n      hide: () => this.hide()\n    };\n    for (const participant of this._participants) {\n      const hoverParts = messages.filter(msg => msg.owner === participant);\n      if (hoverParts.length > 0) {\n        disposables.add(participant.renderHoverParts(context, hoverParts));\n      }\n    }\n    const isBeforeContent = messages.some(m => m.isBeforeContent);\n    if (statusBar.hasContent) {\n      fragment.appendChild(statusBar.hoverElement);\n    }\n    if (fragment.hasChildNodes()) {\n      if (highlightRange) {\n        const highlightDecoration = this._editor.createDecorationsCollection();\n        highlightDecoration.set([{\n          range: highlightRange,\n          options: ContentHoverController_1._DECORATION_OPTIONS\n        }]);\n        disposables.add(toDisposable(() => {\n          highlightDecoration.clear();\n        }));\n      }\n      this._widget.showAt(fragment, new ContentHoverVisibleData(anchor.initialMousePosX, anchor.initialMousePosY, colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(60 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, disposables));\n    } else {\n      disposables.dispose();\n    }\n  }\n  _doOnContentsChanged() {\n    this._onContentsChanged.fire();\n    this._widget.onContentsChanged();\n  }\n  static computeHoverRanges(editor, anchorRange, messages) {\n    let startColumnBoundary = 1;\n    if (editor.hasModel()) {\n      // Ensure the range is on the current view line\n      const viewModel = editor._getViewModel();\n      const coordinatesConverter = viewModel.coordinatesConverter;\n      const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n      const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n      startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n    }\n    // The anchor range is always on a single line\n    const anchorLineNumber = anchorRange.startLineNumber;\n    let renderStartColumn = anchorRange.startColumn;\n    let highlightRange = messages[0].range;\n    let forceShowAtRange = null;\n    for (const msg of messages) {\n      highlightRange = Range.plusRange(highlightRange, msg.range);\n      if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n        // this message has a range that is completely sitting on the line of the anchor\n        renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n      }\n      if (msg.forceShowAtRange) {\n        forceShowAtRange = msg.range;\n      }\n    }\n    const showAtPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn);\n    const showAtSecondaryPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn);\n    return {\n      showAtPosition,\n      showAtSecondaryPosition,\n      highlightRange\n    };\n  }\n  showsOrWillShow(mouseEvent) {\n    if (this._widget.isResizing) {\n      return true;\n    }\n    const anchorCandidates = [];\n    for (const participant of this._participants) {\n      if (participant.suggestHoverAnchor) {\n        const anchor = participant.suggestHoverAnchor(mouseEvent);\n        if (anchor) {\n          anchorCandidates.push(anchor);\n        }\n      }\n    }\n    const target = mouseEvent.target;\n    if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n      anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n    }\n    if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n      const epsilon = this._editor.getOption(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n      if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n        // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n        anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n      }\n    }\n    if (anchorCandidates.length === 0) {\n      return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    anchorCandidates.sort((a, b) => b.priority - a.priority);\n    return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n  }\n  startShowingAtRange(range, mode, source, focus) {\n    this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n  }\n  async updateMarkdownHoverVerbosityLevel(action, index, focus) {\n    var _a;\n    (_a = this._markdownHoverParticipant) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverVerbosityLevel(action, index, focus);\n  }\n  markdownHoverContentAtIndex(index) {\n    var _a, _b;\n    return (_b = (_a = this._markdownHoverParticipant) === null || _a === void 0 ? void 0 : _a.markdownHoverContentAtIndex(index)) !== null && _b !== void 0 ? _b : '';\n  }\n  doesMarkdownHoverAtIndexSupportVerbosityAction(index, action) {\n    var _a, _b;\n    return (_b = (_a = this._markdownHoverParticipant) === null || _a === void 0 ? void 0 : _a.doesMarkdownHoverAtIndexSupportVerbosityAction(index, action)) !== null && _b !== void 0 ? _b : false;\n  }\n  containsNode(node) {\n    return node ? this._widget.getDomNode().contains(node) : false;\n  }\n  focus() {\n    this._widget.focus();\n  }\n  scrollUp() {\n    this._widget.scrollUp();\n  }\n  scrollDown() {\n    this._widget.scrollDown();\n  }\n  scrollLeft() {\n    this._widget.scrollLeft();\n  }\n  scrollRight() {\n    this._widget.scrollRight();\n  }\n  pageUp() {\n    this._widget.pageUp();\n  }\n  pageDown() {\n    this._widget.pageDown();\n  }\n  goToTop() {\n    this._widget.goToTop();\n  }\n  goToBottom() {\n    this._widget.goToBottom();\n  }\n  hide() {\n    this._computer.anchor = null;\n    this._hoverOperation.cancel();\n    this._setCurrentResult(null);\n  }\n  get isColorPickerVisible() {\n    return this._widget.isColorPickerVisible;\n  }\n  get isVisibleFromKeyboard() {\n    return this._widget.isVisibleFromKeyboard;\n  }\n  get isVisible() {\n    return this._widget.isVisible;\n  }\n  get isFocused() {\n    return this._widget.isFocused;\n  }\n  get isResizing() {\n    return this._widget.isResizing;\n  }\n  get widget() {\n    return this._widget;\n  }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n  description: 'content-hover-highlight',\n  className: 'hoverHighlight'\n});\nContentHoverController = ContentHoverController_1 = __decorate([__param(1, IInstantiationService), __param(2, IKeybindingService)], ContentHoverController);\nexport { ContentHoverController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","ContentHoverController_1","dom","Disposable","DisposableStore","toDisposable","Position","Range","ModelDecorationOptions","TokenizationRegistry","HoverOperation","HoverParticipantRegistry","HoverRangeAnchor","IInstantiationService","IKeybindingService","MarkdownHoverParticipant","InlayHintsHover","ContentHoverWidget","ContentHoverComputer","ContentHoverVisibleData","HoverResult","EditorHoverStatusBar","Emitter","ContentHoverController","constructor","_editor","_instantiationService","_keybindingService","_currentResult","_onContentsChanged","_register","onContentsChanged","event","_widget","createInstance","_participants","participant","getAll","participantInstance","_markdownHoverParticipant","push","sort","p1","p2","hoverOrdinal","_computer","_hoverOperation","onResult","result","anchor","messages","hasLoadingMessage","_addLoadingMessage","value","_withResult","isComplete","addStandardDisposableListener","getDomNode","e","equals","hide","onDidChange","position","_setCurrentResult","_startShowingOrUpdateHover","mode","source","focus","mouseEvent","_startHoverOperationIfNecessary","isHoverSticky","getOption","sticky","isGettingCloser","isMouseGettingCloser","posx","posy","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","cancel","shouldFocus","start","hoverResult","_renderMessages","createLoadingMessage","loadingMessage","slice","concat","showAtPosition","showAtSecondaryPosition","highlightRange","computeHoverRanges","range","disposables","statusBar","add","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","_doOnContentsChanged","setMinimumDimensions","dimensions","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","m","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","clear","showAt","initialMousePosX","initialMousePosY","above","dispose","fire","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","plusRange","endLineNumber","Math","max","min","getStartPosition","showsOrWillShow","isResizing","anchorCandidates","suggestHoverAnchor","type","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","a","b","priority","startShowingAtRange","undefined","updateMarkdownHoverVerbosityLevel","action","index","_a","markdownHoverContentAtIndex","_b","doesMarkdownHoverAtIndexSupportVerbosityAction","containsNode","node","contains","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","isColorPickerVisible","isVisibleFromKeyboard","isVisible","isFocused","register","description","className"],"sources":["/home/arslan/modojo/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHoverController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ContentHoverController_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { InlayHintsHover } from '../../inlayHints/browser/inlayHintsHover.js';\nimport { ContentHoverWidget } from './contentHoverWidget.js';\nimport { ContentHoverComputer } from './contentHoverComputer.js';\nimport { ContentHoverVisibleData, HoverResult } from './contentHoverTypes.js';\nimport { EditorHoverStatusBar } from './contentHoverStatusBar.js';\nimport { Emitter } from '../../../../base/common/event.js';\nlet ContentHoverController = ContentHoverController_1 = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._currentResult = null;\n        this._onContentsChanged = this._register(new Emitter());\n        this.onContentsChanged = this._onContentsChanged.event;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            const participantInstance = this._instantiationService.createInstance(participant, this._editor);\n            if (participantInstance instanceof MarkdownHoverParticipant && !(participantInstance instanceof InlayHintsHover)) {\n                this._markdownHoverParticipant = participantInstance;\n            }\n            this._participants.push(participantInstance);\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const isHoverSticky = this._editor.getOption(60 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (isHoverSticky\n            && mouseEvent\n            && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController_1.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._doOnContentsChanged(),\n            setMinimumDimensions: (dimensions) => this._widget.setMinimumDimensions(dimensions),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController_1._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(anchor.initialMousePosX, anchor.initialMousePosY, colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(60 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    _doOnContentsChanged() {\n        this._onContentsChanged.fire();\n        this._widget.onContentsChanged();\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        const showAtPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn);\n        const showAtSecondaryPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn);\n        return {\n            showAtPosition,\n            showAtSecondaryPosition,\n            highlightRange\n        };\n    }\n    showsOrWillShow(mouseEvent) {\n        if (this._widget.isResizing) {\n            return true;\n        }\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines\n                && typeof target.detail.horizontalDistanceToText === 'number'\n                && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    async updateMarkdownHoverVerbosityLevel(action, index, focus) {\n        var _a;\n        (_a = this._markdownHoverParticipant) === null || _a === void 0 ? void 0 : _a.updateMarkdownHoverVerbosityLevel(action, index, focus);\n    }\n    markdownHoverContentAtIndex(index) {\n        var _a, _b;\n        return (_b = (_a = this._markdownHoverParticipant) === null || _a === void 0 ? void 0 : _a.markdownHoverContentAtIndex(index)) !== null && _b !== void 0 ? _b : '';\n    }\n    doesMarkdownHoverAtIndexSupportVerbosityAction(index, action) {\n        var _a, _b;\n        return (_b = (_a = this._markdownHoverParticipant) === null || _a === void 0 ? void 0 : _a.doesMarkdownHoverAtIndexSupportVerbosityAction(index, action)) !== null && _b !== void 0 ? _b : false;\n    }\n    containsNode(node) {\n        return (node ? this._widget.getDomNode().contains(node) : false);\n    }\n    focus() {\n        this._widget.focus();\n    }\n    scrollUp() {\n        this._widget.scrollUp();\n    }\n    scrollDown() {\n        this._widget.scrollDown();\n    }\n    scrollLeft() {\n        this._widget.scrollLeft();\n    }\n    scrollRight() {\n        this._widget.scrollRight();\n    }\n    pageUp() {\n        this._widget.pageUp();\n    }\n    pageDown() {\n        this._widget.pageDown();\n    }\n    goToTop() {\n        this._widget.goToTop();\n    }\n    goToBottom() {\n        this._widget.goToBottom();\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    get isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    get isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    get isVisible() {\n        return this._widget.isVisible;\n    }\n    get isFocused() {\n        return this._widget.isFocused;\n    }\n    get isResizing() {\n        return this._widget.isResizing;\n    }\n    get widget() {\n        return this._widget;\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = ContentHoverController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}